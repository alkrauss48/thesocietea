-- MySQL dump 10.13  Distrib 5.5.37, for debian-linux-gnu (i686)
--
-- Host: localhost    Database: the_societea_2
-- ------------------------------------------------------
-- Server version	5.5.37-0ubuntu0.13.10.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_cfs_sessions`
--

DROP TABLE IF EXISTS `wp_cfs_sessions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_cfs_sessions` (
  `id` varchar(32) NOT NULL DEFAULT '',
  `data` text,
  `expires` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_cfs_sessions`
--

LOCK TABLES `wp_cfs_sessions` WRITE;
/*!40000 ALTER TABLE `wp_cfs_sessions` DISABLE KEYS */;
INSERT INTO `wp_cfs_sessions` VALUES ('cf12154f134b5d78dc6b2440e7ce9be6','a:7:{s:7:\"post_id\";i:4;s:9:\"post_type\";s:4:\"post\";s:11:\"post_status\";s:5:\"draft\";s:12:\"field_groups\";a:1:{i:0;i:139;}s:20:\"confirmation_message\";s:0:\"\";s:16:\"confirmation_url\";s:0:\"\";s:9:\"front_end\";b:0;}','1408470376'),('d013071301b8baddbe238f5b2053cbe0','a:7:{s:7:\"post_id\";i:4;s:9:\"post_type\";s:4:\"post\";s:11:\"post_status\";s:5:\"draft\";s:12:\"field_groups\";a:1:{i:0;i:139;}s:20:\"confirmation_message\";s:0:\"\";s:16:\"confirmation_url\";s:0:\"\";s:9:\"front_end\";b:0;}','1408470443'),('fce3e591416511c73b2c46255ac20adb','a:7:{s:7:\"post_id\";i:4;s:9:\"post_type\";s:4:\"post\";s:11:\"post_status\";s:5:\"draft\";s:12:\"field_groups\";a:1:{i:0;i:139;}s:20:\"confirmation_message\";s:0:\"\";s:16:\"confirmation_url\";s:0:\"\";s:9:\"front_end\";b:0;}','1408470486');
/*!40000 ALTER TABLE `wp_cfs_sessions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_cfs_values`
--

DROP TABLE IF EXISTS `wp_cfs_values`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_cfs_values` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(10) unsigned DEFAULT NULL,
  `meta_id` int(10) unsigned DEFAULT NULL,
  `post_id` int(10) unsigned DEFAULT NULL,
  `base_field_id` int(10) unsigned DEFAULT '0',
  `hierarchy` text,
  `depth` int(10) unsigned DEFAULT '0',
  `weight` int(10) unsigned DEFAULT '0',
  `sub_weight` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `field_id_idx` (`field_id`),
  KEY `post_id_idx` (`post_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2821 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_cfs_values`
--

LOCK TABLES `wp_cfs_values` WRITE;
/*!40000 ALTER TABLE `wp_cfs_values` DISABLE KEYS */;
INSERT INTO `wp_cfs_values` VALUES (3,1,148,6,0,'',0,0,0),(348,7,627,66,0,'',0,0,0),(349,6,628,66,0,'',0,0,0),(350,8,629,66,0,'',0,0,0),(351,9,630,66,0,'',0,0,0),(352,10,631,66,0,'',0,0,0),(353,11,632,66,0,'',0,0,0),(354,3,633,66,2,'2:0:3',1,0,0),(355,4,634,66,2,'2:0:4',1,0,0),(356,5,635,66,2,'2:0:5',1,0,0),(357,3,636,66,2,'2:1:3',1,1,0),(358,4,637,66,2,'2:1:4',1,1,0),(359,5,638,66,2,'2:1:5',1,1,0),(360,3,639,66,2,'2:2:3',1,2,0),(361,4,640,66,2,'2:2:4',1,2,0),(362,5,641,66,2,'2:2:5',1,2,0),(363,3,642,66,2,'2:3:3',1,3,0),(364,4,643,66,2,'2:3:4',1,3,0),(365,5,644,66,2,'2:3:5',1,3,0),(582,1,954,30,0,'',0,0,0),(583,16,955,30,0,'',0,0,0),(2422,1,2870,16,0,'',0,0,0),(2423,16,2871,16,0,'',0,0,0),(2538,7,3048,252,0,'',0,0,0),(2539,6,3049,252,0,'',0,0,0),(2540,8,3050,252,0,'',0,0,0),(2541,9,3051,252,0,'',0,0,0),(2542,10,3052,252,0,'',0,0,0),(2543,11,3053,252,0,'',0,0,0),(2544,3,3054,252,2,'2:0:3',1,0,0),(2545,4,3055,252,2,'2:0:4',1,0,0),(2546,5,3056,252,2,'2:0:5',1,0,0),(2547,3,3057,252,2,'2:1:3',1,1,0),(2548,4,3058,252,2,'2:1:4',1,1,0),(2549,5,3059,252,2,'2:1:5',1,1,0),(2550,3,3060,252,2,'2:2:3',1,2,0),(2551,4,3061,252,2,'2:2:4',1,2,0),(2552,5,3062,252,2,'2:2:5',1,2,0),(2553,3,3063,252,2,'2:3:3',1,3,0),(2554,4,3064,252,2,'2:3:4',1,3,0),(2555,5,3065,252,2,'2:3:5',1,3,0),(2556,7,3066,63,0,'',0,0,0),(2557,6,3067,63,0,'',0,0,0),(2558,8,3068,63,0,'',0,0,0),(2559,9,3069,63,0,'',0,0,0),(2560,10,3070,63,0,'',0,0,0),(2561,11,3071,63,0,'',0,0,0),(2562,3,3072,63,2,'2:0:3',1,0,0),(2563,4,3073,63,2,'2:0:4',1,0,0),(2564,5,3074,63,2,'2:0:5',1,0,0),(2565,3,3075,63,2,'2:1:3',1,1,0),(2566,4,3076,63,2,'2:1:4',1,1,0),(2567,5,3077,63,2,'2:1:5',1,1,0),(2568,3,3078,63,2,'2:2:3',1,2,0),(2569,4,3079,63,2,'2:2:4',1,2,0),(2570,5,3080,63,2,'2:2:5',1,2,0),(2571,3,3081,63,2,'2:3:3',1,3,0),(2572,4,3082,63,2,'2:3:4',1,3,0),(2573,5,3083,63,2,'2:3:5',1,3,0),(2574,7,3084,64,0,'',0,0,0),(2575,6,3085,64,0,'',0,0,0),(2576,8,3086,64,0,'',0,0,0),(2577,9,3087,64,0,'',0,0,0),(2578,10,3088,64,0,'',0,0,0),(2579,11,3089,64,0,'',0,0,0),(2580,3,3090,64,2,'2:0:3',1,0,0),(2581,4,3091,64,2,'2:0:4',1,0,0),(2582,5,3092,64,2,'2:0:5',1,0,0),(2583,3,3093,64,2,'2:1:3',1,1,0),(2584,4,3094,64,2,'2:1:4',1,1,0),(2585,5,3095,64,2,'2:1:5',1,1,0),(2586,3,3096,64,2,'2:2:3',1,2,0),(2587,4,3097,64,2,'2:2:4',1,2,0),(2588,5,3098,64,2,'2:2:5',1,2,0),(2589,3,3099,64,2,'2:3:3',1,3,0),(2590,4,3100,64,2,'2:3:4',1,3,0),(2591,5,3101,64,2,'2:3:5',1,3,0),(2592,7,3102,65,0,'',0,0,0),(2593,6,3103,65,0,'',0,0,0),(2594,8,3104,65,0,'',0,0,0),(2595,9,3105,65,0,'',0,0,0),(2596,10,3106,65,0,'',0,0,0),(2597,11,3107,65,0,'',0,0,0),(2598,3,3108,65,2,'2:0:3',1,0,0),(2599,4,3109,65,2,'2:0:4',1,0,0),(2600,5,3110,65,2,'2:0:5',1,0,0),(2601,3,3111,65,2,'2:1:3',1,1,0),(2602,4,3112,65,2,'2:1:4',1,1,0),(2603,5,3113,65,2,'2:1:5',1,1,0),(2604,3,3114,65,2,'2:2:3',1,2,0),(2605,4,3115,65,2,'2:2:4',1,2,0),(2606,5,3116,65,2,'2:2:5',1,2,0),(2607,3,3117,65,2,'2:3:3',1,3,0),(2608,4,3118,65,2,'2:3:4',1,3,0),(2609,5,3119,65,2,'2:3:5',1,3,0),(2610,7,3120,214,0,'',0,0,0),(2611,6,3121,214,0,'',0,0,0),(2612,8,3122,214,0,'',0,0,0),(2613,9,3123,214,0,'',0,0,0),(2614,10,3124,214,0,'',0,0,0),(2615,11,3125,214,0,'',0,0,0),(2616,3,3126,214,2,'2:0:3',1,0,0),(2617,4,3127,214,2,'2:0:4',1,0,0),(2618,5,3128,214,2,'2:0:5',1,0,0),(2619,3,3129,214,2,'2:1:3',1,1,0),(2620,4,3130,214,2,'2:1:4',1,1,0),(2621,5,3131,214,2,'2:1:5',1,1,0),(2622,3,3132,214,2,'2:2:3',1,2,0),(2623,4,3133,214,2,'2:2:4',1,2,0),(2624,5,3134,214,2,'2:2:5',1,2,0),(2625,3,3135,214,2,'2:3:3',1,3,0),(2626,4,3136,214,2,'2:3:4',1,3,0),(2627,5,3137,214,2,'2:3:5',1,3,0),(2628,7,3138,68,0,'',0,0,0),(2629,6,3139,68,0,'',0,0,0),(2630,8,3140,68,0,'',0,0,0),(2631,9,3141,68,0,'',0,0,0),(2632,10,3142,68,0,'',0,0,0),(2633,11,3143,68,0,'',0,0,0),(2634,3,3144,68,2,'2:0:3',1,0,0),(2635,4,3145,68,2,'2:0:4',1,0,0),(2636,5,3146,68,2,'2:0:5',1,0,0),(2637,3,3147,68,2,'2:1:3',1,1,0),(2638,4,3148,68,2,'2:1:4',1,1,0),(2639,5,3149,68,2,'2:1:5',1,1,0),(2640,7,3150,38,0,'',0,0,0),(2641,6,3151,38,0,'',0,0,0),(2642,8,3152,38,0,'',0,0,0),(2643,9,3153,38,0,'',0,0,0),(2644,10,3154,38,0,'',0,0,0),(2645,11,3155,38,0,'',0,0,0),(2646,3,3156,38,2,'2:0:3',1,0,0),(2647,4,3157,38,2,'2:0:4',1,0,0),(2648,5,3158,38,2,'2:0:5',1,0,0),(2649,3,3159,38,2,'2:1:3',1,1,0),(2650,4,3160,38,2,'2:1:4',1,1,0),(2651,5,3161,38,2,'2:1:5',1,1,0),(2652,3,3162,38,2,'2:2:3',1,2,0),(2653,4,3163,38,2,'2:2:4',1,2,0),(2654,5,3164,38,2,'2:2:5',1,2,0),(2655,3,3165,38,2,'2:3:3',1,3,0),(2656,4,3166,38,2,'2:3:4',1,3,0),(2657,5,3167,38,2,'2:3:5',1,3,0),(2658,7,3168,67,0,'',0,0,0),(2659,6,3169,67,0,'',0,0,0),(2660,8,3170,67,0,'',0,0,0),(2661,9,3171,67,0,'',0,0,0),(2662,10,3172,67,0,'',0,0,0),(2663,11,3173,67,0,'',0,0,0),(2664,3,3174,67,2,'2:0:3',1,0,0),(2665,4,3175,67,2,'2:0:4',1,0,0),(2666,5,3176,67,2,'2:0:5',1,0,0),(2667,3,3177,67,2,'2:1:3',1,1,0),(2668,4,3178,67,2,'2:1:4',1,1,0),(2669,5,3179,67,2,'2:1:5',1,1,0),(2670,3,3180,67,2,'2:2:3',1,2,0),(2671,4,3181,67,2,'2:2:4',1,2,0),(2672,5,3182,67,2,'2:2:5',1,2,0),(2673,7,3183,71,0,'',0,0,0),(2674,6,3184,71,0,'',0,0,0),(2675,8,3185,71,0,'',0,0,0),(2676,9,3186,71,0,'',0,0,0),(2677,10,3187,71,0,'',0,0,0),(2678,11,3188,71,0,'',0,0,0),(2679,3,3189,71,2,'2:0:3',1,0,0),(2680,4,3190,71,2,'2:0:4',1,0,0),(2681,5,3191,71,2,'2:0:5',1,0,0),(2682,3,3192,71,2,'2:1:3',1,1,0),(2683,4,3193,71,2,'2:1:4',1,1,0),(2684,5,3194,71,2,'2:1:5',1,1,0),(2685,3,3195,71,2,'2:2:3',1,2,0),(2686,4,3196,71,2,'2:2:4',1,2,0),(2687,5,3197,71,2,'2:2:5',1,2,0),(2688,3,3198,71,2,'2:3:3',1,3,0),(2689,4,3199,71,2,'2:3:4',1,3,0),(2690,5,3200,71,2,'2:3:5',1,3,0),(2691,7,3201,69,0,'',0,0,0),(2692,6,3202,69,0,'',0,0,0),(2693,8,3203,69,0,'',0,0,0),(2694,9,3204,69,0,'',0,0,0),(2695,10,3205,69,0,'',0,0,0),(2696,11,3206,69,0,'',0,0,0),(2697,3,3207,69,2,'2:0:3',1,0,0),(2698,4,3208,69,2,'2:0:4',1,0,0),(2699,5,3209,69,2,'2:0:5',1,0,0),(2700,3,3210,69,2,'2:1:3',1,1,0),(2701,4,3211,69,2,'2:1:4',1,1,0),(2702,5,3212,69,2,'2:1:5',1,1,0),(2703,3,3213,69,2,'2:2:3',1,2,0),(2704,4,3214,69,2,'2:2:4',1,2,0),(2705,5,3215,69,2,'2:2:5',1,2,0),(2706,3,3216,69,2,'2:3:3',1,3,0),(2707,4,3217,69,2,'2:3:4',1,3,0),(2708,5,3218,69,2,'2:3:5',1,3,0),(2709,7,3219,70,0,'',0,0,0),(2710,6,3220,70,0,'',0,0,0),(2711,8,3221,70,0,'',0,0,0),(2712,9,3222,70,0,'',0,0,0),(2713,10,3223,70,0,'',0,0,0),(2714,11,3224,70,0,'',0,0,0),(2715,3,3225,70,2,'2:0:3',1,0,0),(2716,4,3226,70,2,'2:0:4',1,0,0),(2717,5,3227,70,2,'2:0:5',1,0,0),(2718,3,3228,70,2,'2:1:3',1,1,0),(2719,4,3229,70,2,'2:1:4',1,1,0),(2720,5,3230,70,2,'2:1:5',1,1,0),(2721,3,3231,70,2,'2:2:3',1,2,0),(2722,4,3232,70,2,'2:2:4',1,2,0),(2723,5,3233,70,2,'2:2:5',1,2,0),(2724,3,3234,70,2,'2:3:3',1,3,0),(2725,4,3235,70,2,'2:3:4',1,3,0),(2726,5,3236,70,2,'2:3:5',1,3,0),(2727,1,3237,13,0,'',0,0,0),(2728,16,3238,13,0,'',0,0,0),(2729,18,3239,13,17,'17:0:18',1,0,0),(2730,22,3240,13,17,'17:0:22',1,0,0),(2731,20,3241,13,17,'17:0:19:0:20',2,0,0),(2732,21,3242,13,17,'17:0:19:0:21',2,0,0),(2733,20,3243,13,17,'17:0:19:1:20',2,1,0),(2734,21,3244,13,17,'17:0:19:1:21',2,1,0),(2735,20,3245,13,17,'17:0:19:2:20',2,2,0),(2736,21,3246,13,17,'17:0:19:2:21',2,2,0),(2737,20,3247,13,17,'17:0:19:3:20',2,3,0),(2738,21,3248,13,17,'17:0:19:3:21',2,3,0),(2739,20,3249,13,17,'17:0:19:4:20',2,4,0),(2740,21,3250,13,17,'17:0:19:4:21',2,4,0),(2741,20,3251,13,17,'17:0:19:6:20',2,6,0),(2742,21,3252,13,17,'17:0:19:6:21',2,6,0),(2743,20,3253,13,17,'17:0:19:7:20',2,7,0),(2744,21,3254,13,17,'17:0:19:7:21',2,7,0),(2745,20,3255,13,17,'17:0:19:8:20',2,8,0),(2746,21,3256,13,17,'17:0:19:8:21',2,8,0),(2747,20,3257,13,17,'17:0:19:9:20',2,9,0),(2748,21,3258,13,17,'17:0:19:9:21',2,9,0),(2749,18,3259,13,17,'17:1:18',1,1,0),(2750,22,3260,13,17,'17:1:22',1,1,0),(2751,20,3261,13,17,'17:1:19:0:20',2,0,0),(2752,21,3262,13,17,'17:1:19:0:21',2,0,0),(2753,20,3263,13,17,'17:1:19:1:20',2,1,0),(2754,21,3264,13,17,'17:1:19:1:21',2,1,0),(2755,20,3265,13,17,'17:1:19:2:20',2,2,0),(2756,21,3266,13,17,'17:1:19:2:21',2,2,0),(2757,20,3267,13,17,'17:1:19:3:20',2,3,0),(2758,21,3268,13,17,'17:1:19:3:21',2,3,0),(2759,20,3269,13,17,'17:1:19:4:20',2,4,0),(2760,21,3270,13,17,'17:1:19:4:21',2,4,0),(2761,20,3271,13,17,'17:1:19:5:20',2,5,0),(2762,21,3272,13,17,'17:1:19:5:21',2,5,0),(2763,20,3273,13,17,'17:1:19:6:20',2,6,0),(2764,21,3274,13,17,'17:1:19:6:21',2,6,0),(2765,20,3275,13,17,'17:1:19:7:20',2,7,0),(2766,21,3276,13,17,'17:1:19:7:21',2,7,0),(2767,20,3277,13,17,'17:1:19:8:20',2,8,0),(2768,21,3278,13,17,'17:1:19:8:21',2,8,0),(2769,20,3279,13,17,'17:1:19:9:20',2,9,0),(2770,21,3280,13,17,'17:1:19:9:21',2,9,0),(2771,20,3281,13,17,'17:1:19:11:20',2,11,0),(2772,21,3282,13,17,'17:1:19:11:21',2,11,0),(2773,18,3283,13,17,'17:2:18',1,2,0),(2774,22,3284,13,17,'17:2:22',1,2,0),(2775,20,3285,13,17,'17:2:19:0:20',2,0,0),(2776,21,3286,13,17,'17:2:19:0:21',2,0,0),(2777,20,3287,13,17,'17:2:19:1:20',2,1,0),(2778,21,3288,13,17,'17:2:19:1:21',2,1,0),(2779,20,3289,13,17,'17:2:19:2:20',2,2,0),(2780,21,3290,13,17,'17:2:19:2:21',2,2,0),(2781,20,3291,13,17,'17:2:19:3:20',2,3,0),(2782,21,3292,13,17,'17:2:19:3:21',2,3,0),(2783,20,3293,13,17,'17:2:19:4:20',2,4,0),(2784,21,3294,13,17,'17:2:19:4:21',2,4,0),(2785,20,3295,13,17,'17:2:19:5:20',2,5,0),(2786,21,3296,13,17,'17:2:19:5:21',2,5,0),(2787,20,3297,13,17,'17:2:19:6:20',2,6,0),(2788,21,3298,13,17,'17:2:19:6:21',2,6,0),(2789,20,3299,13,17,'17:2:19:7:20',2,7,0),(2790,21,3300,13,17,'17:2:19:7:21',2,7,0),(2791,20,3301,13,17,'17:2:19:8:20',2,8,0),(2792,21,3302,13,17,'17:2:19:8:21',2,8,0),(2793,20,3303,13,17,'17:2:19:9:20',2,9,0),(2794,21,3304,13,17,'17:2:19:9:21',2,9,0),(2795,20,3305,13,17,'17:2:19:10:20',2,10,0),(2796,21,3306,13,17,'17:2:19:10:21',2,10,0),(2797,13,3309,4,12,'12:0:13',1,0,0),(2798,14,3310,4,12,'12:0:14',1,0,0),(2799,15,3311,4,12,'12:0:15',1,0,0),(2800,13,3312,4,12,'12:1:13',1,1,0),(2801,14,3313,4,12,'12:1:14',1,1,0),(2802,15,3314,4,12,'12:1:15',1,1,0),(2803,13,3315,4,12,'12:2:13',1,2,0),(2804,14,3316,4,12,'12:2:14',1,2,0),(2805,15,3317,4,12,'12:2:15',1,2,0),(2806,13,3318,4,12,'12:3:13',1,3,0),(2807,14,3319,4,12,'12:3:14',1,3,0),(2808,15,3320,4,12,'12:3:15',1,3,0),(2809,13,3321,4,12,'12:4:13',1,4,0),(2810,14,3322,4,12,'12:4:14',1,4,0),(2811,15,3323,4,12,'12:4:15',1,4,0),(2812,13,3324,4,12,'12:5:13',1,5,0),(2813,14,3325,4,12,'12:5:14',1,5,0),(2814,15,3326,4,12,'12:5:15',1,5,0),(2815,13,3327,4,12,'12:6:13',1,6,0),(2816,14,3328,4,12,'12:6:14',1,6,0),(2817,15,3329,4,12,'12:6:15',1,6,0),(2818,13,3330,4,12,'12:7:13',1,7,0),(2819,14,3331,4,12,'12:7:14',1,7,0),(2820,15,3332,4,12,'12:7:15',1,7,0);
/*!40000 ALTER TABLE `wp_cfs_values` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`),
  KEY `disqus_dupecheck` (`meta_key`,`meta_value`(11))
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
INSERT INTO `wp_commentmeta` VALUES (1,4,'akismet_result','false'),(2,4,'akismet_history','a:4:{s:4:\"time\";d:1406225895.7898979;s:7:\"message\";s:28:\"Akismet cleared this comment\";s:5:\"event\";s:9:\"check-ham\";s:4:\"user\";s:0:\"\";}'),(4,4,'akismet_history','a:4:{s:4:\"time\";d:1406227547.9390969;s:7:\"message\";s:44:\"admin changed the comment status to approved\";s:5:\"event\";s:15:\"status-approved\";s:4:\"user\";s:5:\"admin\";}'),(5,3,'akismet_history','a:4:{s:4:\"time\";d:1406227547.9453449;s:7:\"message\";s:44:\"admin changed the comment status to approved\";s:5:\"event\";s:15:\"status-approved\";s:4:\"user\";s:5:\"admin\";}'),(6,2,'akismet_history','a:4:{s:4:\"time\";d:1406227547.9560931;s:7:\"message\";s:44:\"admin changed the comment status to approved\";s:5:\"event\";s:15:\"status-approved\";s:4:\"user\";s:5:\"admin\";}'),(7,5,'dsq_parent_post_id',''),(8,5,'dsq_post_id','1546242956'),(9,6,'akismet_result','false'),(10,6,'akismet_history','a:4:{s:4:\"time\";d:1409235610.7454171;s:7:\"message\";s:28:\"Akismet cleared this comment\";s:5:\"event\";s:9:\"check-ham\";s:4:\"user\";s:0:\"\";}'),(11,6,'akismet_as_submitted','a:11:{s:14:\"comment_author\";s:64:\"Building Javascript with Grunt, Bower, Browserify | Aaron Krauss\";s:18:\"comment_author_url\";s:79:\"http://thesocietea.org/2014/08/building-javascript-with-grunt-bower-browserify/\";s:20:\"comment_author_email\";s:0:\"\";s:15:\"comment_content\";s:259:\"[&#8230;] bower and browserify; if you haven&#8217;t read it yet, I highly recommend you start off by reading Getting Familiar with Bower and Browserify before starting here. Let&#8217;s review our goals regarding javascript building that we landed [&#8230;]\";s:12:\"comment_type\";s:8:\"pingback\";s:7:\"user_ip\";s:14:\"162.243.14.224\";s:10:\"user_agent\";s:50:\"The Incutio XML-RPC PHP Library -- WordPress/3.9.2\";s:4:\"blog\";s:22:\"http://thesocietea.org\";s:9:\"blog_lang\";s:5:\"en_US\";s:12:\"blog_charset\";s:5:\"UTF-8\";s:9:\"permalink\";s:74:\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\";}'),(12,7,'akismet_result','false'),(13,7,'akismet_history','a:4:{s:4:\"time\";d:1409270553.9715359;s:7:\"message\";s:28:\"Akismet cleared this comment\";s:5:\"event\";s:9:\"check-ham\";s:4:\"user\";s:0:\"\";}'),(14,7,'akismet_as_submitted','a:11:{s:14:\"comment_author\";s:34:\"Vim as Your Editor? | Aaron Krauss\";s:18:\"comment_author_url\";s:50:\"http://thesocietea.org/2014/06/vim-as-your-editor/\";s:20:\"comment_author_email\";s:0:\"\";s:15:\"comment_content\";s:181:\"[&#8230;] and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the best ways to learn Vim (and trust me, there&#8217;s a bunch of [&#8230;]\";s:12:\"comment_type\";s:8:\"pingback\";s:7:\"user_ip\";s:14:\"162.243.14.224\";s:10:\"user_agent\";s:50:\"The Incutio XML-RPC PHP Library -- WordPress/3.9.2\";s:4:\"blog\";s:22:\"http://thesocietea.org\";s:9:\"blog_lang\";s:5:\"en_US\";s:12:\"blog_charset\";s:5:\"UTF-8\";s:9:\"permalink\";s:48:\"http://thesocietea.org/2014/07/how-to-learn-vim/\";}'),(15,8,'dsq_parent_post_id',''),(16,8,'dsq_post_id','1575120066');
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (2,158,'What This Site Runs On &#8211; Part 2 | Aaron Krauss','','http://thesocietea.org/2014/06/what-this-site-runs-on-part-2/','162.243.14.224','2014-06-30 18:11:27','2014-06-30 18:11:27','[&#8230;] we&#8217;ve established that this site is running on WordPress (wondering why I made that choice? Read about it), I want to delve in further to talk about what else I&#8217;m using, and the tools I used to build [&#8230;]',0,'1','The Incutio XML-RPC PHP Library -- WordPress/3.9.1','pingback',0,0),(3,6,'What This Site Runs On &#8211; Part 2 | Aaron Krauss','','http://thesocietea.org/2014/06/what-this-site-runs-on-part-2/','162.243.14.224','2014-06-30 18:15:26','2014-06-30 18:15:26','[&#8230;] About [&#8230;]',0,'1','The Incutio XML-RPC PHP Library -- WordPress/3.9.1','pingback',0,0),(4,154,'How to Learn Vim | Aaron Krauss','','http://thesocietea.org/2014/07/how-to-learn-vim/','162.243.14.224','2014-07-24 18:18:15','2014-07-24 18:18:15','[&#8230;] 7 months later, I&#8217;m following up with my first vim blog post about why you should use vim. If you&#8217;ve made it here, then you&#8217;re either seriously interested in learning vim (which [&#8230;]',0,'1','The Incutio XML-RPC PHP Library -- WordPress/3.9.1','pingback',0,0),(5,142,'Guest','anonymized-1546242956@disqus.com','','72.198.54.181','2014-08-17 04:25:00','2014-08-17 04:25:00','Test',0,'1','Disqus/1.1(2.77):1546242956','',0,0),(6,233,'Building Javascript with Grunt, Bower, Browserify | Aaron Krauss','','http://thesocietea.org/2014/08/building-javascript-with-grunt-bower-browserify/','162.243.14.224','2014-08-28 14:20:10','2014-08-28 14:20:10','[&#8230;] bower and browserify; if you haven&#8217;t read it yet, I highly recommend you start off by reading Getting Familiar with Bower and Browserify before starting here. Let&#8217;s review our goals regarding javascript building that we landed [&#8230;]',0,'0','The Incutio XML-RPC PHP Library -- WordPress/3.9.2','pingback',0,0),(7,220,'Vim as Your Editor? | Aaron Krauss','','http://thesocietea.org/2014/06/vim-as-your-editor/','162.243.14.224','2014-08-29 00:02:33','2014-08-29 00:02:33','[&#8230;] and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the best ways to learn Vim (and trust me, there&#8217;s a bunch of [&#8230;]',0,'0','The Incutio XML-RPC PHP Library -- WordPress/3.9.2','pingback',0,0),(8,305,'OleTange','disqus.com@tange.dk','','130.225.254.30','2014-09-05 11:28:00','2014-09-05 11:28:00','\'ls | xargs -0\' should not work. You need \'find -print0\' or you could use GNU Parallel and skip the -0 as GNU Parallel deals correctly with space, \' and \". GNU Parallel would also make some of the commands more readable:  ls | parallel echo {}\" is a file\"nnLearn more: nn* https://www.youtube.com/playlist?list=PL284C9FF2488BC6D1n* http://www.gnu.org/software/parallel/parallel_tutorial.htmln* http://www.gnu.org/software/parallel/man.html',0,'1','Disqus/1.1(2.77):1575120066','',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(64) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB AUTO_INCREMENT=4885 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://thesocietea.org','yes'),(2,'blogname','Aaron Krauss','yes'),(3,'blogdescription','Developer','yes'),(4,'users_can_register','0','yes'),(5,'admin_email','alkrauss48@gmail.com','yes'),(6,'start_of_week','1','yes'),(7,'use_balanceTags','','yes'),(8,'use_smilies','1','yes'),(9,'require_name_email','1','yes'),(10,'comments_notify','1','yes'),(11,'posts_per_rss','10','yes'),(12,'rss_use_excerpt','0','yes'),(13,'mailserver_url','mail.example.com','yes'),(14,'mailserver_login','login@example.com','yes'),(15,'mailserver_pass','password','yes'),(16,'mailserver_port','110','yes'),(17,'default_category','1','yes'),(18,'default_comment_status','open','yes'),(19,'default_ping_status','open','yes'),(20,'default_pingback_flag','1','yes'),(21,'posts_per_page','10','yes'),(22,'date_format','F j, Y','yes'),(23,'time_format','g:i a','yes'),(24,'links_updated_date_format','F j, Y g:i a','yes'),(25,'comment_moderation','0','yes'),(26,'moderation_notify','1','yes'),(27,'permalink_structure','/%year%/%monthnum%/%postname%/','yes'),(28,'gzipcompression','0','yes'),(29,'hack_file','0','yes'),(30,'blog_charset','UTF-8','yes'),(31,'moderation_keys','','no'),(32,'active_plugins','a:8:{i:0;s:19:\"akismet/akismet.php\";i:1;s:26:\"custom-field-suite/cfs.php\";i:2;s:32:\"disqus-comment-system/disqus.php\";i:3;s:45:\"enable-media-replace/enable-media-replace.php\";i:4;s:37:\"post-types-order/post-types-order.php\";i:5;s:39:\"search-everything/search-everything.php\";i:6;s:39:\"syntaxhighlighter/syntaxhighlighter.php\";i:7;s:53:\"velvet-blues-update-urls/velvet-blues-update-urls.php\";}','yes'),(33,'home','http://thesocietea.org','yes'),(34,'category_base','','yes'),(35,'ping_sites','http://rpc.pingomatic.com/','yes'),(36,'advanced_edit','0','yes'),(37,'comment_max_links','2','yes'),(38,'gmt_offset','0','yes'),(39,'default_email_category','1','yes'),(40,'recently_edited','','no'),(41,'template','the_societea','yes'),(42,'stylesheet','the_societea','yes'),(43,'comment_whitelist','1','yes'),(44,'blacklist_keys','','no'),(45,'comment_registration','0','yes'),(46,'html_type','text/html','yes'),(47,'use_trackback','0','yes'),(48,'default_role','subscriber','yes'),(49,'db_version','27916','yes'),(50,'uploads_use_yearmonth_folders','1','yes'),(51,'upload_path','','yes'),(52,'blog_public','1','yes'),(53,'default_link_category','0','yes'),(54,'show_on_front','page','yes'),(55,'tag_base','','yes'),(56,'show_avatars','1','yes'),(57,'avatar_rating','G','yes'),(58,'upload_url_path','','yes'),(59,'thumbnail_size_w','150','yes'),(60,'thumbnail_size_h','150','yes'),(61,'thumbnail_crop','1','yes'),(62,'medium_size_w','300','yes'),(63,'medium_size_h','300','yes'),(64,'avatar_default','mystery','yes'),(65,'large_size_w','1024','yes'),(66,'large_size_h','1024','yes'),(67,'image_default_link_type','file','yes'),(68,'image_default_size','','yes'),(69,'image_default_align','','yes'),(70,'close_comments_for_old_posts','0','yes'),(71,'close_comments_days_old','14','yes'),(72,'thread_comments','1','yes'),(73,'thread_comments_depth','5','yes'),(74,'page_comments','0','yes'),(75,'comments_per_page','50','yes'),(76,'default_comments_page','newest','yes'),(77,'comment_order','asc','yes'),(78,'sticky_posts','a:0:{}','yes'),(79,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(80,'widget_text','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(81,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(82,'uninstall_plugins','a:1:{s:27:\"wp-markdown/wp-markdown.php\";a:2:{i:0;s:18:\"WordPress_Markdown\";i:1;s:9:\"uninstall\";}}','no'),(83,'timezone_string','','yes'),(84,'page_for_posts','0','yes'),(85,'page_on_front','4','yes'),(86,'default_post_format','0','yes'),(87,'link_manager_enabled','0','yes'),(88,'initial_db_version','27916','yes'),(89,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:62:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:9:\"add_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(90,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(91,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(92,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(93,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(94,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(95,'sidebars_widgets','a:3:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:13:\"array_version\";i:3;}','yes'),(96,'_transient_random_seed','e3e884f26a11ac192e9b98a122d0c936','yes'),(97,'logged_in_key','as>*,uS,x),u3]<T[U2:Q)n}xljY4e;)x]nWvO3P)QOn/LHEA7p/3d}=4t+@^)7}','yes'),(98,'logged_in_salt','Ypq39}RyWXsy1B3~~v)-2dDC7^;tv>.mk3!FeTW*>ERc$IG McCio3Acw-^ P0a5','yes'),(99,'cron','a:7:{i:1410113895;a:1:{s:24:\"akismet_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1410117420;a:1:{s:20:\"wp_maybe_auto_update\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1410129317;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1410129321;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1410129705;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1410444037;a:1:{s:19:\"publish_future_post\";a:1:{s:32:\"1ad62e4e7797c883c719a4cbb5a76b8f\";a:2:{s:8:\"schedule\";b:0;s:4:\"args\";a:1:{i:0;i:282;}}}}s:7:\"version\";i:2;}','yes'),(101,'auth_key','.YPV8;p%Dgf[M</ZvwZAk9*Wgyt~NO^05,,r=FGJ/7?*!!^X^L >,y6{rq2Lmm6Z','yes'),(102,'auth_salt','mJFh)O;WpeY}AS>Tf0bWE{kRX7)G1Z-Dy,-`QxoKw}<#Ed^ZD]~(ra*6y%DobD]/','yes'),(109,'nonce_key','Q,^Q}ytXd29u^.kLt=@iW*_Q!4OYpNYyfWme[W0A.2s1-m:P@d}:mybjU.O3v~+1','yes'),(110,'nonce_salt','+celW{qLF`rD)*]f?X3k$l&8`o$Uqfo4.7&ylB&u$Mt^U%*n4]}EC|PhlM~Ep}kA','yes'),(130,'can_compress_scripts','1','yes'),(132,'current_theme','','yes'),(133,'theme_mods_the_societea','a:7:{i:0;b:0;s:16:\"background_color\";s:6:\"ffffff\";s:16:\"background_image\";s:0:\"\";s:17:\"background_repeat\";s:6:\"repeat\";s:21:\"background_position_x\";s:4:\"left\";s:21:\"background_attachment\";s:5:\"fixed\";s:18:\"nav_menu_locations\";a:0:{}}','yes'),(134,'theme_switched','','yes'),(138,'widget_pages','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(139,'widget_calendar','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(140,'widget_tag_cloud','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(141,'widget_nav_menu','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(145,'recently_activated','a:0:{}','yes'),(146,'theme_mods_twentyfourteen','a:1:{s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1401768087;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}}}','yes'),(151,'cfs_next_field_id','23','yes'),(152,'cfs_version','2.3.6','yes'),(154,'nav_menu_options','a:2:{i:0;b:0;s:8:\"auto_add\";a:0:{}}','yes'),(266,'cpto_options','a:3:{s:8:\"autosort\";s:1:\"1\";s:9:\"adminsort\";s:1:\"1\";s:10:\"capability\";s:13:\"switch_themes\";}','yes'),(267,'CPT_configured','TRUE','yes'),(319,'category_children','a:0:{}','yes'),(359,'_site_transient_timeout_browser_cb03b8b2180710a944792958eff84f1d','1403043918','yes'),(360,'_site_transient_browser_cb03b8b2180710a944792958eff84f1d','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"35.0.1916.114\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(409,'rewrite_rules','a:105:{s:10:\"project/?$\";s:27:\"index.php?post_type=project\";s:40:\"project/feed/(feed|rdf|rss|rss2|atom)/?$\";s:44:\"index.php?post_type=project&feed=$matches[1]\";s:35:\"project/(feed|rdf|rss|rss2|atom)/?$\";s:44:\"index.php?post_type=project&feed=$matches[1]\";s:27:\"project/page/([0-9]{1,})/?$\";s:45:\"index.php?post_type=project&paged=$matches[1]\";s:47:\"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:42:\"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:35:\"category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:17:\"category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:44:\"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:39:\"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:32:\"tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:14:\"tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:45:\"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:40:\"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:33:\"type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:15:\"type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:31:\"cfs/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:41:\"cfs/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:61:\"cfs/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:56:\"cfs/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:56:\"cfs/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:24:\"cfs/([^/]+)/trackback/?$\";s:45:\"index.php?post_type=cfs&name=$matches[1]&tb=1\";s:32:\"cfs/([^/]+)/page/?([0-9]{1,})/?$\";s:58:\"index.php?post_type=cfs&name=$matches[1]&paged=$matches[2]\";s:39:\"cfs/([^/]+)/comment-page-([0-9]{1,})/?$\";s:58:\"index.php?post_type=cfs&name=$matches[1]&cpage=$matches[2]\";s:24:\"cfs/([^/]+)(/[0-9]+)?/?$\";s:57:\"index.php?post_type=cfs&name=$matches[1]&page=$matches[2]\";s:20:\"cfs/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:30:\"cfs/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:50:\"cfs/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:45:\"cfs/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:45:\"cfs/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:35:\"project/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:45:\"project/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:65:\"project/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:60:\"project/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:60:\"project/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:28:\"project/([^/]+)/trackback/?$\";s:34:\"index.php?project=$matches[1]&tb=1\";s:48:\"project/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:46:\"index.php?project=$matches[1]&feed=$matches[2]\";s:43:\"project/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:46:\"index.php?project=$matches[1]&feed=$matches[2]\";s:36:\"project/([^/]+)/page/?([0-9]{1,})/?$\";s:47:\"index.php?project=$matches[1]&paged=$matches[2]\";s:43:\"project/([^/]+)/comment-page-([0-9]{1,})/?$\";s:47:\"index.php?project=$matches[1]&cpage=$matches[2]\";s:28:\"project/([^/]+)(/[0-9]+)?/?$\";s:46:\"index.php?project=$matches[1]&page=$matches[2]\";s:24:\"project/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:34:\"project/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:54:\"project/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:49:\"project/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:49:\"project/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:12:\"robots\\.txt$\";s:18:\"index.php?robots=1\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:27:\"comment-page-([0-9]{1,})/?$\";s:38:\"index.php?&page_id=4&cpage=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:47:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:57:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:77:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:44:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/trackback/?$\";s:69:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&tb=1\";s:64:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&feed=$matches[4]\";s:59:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&feed=$matches[4]\";s:52:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/page/?([0-9]{1,})/?$\";s:82:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&paged=$matches[4]\";s:59:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/comment-page-([0-9]{1,})/?$\";s:82:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&cpage=$matches[4]\";s:44:\"([0-9]{4})/([0-9]{1,2})/([^/]+)(/[0-9]+)?/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&page=$matches[4]\";s:36:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:46:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:66:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:61:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:61:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:51:\"([0-9]{4})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&cpage=$matches[3]\";s:38:\"([0-9]{4})/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&cpage=$matches[2]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:20:\"(.?.+?)(/[0-9]+)?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";}','yes'),(898,'akismet_available_servers','a:4:{s:12:\"66.135.58.62\";b:1;s:12:\"66.135.58.61\";b:1;s:12:\"192.0.80.244\";b:1;s:12:\"192.0.80.246\";b:1;}','yes'),(899,'akismet_connectivity_time','1404312065','yes'),(900,'akismet_strictness','0','yes'),(901,'akismet_show_user_comments_approved','0','yes'),(902,'wordpress_api_key','ae40d7cbc870','yes'),(1126,'syntaxhighlighter_settings','a:15:{s:9:\"shversion\";i:3;s:5:\"theme\";s:5:\"rdark\";s:6:\"gutter\";i:1;s:9:\"autolinks\";i:1;s:9:\"smarttabs\";i:1;s:9:\"wraplines\";i:1;s:9:\"classname\";s:0:\"\";s:9:\"firstline\";s:1:\"1\";s:14:\"padlinenumbers\";s:5:\"false\";s:7:\"tabsize\";s:1:\"4\";s:5:\"title\";s:0:\"\";s:14:\"loadallbrushes\";i:0;s:8:\"collapse\";i:0;s:5:\"light\";i:0;s:7:\"toolbar\";i:0;}','yes'),(1495,'_site_transient_timeout_browser_490e589203a0cce6044cda949bda3cd4','1406828188','yes'),(1496,'_site_transient_browser_490e589203a0cce6044cda949bda3cd4','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"35.0.1916.153\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(2086,'disqus_active','1','yes'),(2087,'disqus_version','2.77','yes'),(2088,'disqus_forum_url','thesocietea','yes'),(2089,'disqus_cc_fix','1','yes'),(2090,'disqus_api_key','0C4Uv5QN6RrHuDFrLFF6A0r59ittV0QaxfWmssw1c9qsNI30YSnCEvJAdBsA31xf','yes'),(2091,'disqus_user_api_key','aJgw8hjUIqv5lCT6fsRBqfZrHKwpWYehUZMebLxvCWAND1FSpKQJxVvcTYD7cNnE','yes'),(2092,'disqus_replace','all','yes'),(2163,'disqus_last_comment_id','1575120066','yes'),(2169,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:2:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-4.0.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-4.0.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-4.0-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.0-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"4.0\";s:7:\"version\";s:3:\"4.0\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"3.8\";s:15:\"partial_version\";s:0:\"\";}i:1;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-4.0.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-4.0.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-4.0-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.0-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"4.0\";s:7:\"version\";s:3:\"4.0\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"3.8\";s:15:\"partial_version\";s:0:\"\";s:13:\"support_email\";s:27:\"updatehelp392@wordpress.org\";}}s:12:\"last_checked\";i:1410113534;s:15:\"version_checked\";s:5:\"3.9.2\";s:12:\"translations\";a:0:{}}','yes'),(2377,'_site_transient_timeout_browser_f27daa95e6b0794c72bf8e49bd118bac','1409320982','yes'),(2378,'_site_transient_browser_f27daa95e6b0794c72bf8e49bd118bac','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"36.0.1985.143\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(2999,'_site_transient_timeout_browser_d887a7899e20506cd022503e8109b267','1409923768','yes'),(3000,'_site_transient_browser_d887a7899e20506cd022503e8109b267','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"37.0.2062.94\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(3918,'_site_transient_timeout_browser_05be1aab5db2342cbc9f1a1fbf817775','1410319477','yes'),(3919,'_site_transient_browser_05be1aab5db2342cbc9f1a1fbf817775','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"37.0.2062.94\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(4102,'_site_transient_timeout_poptags_40cd750bba9870f18aada2478b24840a','1409845847','yes'),(4103,'_site_transient_poptags_40cd750bba9870f18aada2478b24840a','a:40:{s:6:\"widget\";a:3:{s:4:\"name\";s:6:\"widget\";s:4:\"slug\";s:6:\"widget\";s:5:\"count\";s:4:\"4587\";}s:4:\"post\";a:3:{s:4:\"name\";s:4:\"Post\";s:4:\"slug\";s:4:\"post\";s:5:\"count\";s:4:\"2848\";}s:6:\"plugin\";a:3:{s:4:\"name\";s:6:\"plugin\";s:4:\"slug\";s:6:\"plugin\";s:5:\"count\";s:4:\"2785\";}s:5:\"admin\";a:3:{s:4:\"name\";s:5:\"admin\";s:4:\"slug\";s:5:\"admin\";s:5:\"count\";s:4:\"2284\";}s:5:\"posts\";a:3:{s:4:\"name\";s:5:\"posts\";s:4:\"slug\";s:5:\"posts\";s:5:\"count\";s:4:\"2189\";}s:7:\"sidebar\";a:3:{s:4:\"name\";s:7:\"sidebar\";s:4:\"slug\";s:7:\"sidebar\";s:5:\"count\";s:4:\"1792\";}s:6:\"google\";a:3:{s:4:\"name\";s:6:\"google\";s:4:\"slug\";s:6:\"google\";s:5:\"count\";s:4:\"1587\";}s:7:\"twitter\";a:3:{s:4:\"name\";s:7:\"twitter\";s:4:\"slug\";s:7:\"twitter\";s:5:\"count\";s:4:\"1563\";}s:6:\"images\";a:3:{s:4:\"name\";s:6:\"images\";s:4:\"slug\";s:6:\"images\";s:5:\"count\";s:4:\"1529\";}s:8:\"comments\";a:3:{s:4:\"name\";s:8:\"comments\";s:4:\"slug\";s:8:\"comments\";s:5:\"count\";s:4:\"1519\";}s:4:\"page\";a:3:{s:4:\"name\";s:4:\"page\";s:4:\"slug\";s:4:\"page\";s:5:\"count\";s:4:\"1448\";}s:9:\"shortcode\";a:3:{s:4:\"name\";s:9:\"shortcode\";s:4:\"slug\";s:9:\"shortcode\";s:5:\"count\";s:4:\"1411\";}s:5:\"image\";a:3:{s:4:\"name\";s:5:\"image\";s:4:\"slug\";s:5:\"image\";s:5:\"count\";s:4:\"1350\";}s:8:\"facebook\";a:3:{s:4:\"name\";s:8:\"Facebook\";s:4:\"slug\";s:8:\"facebook\";s:5:\"count\";s:4:\"1209\";}s:3:\"seo\";a:3:{s:4:\"name\";s:3:\"seo\";s:4:\"slug\";s:3:\"seo\";s:5:\"count\";s:4:\"1153\";}s:5:\"links\";a:3:{s:4:\"name\";s:5:\"links\";s:4:\"slug\";s:5:\"links\";s:5:\"count\";s:4:\"1121\";}s:9:\"wordpress\";a:3:{s:4:\"name\";s:9:\"wordpress\";s:4:\"slug\";s:9:\"wordpress\";s:5:\"count\";s:4:\"1044\";}s:6:\"social\";a:3:{s:4:\"name\";s:6:\"social\";s:4:\"slug\";s:6:\"social\";s:5:\"count\";s:4:\"1001\";}s:7:\"gallery\";a:3:{s:4:\"name\";s:7:\"gallery\";s:4:\"slug\";s:7:\"gallery\";s:5:\"count\";s:3:\"995\";}s:7:\"widgets\";a:3:{s:4:\"name\";s:7:\"widgets\";s:4:\"slug\";s:7:\"widgets\";s:5:\"count\";s:3:\"823\";}s:5:\"pages\";a:3:{s:4:\"name\";s:5:\"pages\";s:4:\"slug\";s:5:\"pages\";s:5:\"count\";s:3:\"811\";}s:5:\"email\";a:3:{s:4:\"name\";s:5:\"email\";s:4:\"slug\";s:5:\"email\";s:5:\"count\";s:3:\"798\";}s:3:\"rss\";a:3:{s:4:\"name\";s:3:\"rss\";s:4:\"slug\";s:3:\"rss\";s:5:\"count\";s:3:\"793\";}s:6:\"jquery\";a:3:{s:4:\"name\";s:6:\"jquery\";s:4:\"slug\";s:6:\"jquery\";s:5:\"count\";s:3:\"789\";}s:5:\"media\";a:3:{s:4:\"name\";s:5:\"media\";s:4:\"slug\";s:5:\"media\";s:5:\"count\";s:3:\"730\";}s:4:\"ajax\";a:3:{s:4:\"name\";s:4:\"AJAX\";s:4:\"slug\";s:4:\"ajax\";s:5:\"count\";s:3:\"693\";}s:5:\"video\";a:3:{s:4:\"name\";s:5:\"video\";s:4:\"slug\";s:5:\"video\";s:5:\"count\";s:3:\"691\";}s:10:\"javascript\";a:3:{s:4:\"name\";s:10:\"javascript\";s:4:\"slug\";s:10:\"javascript\";s:5:\"count\";s:3:\"661\";}s:7:\"content\";a:3:{s:4:\"name\";s:7:\"content\";s:4:\"slug\";s:7:\"content\";s:5:\"count\";s:3:\"638\";}s:10:\"buddypress\";a:3:{s:4:\"name\";s:10:\"buddypress\";s:4:\"slug\";s:10:\"buddypress\";s:5:\"count\";s:3:\"618\";}s:5:\"photo\";a:3:{s:4:\"name\";s:5:\"photo\";s:4:\"slug\";s:5:\"photo\";s:5:\"count\";s:3:\"609\";}s:5:\"login\";a:3:{s:4:\"name\";s:5:\"login\";s:4:\"slug\";s:5:\"login\";s:5:\"count\";s:3:\"607\";}s:4:\"feed\";a:3:{s:4:\"name\";s:4:\"feed\";s:4:\"slug\";s:4:\"feed\";s:5:\"count\";s:3:\"601\";}s:4:\"link\";a:3:{s:4:\"name\";s:4:\"link\";s:4:\"slug\";s:4:\"link\";s:5:\"count\";s:3:\"593\";}s:6:\"photos\";a:3:{s:4:\"name\";s:6:\"photos\";s:4:\"slug\";s:6:\"photos\";s:5:\"count\";s:3:\"587\";}s:7:\"youtube\";a:3:{s:4:\"name\";s:7:\"youtube\";s:4:\"slug\";s:7:\"youtube\";s:5:\"count\";s:3:\"546\";}s:8:\"category\";a:3:{s:4:\"name\";s:8:\"category\";s:4:\"slug\";s:8:\"category\";s:5:\"count\";s:3:\"544\";}s:4:\"spam\";a:3:{s:4:\"name\";s:4:\"spam\";s:4:\"slug\";s:4:\"spam\";s:5:\"count\";s:3:\"543\";}s:5:\"share\";a:3:{s:4:\"name\";s:5:\"Share\";s:4:\"slug\";s:5:\"share\";s:5:\"count\";s:3:\"536\";}s:8:\"security\";a:3:{s:4:\"name\";s:8:\"security\";s:4:\"slug\";s:8:\"security\";s:5:\"count\";s:3:\"534\";}}','yes'),(4106,'_site_transient_update_plugins','O:8:\"stdClass\":3:{s:12:\"last_checked\";i:1410113533;s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}}','yes'),(4107,'se_meta','a:10:{s:7:\"blog_id\";b:0;s:7:\"api_key\";b:0;s:8:\"auth_key\";b:0;s:7:\"version\";s:5:\"8.1.2\";s:13:\"first_version\";s:5:\"8.1.2\";s:8:\"new_user\";b:1;s:4:\"name\";s:0:\"\";s:5:\"email\";s:0:\"\";s:24:\"show_options_page_notice\";b:0;s:16:\"se_global_notice\";N;}','yes'),(4108,'se_options','a:21:{s:21:\"se_exclude_categories\";s:0:\"\";s:26:\"se_exclude_categories_list\";s:0:\"\";s:16:\"se_exclude_posts\";s:0:\"\";s:21:\"se_exclude_posts_list\";s:0:\"\";s:18:\"se_use_page_search\";b:0;s:21:\"se_use_comment_search\";b:1;s:17:\"se_use_tag_search\";b:1;s:17:\"se_use_tax_search\";b:1;s:22:\"se_use_category_search\";b:1;s:25:\"se_approved_comments_only\";b:1;s:22:\"se_approved_pages_only\";b:0;s:21:\"se_use_excerpt_search\";b:0;s:19:\"se_use_draft_search\";b:0;s:24:\"se_use_attachment_search\";b:0;s:14:\"se_use_authors\";b:0;s:18:\"se_use_cmt_authors\";b:0;s:22:\"se_use_metadata_search\";b:1;s:16:\"se_use_highlight\";b:1;s:18:\"se_highlight_color\";s:6:\"orange\";s:18:\"se_highlight_style\";s:0:\"\";s:19:\"se_research_metabox\";a:2:{s:18:\"visible_on_compose\";b:1;s:23:\"external_search_enabled\";b:0;}}','yes'),(4219,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1410113534;s:7:\"checked\";a:4:{s:12:\"the_societea\";s:0:\"\";s:14:\"twentyfourteen\";s:3:\"1.2\";s:14:\"twentythirteen\";s:3:\"1.3\";s:12:\"twentytwelve\";s:3:\"1.5\";}s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}}','yes'),(4499,'_transient_is_multi_author','0','yes'),(4861,'_transient_timeout_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','1410156550','no'),(4862,'_transient_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:51:\"\n	\n	\n	\n	\n	\n	\n		\n		\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://wordpress.org/news\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 17:05:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/?v=4.1-alpha\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.0 “Benny”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/news/2014/09/benny/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"http://wordpress.org/news/2014/09/benny/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 17:05:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3296\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:370:\"Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader Benny Goodman, is available for download or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:23328:\"<p>Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader <a href=\"http://en.wikipedia.org/wiki/Benny_Goodman\">Benny Goodman</a>, is available <a href=\"http://wordpress.org/download/\">for download</a> or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience we think you&#8217;ll enjoy.</p>\n<div id=\"v-bUdzKMro-1\" class=\"video-player\"><embed id=\"v-bUdzKMro-1-video\" src=\"http://s0.videopress.com/player.swf?v=1.03&amp;guid=bUdzKMro&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"692\" height=\"388\" title=\"Introducing WordPress 4.0 &quot;Benny&quot;\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div>\n<hr />\n<h2 style=\"text-align: center\">Manage your media with style</h2>\n<p><img class=\"alignnone size-full wp-image-3316\" src=\"http://i0.wp.com/wordpress.org/news/files/2014/09/media.jpg?resize=692%2C406\" alt=\"Media Library\" data-recalc-dims=\"1\" />Explore your uploads in a beautiful, endless grid. A new details preview makes viewing and editing any amount of media in sequence a snap.</p>\n<hr />\n<h2 style=\"text-align: center\">Working with embeds has never been easier</h2>\n<div style=\"width: 632px; height: 445px; \" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<video class=\"wp-video-shortcode\" id=\"video-3296-1\" width=\"632\" height=\"445\" autoplay=\"true\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//s.w.org/images/core/4.0/embed.mp4?_=1\" /><source type=\"video/webm\" src=\"//s.w.org/images/core/4.0/embed.webm?_=1\" /><source type=\"video/ogg\" src=\"//s.w.org/images/core/4.0/embed.ogv?_=1\" /><a href=\"//s.w.org/images/core/4.0/embed.mp4\">//s.w.org/images/core/4.0/embed.mp4</a></video></div>\n<p>Paste in a YouTube URL on a new line, and watch it magically become an embedded video. Now try it with a tweet. Oh yeah — embedding has become a visual experience. The editor shows a true preview of your embedded content, saving you time and giving you confidence.</p>\n<p>We’ve expanded the services supported by default, too — you can embed videos from CollegeHumor, playlists from YouTube, and talks from TED. <a href=\"http://codex.wordpress.org/Embeds\">Check out all of the embeds</a> that WordPress supports.</p>\n<hr />\n<h2 style=\"text-align: center\">Focus on your content</h2>\n<div style=\"width: 632px; height: 356px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-3296-2\" width=\"632\" height=\"356\" autoplay=\"true\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//s.w.org/images/core/4.0/focus.mp4?_=2\" /><source type=\"video/webm\" src=\"//s.w.org/images/core/4.0/focus.webm?_=2\" /><source type=\"video/ogg\" src=\"//s.w.org/images/core/4.0/focus.ogv?_=2\" /><a href=\"//s.w.org/images/core/4.0/focus.mp4\">//s.w.org/images/core/4.0/focus.mp4</a></video></div>\n<p>Writing and editing is smoother and more immersive with an editor that expands to fit your content as you write, and keeps the formatting tools available at all times.</p>\n<hr />\n<h2 style=\"text-align: center\">Finding the right plugin</h2>\n<p><img class=\"aligncenter size-large wp-image-3309\" src=\"http://i0.wp.com/wordpress.org/news/files/2014/09/add-plugin1.png?resize=692%2C405\" alt=\"Add plugins\" data-recalc-dims=\"1\" /></p>\n<p>There are more than 30,000 free and open source plugins in the WordPress plugin directory. WordPress 4.0 makes it easier to find the right one for your needs, with new metrics, improved search, and a more visual browsing experience.</p>\n<hr />\n<h2 style=\"text-align: center\">The Ensemble</h2>\n<p>This release was led by <a href=\"http://helenhousandi.com\">Helen Hou-Sandí</a>, with the help of these fine individuals. There are 275 contributors with props in this release, a new high. Pull up some Benny Goodman on your music service of choice, as a bandleader or in one of his turns as a classical clarinetist, and check out some of their profiles:</p>\n<p><a href=\"http://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"http://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"http://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"http://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>, <a href=\"http://profiles.wordpress.org/tellyworth\">Alex Shiels</a>, <a href=\"http://profiles.wordpress.org/alexanderrohmann\">Alexander Rohmann</a>, <a href=\"http://profiles.wordpress.org/aliso\">Alison Barrett</a>, <a href=\"http://profiles.wordpress.org/collinsinternet\">Allan Collins</a>, <a href=\"http://profiles.wordpress.org/amit\">Amit Gupta</a>, <a href=\"http://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>, <a href=\"http://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"http://profiles.wordpress.org/andrezrv\">Andres Villarreal</a>, <a href=\"http://profiles.wordpress.org/zamfeer\">Andrew Mowe</a>, <a href=\"http://profiles.wordpress.org/sumobi\">Andrew Munro</a>, <a href=\"http://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"http://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"http://profiles.wordpress.org/andy\">Andy Skelton</a>, <a href=\"http://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>, <a href=\"http://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"http://profiles.wordpress.org/arnee\">arnee</a>, <a href=\"http://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>, <a href=\"http://profiles.wordpress.org/filosofo\">Austin Matzko</a>, <a href=\"http://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>, <a href=\"http://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>, <a href=\"http://profiles.wordpress.org/boonebgorges\">Boone Gorges</a>, <a href=\"http://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>, <a href=\"http://profiles.wordpress.org/bramd\">bramd</a>, <a href=\"http://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"http://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>, <a href=\"http://profiles.wordpress.org/brianlayman\">Brian Layman</a>, <a href=\"http://profiles.wordpress.org/rzen\">Brian Richards</a>, <a href=\"http://profiles.wordpress.org/camdensegal\">Camden Segal</a>, <a href=\"http://profiles.wordpress.org/lukecarbis\">Carbis</a>, <a href=\"http://profiles.wordpress.org/sixhours\">Caroline Moore</a>, <a href=\"http://profiles.wordpress.org/mackensen\">Charles Fulton</a>, <a href=\"http://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"http://profiles.wordpress.org/chrico\">ChriCo</a>, <a href=\"http://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>, <a href=\"http://profiles.wordpress.org/chrisl27\">chrisl27</a>, <a href=\"http://profiles.wordpress.org/caxelsson\">Christian Axelsson</a>, <a href=\"http://profiles.wordpress.org/cfinke\">Christopher Finke</a>, <a href=\"http://profiles.wordpress.org/boda1982\">Christopher Spires</a>, <a href=\"http://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>, <a href=\"http://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>, <a href=\"http://profiles.wordpress.org/corphi\">Corphi</a>, <a href=\"http://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>, <a href=\"http://profiles.wordpress.org/ghost1227\">Dan Griffiths</a>, <a href=\"http://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"http://profiles.wordpress.org/danielhuesken\">Daniel Husken</a>, <a href=\"http://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>, <a href=\"http://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>, <a href=\"http://profiles.wordpress.org/dkotter\">Darin Kotter</a>, <a href=\"http://profiles.wordpress.org/koop\">Daryl Koopersmith</a>, <a href=\"http://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>, <a href=\"http://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>, <a href=\"http://profiles.wordpress.org/dlh\">David Herrera</a>, <a href=\"http://profiles.wordpress.org/dnaber-de\">David Naber</a>, <a href=\"http://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>, <a href=\"http://profiles.wordpress.org/debaat\">DeBAAT</a>, <a href=\"http://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"http://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"http://profiles.wordpress.org/donncha\">Donncha O Caoimh</a>, <a href=\"http://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"http://profiles.wordpress.org/dustyn\">Dustyn Doyle</a>, <a href=\"http://profiles.wordpress.org/eddiemoya\">Eddie Moya</a>, <a href=\"http://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>, <a href=\"http://profiles.wordpress.org/edwin-at-studiojoyocom\">Edwin Siebel</a>, <a href=\"http://profiles.wordpress.org/ehg\">ehg</a>, <a href=\"http://profiles.wordpress.org/tmeister\">Enrique Chavez</a>, <a href=\"http://profiles.wordpress.org/erayalakese\">erayalakese</a>, <a href=\"http://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>, <a href=\"http://profiles.wordpress.org/ebinnion\">Eric Binnion</a>, <a href=\"http://profiles.wordpress.org/ericmann\">Eric Mann</a>, <a href=\"http://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>, <a href=\"http://profiles.wordpress.org/eherman24\">Evan Herman</a>, <a href=\"http://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>, <a href=\"http://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>, <a href=\"http://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>, <a href=\"http://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"http://profiles.wordpress.org/garhdez\">garhdez</a>, <a href=\"http://profiles.wordpress.org/garyc40\">Gary Cao</a>, <a href=\"http://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"http://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"http://profiles.wordpress.org/garza\">garza</a>, <a href=\"http://profiles.wordpress.org/gauravmittal1995\">gauravmittal1995</a>, <a href=\"http://profiles.wordpress.org/gavra\">Gavrisimo</a>, <a href=\"http://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"http://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>, <a href=\"http://profiles.wordpress.org/vancoder\">Grant Mangham</a>, <a href=\"http://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"http://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>, <a href=\"http://profiles.wordpress.org/harrym\">harrym</a>, <a href=\"http://profiles.wordpress.org/hebbet\">hebbet</a>, <a href=\"http://profiles.wordpress.org/hinnerk\">Hinnerk Altenburg</a>, <a href=\"http://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>, <a href=\"http://profiles.wordpress.org/iljoja\">iljoja</a>, <a href=\"http://profiles.wordpress.org/imath\">imath</a>, <a href=\"http://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"http://profiles.wordpress.org/issuu\">issuu</a>, <a href=\"http://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"http://profiles.wordpress.org/jacklenox\">Jack Lenox</a>, <a href=\"http://profiles.wordpress.org/jackreichert\">Jack Reichert</a>, <a href=\"http://profiles.wordpress.org/jacobdubail\">Jacob Dubail</a>, <a href=\"http://profiles.wordpress.org/janhenkg\">JanHenkG</a>, <a href=\"http://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"http://profiles.wordpress.org/jwenerd\">Jared Wenerd</a>, <a href=\"http://profiles.wordpress.org/jaza613\">Jaza613</a>, <a href=\"http://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>, <a href=\"http://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"http://profiles.wordpress.org/jpry\">Jeremy Pry</a>, <a href=\"http://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>, <a href=\"http://profiles.wordpress.org/jerrysarcastic\">Jerry Bates (jerrysarcastic)</a>, <a href=\"http://profiles.wordpress.org/jesin\">Jesin A</a>, <a href=\"http://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>, <a href=\"http://profiles.wordpress.org/jesper800\">Jesper van Engelen</a>, <a href=\"http://profiles.wordpress.org/engelen\">Jesper van Engelen</a>, <a href=\"http://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>, <a href=\"http://profiles.wordpress.org/jgadbois\">jgadbois</a>, <a href=\"http://profiles.wordpress.org/jartes\">Joan Artes</a>, <a href=\"http://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"http://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"http://profiles.wordpress.org/jkudish\">Joey Kudish</a>, <a href=\"http://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"http://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"http://profiles.wordpress.org/johnzanussi\">John Zanussi</a>, <a href=\"http://profiles.wordpress.org/duck_\">Jon Cave</a>, <a href=\"http://profiles.wordpress.org/jonnyauk\">jonnyauk</a>, <a href=\"http://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"http://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>, <a href=\"http://profiles.wordpress.org/jjeaton\">Josh Eaton</a>, <a href=\"http://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>, <a href=\"http://profiles.wordpress.org/juliobox\">Julio Potier</a>, <a href=\"http://profiles.wordpress.org/justinsainton\">Justin Sainton</a>, <a href=\"http://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>, <a href=\"http://profiles.wordpress.org/greenshady\">Justin Tadlock</a>, <a href=\"http://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"http://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>, <a href=\"http://profiles.wordpress.org/ixkaito\">Kaito</a>, <a href=\"http://profiles.wordpress.org/kapeels\">kapeels</a>, <a href=\"http://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"http://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>, <a href=\"http://profiles.wordpress.org/kworthington\">Kevin Worthington</a>, <a href=\"http://profiles.wordpress.org/kpdesign\">Kim Parsell</a>, <a href=\"http://profiles.wordpress.org/kwight\">Kirk Wight</a>, <a href=\"http://profiles.wordpress.org/kitchin\">kitchin</a>, <a href=\"http://profiles.wordpress.org/knutsp\">Knut Sparhell</a>, <a href=\"http://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"http://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"http://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>, <a href=\"http://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"http://profiles.wordpress.org/leewillis77\">Lee Willis</a>, <a href=\"http://profiles.wordpress.org/lessbloat\">lessbloat</a>, <a href=\"http://profiles.wordpress.org/layotte\">Lew Ayotte</a>, <a href=\"http://profiles.wordpress.org/lritter\">lritter</a>, <a href=\"http://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>, <a href=\"http://profiles.wordpress.org/m_i_n\">m_i_n</a>, <a href=\"http://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>, <a href=\"http://profiles.wordpress.org/targz-1\">Manuel Schmalstieg</a>, <a href=\"http://profiles.wordpress.org/clorith\">Marius Jensen (Clorith)</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"http://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"http://profiles.wordpress.org/mjbanks\">Matt Banks</a>, <a href=\"http://profiles.wordpress.org/sivel\">Matt Martz</a>, <a href=\"http://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"http://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>, <a href=\"http://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"http://profiles.wordpress.org/mdbitz\">Matthew Denton</a>, <a href=\"http://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>, <a href=\"http://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"http://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"http://profiles.wordpress.org/meekyhwang\">meekyhwang</a>, <a href=\"http://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"http://profiles.wordpress.org/midxcat\">mi_cat</a>, <a href=\"http://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>, <a href=\"http://profiles.wordpress.org/michalzuber\">michalzuber</a>, <a href=\"http://profiles.wordpress.org/mauteri\">Mike Auteri</a>, <a href=\"http://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"http://profiles.wordpress.org/mikejolley\">Mike Jolley</a>, <a href=\"http://profiles.wordpress.org/mikelittle\">Mike Little</a>, <a href=\"http://profiles.wordpress.org/mikemanger\">Mike Manger</a>, <a href=\"http://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>, <a href=\"http://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>, <a href=\"http://profiles.wordpress.org/dimadin\">Milan Dinic</a>, <a href=\"http://profiles.wordpress.org/mnelson4\">mnelson4</a>, <a href=\"http://profiles.wordpress.org/morganestes\">Morgan Estes</a>, <a href=\"http://profiles.wordpress.org/usermrpapa\">Mr Papa</a>, <a href=\"http://profiles.wordpress.org/mrmist\">mrmist</a>, <a href=\"http://profiles.wordpress.org/m_uysl\">Mustafa Uysal</a>, <a href=\"http://profiles.wordpress.org/muvimotv\">MuViMoTV</a>, <a href=\"http://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>, <a href=\"http://profiles.wordpress.org/namibia\">Namibia</a>, <a href=\"http://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>, <a href=\"http://profiles.wordpress.org/nd987\">nd987</a>, <a href=\"http://profiles.wordpress.org/neil_pie\">Neil Pie</a>, <a href=\"http://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>, <a href=\"http://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"http://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>, <a href=\"http://profiles.wordpress.org/schoenwaldnils\">Nils Schonwald</a>, <a href=\"http://profiles.wordpress.org/ninos-ego\">Ninos</a>, <a href=\"http://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>, <a href=\"http://profiles.wordpress.org/compute\">Patrick Hesselberg</a>, <a href=\"http://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"http://profiles.wordpress.org/pdclark\">Paul Clark</a>, <a href=\"http://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>, <a href=\"http://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"http://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"http://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"http://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>, <a href=\"http://profiles.wordpress.org/philipjohn\">Philip John</a>, <a href=\"http://profiles.wordpress.org/senlin\">Piet</a>, <a href=\"http://profiles.wordpress.org/psoluch\">Piotr Soluch</a>, <a href=\"http://profiles.wordpress.org/mordauk\">Pippin Williamson</a>, <a href=\"http://profiles.wordpress.org/purzlbaum\">purzlbaum</a>, <a href=\"http://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"http://profiles.wordpress.org/rclations\">RC Lations</a>, <a href=\"http://profiles.wordpress.org/iamfriendly\">Richard Tape</a>, <a href=\"http://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>, <a href=\"http://profiles.wordpress.org/rob1n\">rob1n</a>, <a href=\"http://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>, <a href=\"http://profiles.wordpress.org/rdall\">Robert Dall</a>, <a href=\"http://profiles.wordpress.org/harmr\">RobertHarm</a>, <a href=\"http://profiles.wordpress.org/rohan013\">Rohan Rawat</a>, <a href=\"http://profiles.wordpress.org/rhurling\">Rouven Hurling</a>, <a href=\"http://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>, <a href=\"http://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"http://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"http://profiles.wordpress.org/sammybeats\">Sam Brodie</a>, <a href=\"http://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"http://profiles.wordpress.org/sathishn\">Sathish Nagarajan</a>, <a href=\"http://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"http://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"http://profiles.wordpress.org/greglone\">ScreenfeedFr</a>, <a href=\"http://profiles.wordpress.org/scribu\">scribu</a>, <a href=\"http://profiles.wordpress.org/seanchayes\">Sean Hayes</a>, <a href=\"http://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>, <a href=\"http://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>, <a href=\"http://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"http://profiles.wordpress.org/shanebp\">shanebp</a>, <a href=\"http://profiles.wordpress.org/sharonaustin\">Sharon Austin</a>, <a href=\"http://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>, <a href=\"http://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>, <a href=\"http://profiles.wordpress.org/simonp303\">simonp303</a>, <a href=\"http://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>, <a href=\"http://profiles.wordpress.org/solarissmoke\">solarissmoke</a>, <a href=\"http://profiles.wordpress.org/sphoid\">sphoid</a>, <a href=\"http://profiles.wordpress.org/stephdau\">Stephane Daury</a>, <a href=\"http://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"http://profiles.wordpress.org/stompweb\">Steven Jones</a>, <a href=\"http://profiles.wordpress.org/strangerstudios\">strangerstudios</a>, <a href=\"http://profiles.wordpress.org/5um17\">Sumit Singh</a>, <a href=\"http://profiles.wordpress.org/t4k1s\">t4k1s</a>, <a href=\"http://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>, <a href=\"http://profiles.wordpress.org/taylorde\">Taylor Dewey</a>, <a href=\"http://profiles.wordpress.org/thomasvanderbeek\">Thomas van der Beek</a>, <a href=\"http://profiles.wordpress.org/tillkruess\">Till Kruss</a>, <a href=\"http://profiles.wordpress.org/codenameeli\">Tim \'Eli\' Dalbey</a>, <a href=\"http://profiles.wordpress.org/tobiasbg\">TobiasBg</a>, <a href=\"http://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>, <a href=\"http://profiles.wordpress.org/willmot\">Tom Willmot</a>, <a href=\"http://profiles.wordpress.org/topher1kenobe\">Topher</a>, <a href=\"http://profiles.wordpress.org/torresga\">torresga</a>, <a href=\"http://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>, <a href=\"http://profiles.wordpress.org/wpsmith\">Travis Smith</a>, <a href=\"http://profiles.wordpress.org/treyhunner\">treyhunner</a>, <a href=\"http://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>, <a href=\"http://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>, <a href=\"http://profiles.wordpress.org/vlajos\">vlajos</a>, <a href=\"http://profiles.wordpress.org/voldemortensen\">voldemortensen</a>, <a href=\"http://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"http://profiles.wordpress.org/winterdev\">winterDev</a>, <a href=\"http://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>, <a href=\"http://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"http://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>, <a href=\"http://profiles.wordpress.org/tollmanz\">Zack Tollman</a>, and <a href=\"http://profiles.wordpress.org/zoerooney\">Zoe Rooney</a>. Also thanks to <a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a> for producing the release video, and Helen with <a href=\"http://adriansandi.com\">Adrián Sandí</a> for the music.</p>\n<p>If you want to follow along or help out, check out <a href=\"http://make.wordpress.org/\">Make WordPress</a> and our <a href=\"http://make.wordpress.org/core/\">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.1!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"http://wordpress.org/news/2014/09/benny/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"WordPress 4.0 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 12:20:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3287\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:321:\"The first release candidate for WordPress 4.0 is now available! In RC 1, we’ve made refinements to what we&#8217;ve been working on for this release. Check out the Beta 1 announcement post for more details on those features. We hope to ship WordPress 4.0 next week, but we need your help to get there. If you [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2127:\"<p>The first release candidate for WordPress 4.0 is now available!</p>\n<p>In RC 1, we’ve made refinements to what we&#8217;ve been working on for this release. Check out the <a href=\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">Beta 1 announcement post</a> for more details on those features. We hope to ship WordPress 4.0 <em>next week</em>, but we need your help to get there. If you haven’t tested 4.0 yet, there’s no time like the present. (Please, not on a production site, unless you’re adventurous.)</p>\n<p><strong>Think you’ve found a bug? </strong>Please post to the <a href=\"http://wordpress.org/support/forum/alphabeta/\">Alpha/Beta area in the support forums</a>. If any known issues come up, you’ll be able to <a href=\"http://core.trac.wordpress.org/report/5\">find them here</a>.</p>\n<p>To test WordPress 4.0 RC1, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-4.0-RC1.zip\">download the release candidate here</a> (zip). If you’d like to learn more about what’s new in WordPress 4.0, visit the awesome About screen in your dashboard (<strong><img src=\"http://i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692\" alt=\"\" width=\"16\" height=\"16\" /> → About</strong> in the toolbar).</p>\n<p><strong>Developers,</strong> please test your plugins and themes against WordPress 4.0 and update your plugin&#8217;s <em>Tested up to</em> version in the readme to 4.0 before next week. If you find compatibility problems, please be sure to post any issues to the support forums so we can figure those out before the final release. You also may want to <a href=\"http://make.wordpress.org/core/2014/08/21/introducing-plugin-icons-in-the-plugin-installer/\">give your plugin an icon</a>, which we launched last week and will appear in the dashboard along with banners.</p>\n<p><em>It is almost time</em><br />\n<em> For the 4.0 release</em><br />\n<em> And its awesomeness</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 4\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2014/08/wordpress-4-0-beta-4/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/news/2014/08/wordpress-4-0-beta-4/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 15 Aug 2014 05:06:19 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3280\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:353:\"The fourth and likely final beta for WordPress 4.0 is now available. We&#8217;ve made more than 250 changes in the past month, including: Further improvements to the editor scrolling experience, especially when it comes to the second column of boxes. Better handling of small screens in the media library modals. A separate bulk selection mode [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1999:\"<p>The fourth and likely final beta for WordPress 4.0 is now available. We&#8217;ve made <a href=\"https://core.trac.wordpress.org/log?rev=29496&amp;stop_rev=29229&amp;limit=300\">more than 250 changes</a> in the past month, including:</p>\n<ul>\n<li>Further improvements to the editor scrolling experience, especially when it comes to the second column of boxes.</li>\n<li>Better handling of small screens in the media library modals.</li>\n<li>A separate bulk selection mode for the media library grid view.</li>\n<li>Improvements to the installation language selector.</li>\n<li>Visual tweaks to plugin details and customizer panels.</li>\n</ul>\n<p><strong>We need your help</strong>. We’re still aiming for a release this month, which means the next week will be critical for identifying and squashing bugs. If you’re just joining us, please see <a href=\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">the Beta 1 announcement post</a> for what to look out for.</p>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums, where friendly moderators are standing by. <b>Plugin developers</b><strong>,</strong> if you haven’t tested WordPress 4.0 yet, now is the time — and be sure to update the “tested up to” version for your plugins so they’re listed as compatible with 4.0.</p>\n<p><strong>This software is still in development,</strong> so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-4.0-beta4.zip\">download the beta here</a> (zip).</p>\n<p><em>We are working hard</em><br />\n<em>To finish up 4.0<br />\n</em><em>Will you help us too?</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/news/2014/08/wordpress-4-0-beta-4/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"WordPress 3.9.2 Security Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"http://wordpress.org/news/2014/08/wordpress-3-9-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/news/2014/08/wordpress-3-9-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 06 Aug 2014 19:04:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3269\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:377:\"WordPress 3.9.2 is now available as a security release for all previous versions. We strongly encourage you to update your sites immediately. This release fixes a possible denial of service issue in PHP&#8217;s XML processing, reported by Nir Goldshlager of the Salesforce.com Product Security Team. It  was fixed by Michael Adams and Andrew Nacin of the WordPress [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2352:\"<p>WordPress 3.9.2 is now available as a security release for all previous versions. We strongly encourage you to update your sites immediately.</p>\n<p>This release fixes a possible denial of service issue in PHP&#8217;s XML processing, reported by <a href=\"https://twitter.com/nirgoldshlager\">Nir Goldshlager</a> of the Salesforce.com Product Security Team. It  was fixed by Michael Adams and Andrew Nacin of the WordPress security team and David Rothstein of the <a href=\"https://www.drupal.org/SA-CORE-2014-004\">Drupal security team</a>. This is the first time our two projects have coordinated joint security releases.</p>\n<p>WordPress 3.9.2 also contains other security changes:</p>\n<ul>\n<li>Fixes a possible but unlikely code execution when processing widgets (WordPress is not affected by default), discovered by <a href=\"http://www.buayacorp.com/\">Alex Concha</a> of the WordPress security team.</li>\n<li>Prevents information disclosure via XML entity attacks in the external GetID3 library, reported by <a href=\"http://onsec.ru/en/\">Ivan Novikov</a> of ONSec.</li>\n<li>Adds protections against brute attacks against CSRF tokens, reported by <a href=\"http://systemoverlord.com/\">David Tomaschik</a> of the Google Security Team.</li>\n<li>Contains some additional security hardening, like preventing cross-site scripting that could be triggered only by administrators.</li>\n</ul>\n<p>We appreciated responsible disclosure of these issues directly to our security team. For more information, see the <a href=\"http://codex.wordpress.org/Version_3.9.2\">release notes</a> or consult the <a href=\"https://core.trac.wordpress.org/log/branches/3.9?stop_rev=29383&amp;rev=29411\">list of changes</a>.</p>\n<p><a href=\"https://wordpress.org/download/\">Download WordPress 3.9.2</a> or venture over to <strong>Dashboard → Updates</strong> and simply click &#8220;Update Now&#8221;.</p>\n<p>Sites that support automatic background updates will be updated to WordPress 3.9.2 within 12 hours. (If you are still on WordPress 3.8.3 or 3.7.3, you will also be updated to 3.8.4 or 3.7.4. We don&#8217;t support older versions, so please update to 3.9.2 for the latest and greatest.)</p>\n<p>Already testing WordPress 4.0? The third beta is <a href=\"https://wordpress.org/wordpress-4.0-beta3.zip\">now available</a> (zip) and it contains these security fixes.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2014/08/wordpress-3-9-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 18 Jul 2014 21:15:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3261\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:374:\"WordPress 4.0 Beta 2 is now available for download and testing. This is software still in development, so we don’t recommend that you run it on a production site. To get the beta, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can download the beta here (zip). For more of what’s new in version 4.0, check out [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1738:\"<p>WordPress 4.0 Beta 2 is now available for download and testing. This is software still in development, so we don’t recommend that you run it on a production site. To get the beta, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-4.0-beta2.zip\">download the beta here</a> (zip).</p>\n<p>For more of what’s new in version 4.0, <a href=\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">check out the Beta 1 blog post</a>. Some of the changes in Beta 2 include:</p>\n<ul>\n<li>Further refinements for the the plugin installation and media library experiences.</li>\n<li>Updated TinyMCE, which now includes better indentation for lists and the restoration of the color picker.</li>\n<li>Cookies are now tied to a session internally, so if you have trouble logging in, <a href=\"https://core.trac.wordpress.org/ticket/20276\">#20276</a> may be the culprit.</li>\n<li>Various bug fixes (there were <a href=\"https://core.trac.wordpress.org/log?rev=29228&amp;stop_rev=29060&amp;limit=200\">nearly 170 changes</a> since last week).</li>\n</ul>\n<p>If you think you’ve found a bug, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. Or, if you’re comfortable writing a bug report, <a href=\"http://core.trac.wordpress.org/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"http://core.trac.wordpress.org/tickets/major\">a list of known bugs</a> and <a href=\"http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=4.0\">everything we’ve fixed</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 10 Jul 2014 10:17:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3248\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:329:\"WordPress 4.0 Beta 1 is now available! This software is still in development, so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4025:\"<p>WordPress 4.0 Beta 1 is now available!</p>\n<p><strong>This software is still in development,</strong> so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the <a href=\"http://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"https://wordpress.org/wordpress-4.0-beta1.zip\">download the beta here</a> (zip).</p>\n<p>4.0 is due out next month, but to get there, we need your help testing what we&#8217;ve been working on:</p>\n<ul>\n<li><strong>Previews of <a href=\"http://codex.wordpress.org/Embeds\">embedding via URLs</a></strong> in the visual editor and the &#8220;Insert from URL&#8221; tab in the media modal. Try pasting a URL (such as a <a href=\"http://wordpress.tv/\">WordPress.tv</a> or YouTube video) onto its own line in the visual editor. (<a href=\"https://core.trac.wordpress.org/ticket/28195\">#28195</a>, <a href=\"https://core.trac.wordpress.org/ticket/15490\">#15490</a>)</li>\n<li>The <strong>Media Library</strong> now has a &#8220;grid&#8221; view in addition to the existing list view. Clicking on an item takes you into a modal where you can see a larger preview and edit information about that attachment, and you can navigate between items right from the modal without closing it. (<a href=\"https://core.trac.wordpress.org/ticket/24716\">#24716</a>)</li>\n<li>We&#8217;re freshening up the <strong>plugin install experience</strong>. You&#8217;ll see some early visual changes as well as more information when searching for plugins and viewing details. (<a href=\"https://core.trac.wordpress.org/ticket/28785\">#28785</a>, <a href=\"https://core.trac.wordpress.org/ticket/27440\">#27440</a>)</li>\n<li><strong>Selecting a language</strong> when you run the installation process. (<a href=\"https://core.trac.wordpress.org/ticket/28577\">#28577</a>)</li>\n<li>The <strong>editor</strong> intelligently resizes and its top and bottom bars pin when needed. Browsers don&#8217;t like to agree on where to put things like cursors, so if you find a bug here, please also let us know your browser and operating system. (<a href=\"https://core.trac.wordpress.org/ticket/28328\">#28328</a>)</li>\n<li>We&#8217;ve made some improvements to how your keyboard and cursor interact with <strong>TinyMCE views</strong> such as the gallery preview. Much like the editor resizing and scrolling improvements, knowing about your setup is particularly important for bug reports here. (<a href=\"https://core.trac.wordpress.org/ticket/28595\">#28595</a>)</li>\n<li><strong>Widgets in the Customizer</strong> are now loaded in a separate panel. (<a href=\"https://core.trac.wordpress.org/ticket/27406\">#27406</a>)</li>\n<li>We&#8217;ve also made some changes to some <strong>formatting</strong> functions, so if you see quotes curling in the wrong direction, please file a bug report.</li>\n</ul>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report, <a href=\"https://make.wordpress.org/core/reports/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"http://core.trac.wordpress.org/tickets/major\">a list of known bugs</a> and <a href=\"http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=4.0\">everything we’ve fixed</a> so far.</p>\n<p><strong>Developers:</strong> Never fear, we haven&#8217;t forgotten you. There&#8217;s plenty for you, too &#8211; more on that in upcoming posts. In the meantime, check out the <a href=\"http://make.wordpress.org/core/2014/07/08/customizer-improvements-in-4-0/#customizer-panels\">API for panels in the Customizer</a>.</p>\n<p>Happy testing!</p>\n<p><em>Plugins, editor</em><br />\n<em>Media, things in between</em><br />\n<em>Please help look for bugs</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"WordPress 3.9.1 Maintenance Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"http://wordpress.org/news/2014/05/wordpress-3-9-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/news/2014/05/wordpress-3-9-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 08 May 2014 18:40:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3241\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:385:\"After three weeks and more than 9 million downloads of WordPress 3.9, we&#8217;re pleased to announce that WordPress 3.9.1 is now available. This maintenance release fixes 34 bugs in 3.9, including numerous fixes for multisite networks, customizing widgets while previewing themes, and the updated visual editor. We&#8217;ve also made some improvements to the new audio/video [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3077:\"<p>After three weeks and more than 9 million downloads of <a title=\"WordPress 3.9 “Smith”\" href=\"http://wordpress.org/news/2014/04/smith/\">WordPress 3.9</a>, we&#8217;re pleased to announce that WordPress 3.9.1 is now available.</p>\n<p>This maintenance release fixes 34 bugs in 3.9, including numerous fixes for multisite networks, customizing widgets while previewing themes, and the updated visual editor. We&#8217;ve also made some improvements to the new audio/video playlists feature and made some adjustments to improve performance. For a full list of changes, consult the <a href=\"https://core.trac.wordpress.org/query?milestone=3.9.1\">list of tickets</a> and the <a href=\"https://core.trac.wordpress.org/log/branches/3.9?rev=28353&amp;stop_rev=28154\">changelog</a>.</p>\n<p>If you are one of the millions already running WordPress 3.9, we&#8217;ve started rolling out automatic background updates for 3.9.1. For sites <a href=\"http://wordpress.org/plugins/background-update-tester/\">that support them</a>, of course.</p>\n<p><a href=\"http://wordpress.org/download/\">Download WordPress 3.9.1</a> or venture over to <strong>Dashboard → Updates</strong> and simply click &#8220;Update Now.&#8221;</p>\n<p>Thanks to all of these fine individuals for contributing to 3.9.1: <a href=\"http://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"http://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"http://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"http://profiles.wordpress.org/rzen\">Brian Richards</a>, <a href=\"http://profiles.wordpress.org/ehg\">Chris Blower</a>, <a href=\"http://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>, <a href=\"http://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"http://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"http://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>, <a href=\"http://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"http://profiles.wordpress.org/helen\">Helen Hou-Sandi</a>, <a href=\"http://profiles.wordpress.org/imath\">imath</a>, <a href=\"http://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"http://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"http://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"http://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"http://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"http://profiles.wordpress.org/m_i_n\">m_i_n</a>, <a href=\"http://profiles.wordpress.org/clorith\">Marius Jensen</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"http://profiles.wordpress.org/dimadin\">Milan Dinić</a>, <a href=\"http://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"http://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"http://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"http://profiles.wordpress.org/SergeyBiryukov\">Sergey Biryukov</a>, and <a href=\"http://profiles.wordpress.org/westonruter\">Weston Ruter</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2014/05/wordpress-3-9-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 3.9 “Smith”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/news/2014/04/smith/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"http://wordpress.org/news/2014/04/smith/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 16 Apr 2014 18:33:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3154\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:411:\"Version 3.9 of WordPress, named &#8220;Smith&#8221; in honor of jazz organist Jimmy Smith, is available for download or update in your WordPress dashboard. This release features a number of refinements that we hope you&#8217;ll love. A smoother media editing experience Improved visual editing The updated visual editor has improved speed, accessibility, and mobile support. You can paste into the [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:23216:\"<p>Version 3.9 of WordPress, named &#8220;Smith&#8221; in honor of jazz organist <a href=\"http://en.wikipedia.org/wiki/Jimmy_Smith_(musician)\">Jimmy Smith</a>, is available <a href=\"http://wordpress.org/download/\">for download</a> or update in your WordPress dashboard. This release features a number of refinements that we hope you&#8217;ll love.</p>\n<embed src=\"//v0.wordpress.com/player.swf?v=1.03\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"360\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\" flashvars=\"guid=sAiXhCfV&amp;isDynamicSeeking=true\" title=\"\"></embed>\n<h2 class=\"about-headline-callout\" style=\"text-align: center\">A smoother media editing experience</h2>\n<div>\n<p><img class=\"alignright wp-image-3168\" src=\"//wordpress.org/news/files/2014/04/editor1-300x233.jpg\" alt=\"editor\" width=\"228\" height=\"177\" /></p>\n<h3>Improved visual editing</h3>\n<p>The updated visual editor has improved speed, accessibility, and mobile support. You can paste into the visual editor from your word processor without wasting time to clean up messy styling. (Yeah, we’re talking about you, Microsoft Word.)</p>\n</div>\n<div style=\"clear: both\"></div>\n<div>\n<p><img class=\"alignright wp-image-3170\" src=\"//wordpress.org/news/files/2014/04/image1-300x233.jpg\" alt=\"image\" width=\"228\" height=\"178\" /></p>\n<h3>Edit images easily</h3>\n<p>With quicker access to crop and rotation tools, it’s now much easier to edit your images while editing posts. You can also scale images directly in the editor to find just the right fit.</p>\n</div>\n<div style=\"clear: both\"></div>\n<div>\n<p><img class=\"alignright wp-image-3187\" src=\"//wordpress.org/news/files/2014/04/dragdrop1-300x233.jpg\" alt=\"dragdrop\" width=\"228\" height=\"178\" /></p>\n<h3>Drag and drop your images</h3>\n<p>Uploading your images is easier than ever. Just grab them from your desktop and drop them in the editor.</p>\n</div>\n<div style=\"clear: both\"></div>\n<hr />\n<h2 style=\"text-align: center\">Gallery previews</h2>\n<p><img class=\"aligncenter size-full wp-image-3169\" src=\"//wordpress.org/news/files/2014/04/gallery1.jpg\" alt=\"gallery\" width=\"980\" height=\"550\" /></p>\n<p>Galleries display a beautiful grid of images right in the editor, just like they do in your published post.</p>\n<hr />\n<h2 style=\"text-align: center\">Do more with audio and video</h2>\n\n<a href=\'http://wordpress.org/news/files/2014/04/AintMisbehavin.mp3\'>Ain\'t Misbehavin\'</a>\n<a href=\'http://wordpress.org/news/files/2014/04/DavenportBlues.mp3\'>Davenport Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/JellyRollMorton-BuddyBoldensBlues.mp3\'>Buddy Bolden\'s Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/Johnny_Hodges_Orchestra-Squaty_Roo-1941.mp3\'>Squaty Roo</a>\n<a href=\'http://wordpress.org/news/files/2014/04/Louisiana_Five-Dixie_Blues-1919.mp3\'>Dixie Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/WolverineBlues.mp3\'>Wolverine Blues</a>\n\n<p>Images have galleries; now we’ve added simple audio and video playlists, so you can showcase your music and clips.</p>\n<hr />\n<h2 style=\"text-align: center\">Live widget and header previews</h2>\n<div style=\"width: 692px; height: 448px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-3154-3\" width=\"692\" height=\"448\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//wordpress.org/news/files/2014/04/widgets.mp4?_=3\" /><a href=\"//wordpress.org/news/files/2014/04/widgets.mp4\">//wordpress.org/news/files/2014/04/widgets.mp4</a></video></div>\n<p>Add, edit, and rearrange your site’s widgets right in the theme customizer. No “save and surprise” — preview your changes live and only save them when you’re ready.</p>\n<p>The improved header image tool also lets you upload, crop, and manage headers while customizing your theme.</p>\n<hr />\n<h2 style=\"text-align: center\">Stunning new theme browser</h2>\n<p><img class=\"aligncenter size-full wp-image-3172\" src=\"//wordpress.org/news/files/2014/04/theme1.jpg\" alt=\"theme\" width=\"1003\" height=\"558\" /><br />\nLooking for a new theme should be easy and fun. Lose yourself in the boundless supply of free WordPress.org themes with the beautiful new theme browser.</p>\n<hr />\n<h2 style=\"text-align: center\">The Crew</h2>\n<p>This release was led by <a href=\"http://nacin.com/\">Andrew Nacin</a> and <a href=\"http://www.getsource.net/\">Mike Schroder</a>, with the help of these fine individuals. There are 267 contributors with props in this release, a new high:</p>\n<p><a href=\"http://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"http://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"http://profiles.wordpress.org/kawauso\">Adam Harley</a>, <a href=\"http://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"http://profiles.wordpress.org/adelval\">adelval</a>, <a href=\"http://profiles.wordpress.org/ajay\">Ajay</a>, <a href=\"http://profiles.wordpress.org/akeda\">Akeda Bagus</a>, <a href=\"http://profiles.wordpress.org/xknown\">Alex Concha</a>, <a href=\"http://profiles.wordpress.org/tellyworth\">Alex Shiels</a>, <a href=\"http://profiles.wordpress.org/aliso\">Alison Barrett</a>, <a href=\"http://profiles.wordpress.org/collinsinternet\">Allan Collins</a>, <a href=\"http://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>, <a href=\"http://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"http://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"http://profiles.wordpress.org/norcross\">Andrew Norcross</a>, <a href=\"http://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"http://profiles.wordpress.org/rarst\">Andrey \"Rarst\" Savchenko</a>, <a href=\"http://profiles.wordpress.org/andykeith\">Andy Keith</a>, <a href=\"http://profiles.wordpress.org/andy\">Andy Skelton</a>, <a href=\"http://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"http://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>, <a href=\"http://profiles.wordpress.org/barry\">Barry</a>, <a href=\"http://profiles.wordpress.org/toszcze\">Bartosz Romanowski</a>, <a href=\"http://profiles.wordpress.org/bassgang\">bassgang</a>, <a href=\"http://profiles.wordpress.org/bcworkz\">bcworkz</a>, <a href=\"http://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>, <a href=\"http://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>, <a href=\"http://profiles.wordpress.org/bigdawggi\">bigdawggi</a>, <a href=\"http://profiles.wordpress.org/bobbravo2\">Bob Gregor</a>, <a href=\"http://profiles.wordpress.org/bobbingwide\">bobbingwide</a>, <a href=\"http://profiles.wordpress.org/bradt\">Brad Touesnard</a>, <a href=\"http://profiles.wordpress.org/bradparbs\">bradparbs</a>, <a href=\"http://profiles.wordpress.org/bramd\">bramd</a>, <a href=\"http://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"http://profiles.wordpress.org/brasofilo\">brasofilo</a>, <a href=\"http://profiles.wordpress.org/bravokeyl\">bravokeyl</a>, <a href=\"http://profiles.wordpress.org/bpetty\">Bryan Petty</a>, <a href=\"http://profiles.wordpress.org/cgaffga\">cgaffga</a>, <a href=\"http://profiles.wordpress.org/chiragswadia\">Chirag Swadia</a>, <a href=\"http://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"http://profiles.wordpress.org/ehg\">Chris Blower</a>, <a href=\"http://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>, <a href=\"http://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>, <a href=\"http://profiles.wordpress.org/chrisscott\">Chris Scott</a>, <a href=\"http://profiles.wordpress.org/chriseverson\">chriseverson</a>, <a href=\"http://profiles.wordpress.org/chrisguitarguy\">chrisguitarguy</a>, <a href=\"http://profiles.wordpress.org/cfinke\">Christopher Finke</a>, <a href=\"http://profiles.wordpress.org/ciantic\">ciantic</a>, <a href=\"http://profiles.wordpress.org/antorome\">Comparativa de Bancos</a>, <a href=\"http://profiles.wordpress.org/cojennin\">Connor Jennings</a>, <a href=\"http://profiles.wordpress.org/corvannoorloos\">Cor van Noorloos</a>, <a href=\"http://profiles.wordpress.org/corphi\">Corphi</a>, <a href=\"http://profiles.wordpress.org/cramdesign\">cramdesign</a>, <a href=\"http://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"http://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>, <a href=\"http://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>, <a href=\"http://profiles.wordpress.org/koop\">Daryl Koopersmith</a>, <a href=\"http://profiles.wordpress.org/eightface\">Dave Kellam (eightface)</a>, <a href=\"http://profiles.wordpress.org/dpe415\">DaveE</a>, <a href=\"http://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>, <a href=\"http://profiles.wordpress.org/davidanderson\">David Anderson</a>, <a href=\"http://profiles.wordpress.org/davidmarichal\">David Marichal</a>, <a href=\"http://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>, <a href=\"http://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"http://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"http://profiles.wordpress.org/dougwollison\">Doug Wollison</a>, <a href=\"http://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"http://profiles.wordpress.org/drprotocols\">DrProtocols</a>, <a href=\"http://profiles.wordpress.org/dustyf\">Dustin Filippini</a>, <a href=\"http://profiles.wordpress.org/eatingrules\">eatingrules</a>, <a href=\"http://profiles.wordpress.org/plocha\">edik</a>, <a href=\"http://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>, <a href=\"http://profiles.wordpress.org/eliorivero\">Elio Rivero</a>, <a href=\"http://profiles.wordpress.org/enej\">enej</a>, <a href=\"http://profiles.wordpress.org/ericlewis\">Eric Lewis</a>, <a href=\"http://profiles.wordpress.org/ericmann\">Eric Mann</a>, <a href=\"http://profiles.wordpress.org/evarlese\">Erica Varlese</a>, <a href=\"http://profiles.wordpress.org/ethitter\">Erick Hitter</a>, <a href=\"http://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>, <a href=\"http://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>, <a href=\"http://profiles.wordpress.org/fboender\">fboender</a>, <a href=\"http://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"http://profiles.wordpress.org/garyc40\">Gary Cao</a>, <a href=\"http://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"http://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"http://profiles.wordpress.org/genkisan\">genkisan</a>, <a href=\"http://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>, <a href=\"http://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"http://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>, <a href=\"http://profiles.wordpress.org/vancoder\">Grant Mangham</a>, <a href=\"http://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"http://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>, <a href=\"http://profiles.wordpress.org/hakre\">hakre</a>, <a href=\"http://profiles.wordpress.org/hanni\">hanni</a>, <a href=\"http://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>, <a href=\"http://profiles.wordpress.org/ippetkov\">ippetkov</a>, <a href=\"http://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"http://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"http://profiles.wordpress.org/jackreichert\">Jack Reichert</a>, <a href=\"http://profiles.wordpress.org/_jameslee\">jameslee</a>, <a href=\"http://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"http://profiles.wordpress.org/janrenn\">janrenn</a>, <a href=\"http://profiles.wordpress.org/jaycc\">JayCC</a>, <a href=\"http://profiles.wordpress.org/jeffsebring\">Jeff Sebring</a>, <a href=\"http://profiles.wordpress.org/jenmylo\">Jen Mylo</a>, <a href=\"http://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"http://profiles.wordpress.org/jesin\">Jesin A</a>, <a href=\"http://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>, <a href=\"http://profiles.wordpress.org/jnielsendotnet\">jnielsendotnet</a>, <a href=\"http://profiles.wordpress.org/jartes\">Joan Artes</a>, <a href=\"http://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"http://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"http://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"http://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"http://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>, <a href=\"http://profiles.wordpress.org/johnregan3\">John Regan</a>, <a href=\"http://profiles.wordpress.org/duck_\">Jon Cave</a>, <a href=\"http://profiles.wordpress.org/jond3r\">Jonas Bolinder (jond3r)</a>, <a href=\"http://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"http://profiles.wordpress.org/shelob9\">Josh Pollock</a>, <a href=\"http://profiles.wordpress.org/joshuaabenazer\">Joshua Abenazer</a>, <a href=\"http://profiles.wordpress.org/jstraitiff\">jstraitiff</a>, <a href=\"http://profiles.wordpress.org/juliobox\">Julio Potier</a>, <a href=\"http://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>, <a href=\"http://profiles.wordpress.org/justinsainton\">Justin Sainton</a>, <a href=\"http://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"http://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>, <a href=\"http://profiles.wordpress.org/kasparsd\">Kaspars</a>, <a href=\"http://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"http://profiles.wordpress.org/kerikae\">kerikae</a>, <a href=\"http://profiles.wordpress.org/kworthington\">Kevin Worthington</a>, <a href=\"http://profiles.wordpress.org/kpdesign\">Kim Parsell</a>, <a href=\"http://profiles.wordpress.org/kwight\">Kirk Wight</a>, <a href=\"http://profiles.wordpress.org/kitchin\">kitchin</a>, <a href=\"http://profiles.wordpress.org/klihelp\">klihelp</a>, <a href=\"http://profiles.wordpress.org/knutsp\">Knut Sparhell</a>, <a href=\"http://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"http://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"http://profiles.wordpress.org/drozdz\">Krzysiek Drozdz</a>, <a href=\"http://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"http://profiles.wordpress.org/leewillis77\">Lee Willis</a>, <a href=\"http://profiles.wordpress.org/lpointet\">lpointet</a>, <a href=\"http://profiles.wordpress.org/ldebrouwer\">Luc De Brouwer</a>, <a href=\"http://profiles.wordpress.org/spmlucas\">Lucas Karpiuk</a>, <a href=\"http://profiles.wordpress.org/lkwdwrd\">Luke Woodward</a>, <a href=\"http://profiles.wordpress.org/mark8barnes\">Mark Barnes</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"http://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"http://profiles.wordpress.org/marventus\">Marventus</a>, <a href=\"http://profiles.wordpress.org/iammattthomas\">Matt (Thomas) Miklic</a>, <a href=\"http://profiles.wordpress.org/mjbanks\">Matt Banks</a>, <a href=\"http://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"http://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"http://profiles.wordpress.org/mdbitz\">Matthew Denton</a>, <a href=\"http://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"http://profiles.wordpress.org/mattonomics\">mattonomics</a>, <a href=\"http://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"http://profiles.wordpress.org/matveb\">Matías Ventura</a>, <a href=\"http://profiles.wordpress.org/maxcutler\">Max Cutler</a>, <a href=\"http://profiles.wordpress.org/mcadwell\">mcadwell</a>, <a href=\"http://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"http://profiles.wordpress.org/meloniq\">meloniq</a>, <a href=\"http://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>, <a href=\"http://profiles.wordpress.org/michelwppi\">Michel - xiligroup dev</a>, <a href=\"http://profiles.wordpress.org/mcsf\">Miguel Fonseca</a>, <a href=\"http://profiles.wordpress.org/gradyetc\">Mike Burns</a>, <a href=\"http://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"http://profiles.wordpress.org/mikemanger\">Mike Manger</a>, <a href=\"http://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>, <a href=\"http://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>, <a href=\"http://profiles.wordpress.org/mikecorkum\">mikecorkum</a>, <a href=\"http://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>, <a href=\"http://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>, <a href=\"http://profiles.wordpress.org/morganestes\">Morgan Estes</a>, <a href=\"http://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>, <a href=\"http://profiles.wordpress.org/Nao\">Naoko Takano</a>, <a href=\"http://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>, <a href=\"http://profiles.wordpress.org/nendeb55\">nendeb55</a>, <a href=\"http://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"http://profiles.wordpress.org/nicolealleyinteractivecom\">Nicole Arnold</a>, <a href=\"http://profiles.wordpress.org/nikv\">Nikhil Vimal (NikV)</a>, <a href=\"http://profiles.wordpress.org/nivijah\">Nivi Jah</a>, <a href=\"http://profiles.wordpress.org/nofearinc\">nofearinc</a>, <a href=\"http://profiles.wordpress.org/nunomorgadinho\">Nuno Morgadinho</a>, <a href=\"http://profiles.wordpress.org/olivm\">olivM</a>, <a href=\"http://profiles.wordpress.org/jbkkd\">Omer Korner</a>, <a href=\"http://profiles.wordpress.org/originalexe\">OriginalEXE</a>, <a href=\"http://profiles.wordpress.org/patricknami\">patricknami</a>, <a href=\"http://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"http://profiles.wordpress.org/djpaul\">Paul Gibbs</a>, <a href=\"http://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"http://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"http://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"http://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>, <a href=\"http://profiles.wordpress.org/mordauk\">Pippin Williamson</a>, <a href=\"http://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>, <a href=\"http://profiles.wordpress.org/prettyboymp\">prettyboymp</a>, <a href=\"http://profiles.wordpress.org/raamdev\">Raam Dev</a>, <a href=\"http://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"http://profiles.wordpress.org/mauryaratan\">Ram Ratan Maurya</a>, <a href=\"http://profiles.wordpress.org/ramonchiara\">ramonchiara</a>, <a href=\"http://profiles.wordpress.org/ounziw\">Rescuework Support</a>, <a href=\"http://profiles.wordpress.org/rhyswynne\">Rhys Wynne</a>, <a href=\"http://profiles.wordpress.org/ricardocorreia\">Ricardo Correia</a>, <a href=\"http://profiles.wordpress.org/theorboman\">Richard Sweeney</a>, <a href=\"http://profiles.wordpress.org/iamfriendly\">Richard Tape</a>, <a href=\"http://profiles.wordpress.org/richard2222\">richard2222</a>, <a href=\"http://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>, <a href=\"http://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>, <a href=\"http://profiles.wordpress.org/robmiller\">robmiller</a>, <a href=\"http://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>, <a href=\"http://profiles.wordpress.org/romaimperator\">romaimperator</a>, <a href=\"http://profiles.wordpress.org/roothorick\">roothorick</a>, <a href=\"http://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>, <a href=\"http://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"http://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"http://profiles.wordpress.org/salcode\">Sal Ferrarello</a>, <a href=\"http://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"http://profiles.wordpress.org/sandyr\">Sandeep</a>, <a href=\"http://profiles.wordpress.org/scottlee\">Scott Lee</a>, <a href=\"http://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"http://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"http://profiles.wordpress.org/greglone\">ScreenfeedFr</a>, <a href=\"http://profiles.wordpress.org/scribu\">scribu</a>, <a href=\"http://profiles.wordpress.org/sdasse\">sdasse</a>, <a href=\"http://profiles.wordpress.org/bootsz\">Sean Butze</a>, <a href=\"http://profiles.wordpress.org/seanchayes\">Sean Hayes</a>, <a href=\"http://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>, <a href=\"http://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"http://profiles.wordpress.org/shahpranaf\">shahpranaf</a>, <a href=\"http://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>, <a href=\"http://profiles.wordpress.org/shinichin\">ShinichiN</a>, <a href=\"http://profiles.wordpress.org/pross\">Simon Prosser</a>, <a href=\"http://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>, <a href=\"http://profiles.wordpress.org/siobhan\">Siobhan</a>, <a href=\"http://profiles.wordpress.org/siobhyb\">Siobhan Bamber (siobhyb)</a>, <a href=\"http://profiles.wordpress.org/sirzooro\">sirzooro</a>, <a href=\"http://profiles.wordpress.org/solarissmoke\">solarissmoke</a>, <a href=\"http://profiles.wordpress.org/sonjanyc\">sonjanyc</a>, <a href=\"http://profiles.wordpress.org/spencerfinnell\">Spencer Finnell</a>, <a href=\"http://profiles.wordpress.org/piontkowski\">Spencer Piontkowski</a>, <a href=\"http://profiles.wordpress.org/stephcook22\">stephcook22</a>, <a href=\"http://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"http://profiles.wordpress.org/stephenharris\">Stephen Harris</a>, <a href=\"http://profiles.wordpress.org/sbruner\">Steve Bruner</a>, <a href=\"http://profiles.wordpress.org/stevenkword\">Steven Word</a>, <a href=\"http://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>, <a href=\"http://profiles.wordpress.org/tanner-m\">Tanner Moushey</a>, <a href=\"http://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>, <a href=\"http://profiles.wordpress.org/tbrams\">tbrams</a>, <a href=\"http://profiles.wordpress.org/tobiasbg\">TobiasBg</a>, <a href=\"http://profiles.wordpress.org/tomauger\">Tom Auger</a>, <a href=\"http://profiles.wordpress.org/willmot\">Tom Willmot</a>, <a href=\"http://profiles.wordpress.org/topher1kenobe\">Topher</a>, <a href=\"http://profiles.wordpress.org/topquarky\">topquarky</a>, <a href=\"http://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>, <a href=\"http://profiles.wordpress.org/toru\">Toru</a>, <a href=\"http://profiles.wordpress.org/wpsmith\">Travis Smith</a>, <a href=\"http://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>, <a href=\"http://profiles.wordpress.org/undergroundnetwork\">undergroundnetwork</a>, <a href=\"http://profiles.wordpress.org/varunagw\">VarunAgw</a>, <a href=\"http://profiles.wordpress.org/wawco\">wawco</a>, <a href=\"http://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"http://profiles.wordpress.org/wokamoto\">wokamoto</a>, <a href=\"http://profiles.wordpress.org/xsonic\">xsonic</a>, <a href=\"http://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"http://profiles.wordpress.org/yurivictor\">Yuri Victor</a>, <a href=\"http://profiles.wordpress.org/zbtirrell\">Zach Tirrell</a>, and <a href=\"http://profiles.wordpress.org/vanillalounge\">Ze Fontainhas</a>. Also thanks to <a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a> for producing the release video.</p>\n<p>If you want to follow along or help out, check out <a href=\"http://make.wordpress.org/\">Make WordPress</a> and our <a href=\"http://make.wordpress.org/core/\">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.0!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"http://wordpress.org/news/2014/04/smith/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress 3.9 Release Candidate 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"http://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 15 Apr 2014 09:47:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3151\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:356:\"The second release candidate for WordPress 3.9 is now available for testing. If you haven&#8217;t tested 3.9 yet, you&#8217;re running out of time! We made about five dozen changes since the first release candidate, and those changes are all helpfully summarized in our weekly post on the development blog. Probably the biggest fixes are to live [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2273:\"<p>The second release candidate for WordPress 3.9 is now available for testing.</p>\n<p>If you haven&#8217;t tested 3.9 yet, you&#8217;re running out of time! We made about five dozen changes since the <a title=\"WordPress 3.9 Release Candidate\" href=\"//wordpress.org/news/2014/04/wordpress-3-9-release-candidate/\">first release candidate</a>, and those changes are all helpfully summarized <a href=\"//make.wordpress.org/core/?p=10237\">in our weekly post</a> on the development blog. Probably the biggest fixes are to live widget previews and the new theme browser, along with some extra TinyMCE compatibility and some RTL fixes.</p>\n<p><strong>Plugin authors:</strong> Could you test your plugins against 3.9, and if they&#8217;re compatible, make sure they are marked as tested up to 3.9? It only takes a few minutes and this really helps make launch easier. Be sure to follow along the core development blog; we&#8217;ve been posting <a href=\"//make.wordpress.org/core/tag/3-9-dev-notes/\">notes for developers for 3.9</a>. (For example: <a href=\"//make.wordpress.org/core/2014/04/15/html5-galleries-captions-in-wordpress-3-9/\">HTML5</a>, <a href=\"//make.wordpress.org/core/2014/04/14/symlinked-plugins-in-wordpress-3-9/\">symlinks</a>, <a href=\"//make.wordpress.org/core/2014/04/07/mysql-in-wordpress-3-9/\">MySQL</a>, <a href=\"//make.wordpress.org/core/2014/04/11/plupload-2-x-in-wordpress-3-9/\">Plupload</a>.)</p>\n<p>To test WordPress 3.9 RC2, try the <a href=\"//wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"//wordpress.org/wordpress-3.9-RC2.zip\">download the release candidate here</a> (zip). If you’d like to learn more about what’s new in WordPress 3.9, visit the nearly complete About screen in your dashboard (<strong><img src=\"//i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692\" alt=\"\" width=\"16\" height=\"16\" /> → About</strong> in the toolbar) and also check out <a title=\"WordPress 3.9 Beta 1\" href=\"//wordpress.org/news/2014/03/wordpress-3-9-beta-1/\">the Beta 1 post</a>.</p>\n<p><em>This is for testing,</em><br />\n<em>so not recommended for<br />\nproduction sites—yet.</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"WordPress 3.8.3 Maintenance Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"http://wordpress.org/news/2014/04/wordpress-3-8-3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/news/2014/04/wordpress-3-8-3/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 14 Apr 2014 19:29:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3145\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:338:\"WordPress 3.8.3 is now available to fix a small but unfortunate bug in the WordPress 3.8.2 security release. The &#8220;Quick Draft&#8221; tool on the dashboard screen was broken in the 3.8.2 update. If you tried to use it, your draft would disappear and it wouldn&#8217;t save. While we doubt anyone was writing a novella using [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2339:\"<p>WordPress 3.8.3 is now available to fix a small but unfortunate bug in the <a title=\"WordPress 3.8.2 Security Release\" href=\"http://wordpress.org/news/2014/04/wordpress-3-8-2/\">WordPress 3.8.2 security release</a>.</p>\n<p>The &#8220;Quick Draft&#8221; tool on the dashboard screen was broken in the 3.8.2 update. If you tried to use it, your draft would disappear and it wouldn&#8217;t save. While we doubt anyone was writing a novella using this tool, <em>any</em> loss of content is unacceptable to us.</p>\n<p>We recognize how much trust you place in us to safeguard your content, and we take this responsibility very seriously. We&#8217;re sorry we let you down.</p>\n<p>We&#8217;ve all lost words we&#8217;ve written before, like an email thanks to a cat on the keyboard or a term paper to a blue screen of death. Over the last few WordPress releases, we&#8217;ve made a number of improvements to features like autosaves and revisions. With revisions, an old edit can always be restored. We&#8217;re trying our hardest to save your content somewhere even if your power goes out or your browser crashes. We even monitor your internet connection and prevent you from hitting that &#8220;Publish&#8221; button at the exact moment the coffee shop Wi-Fi has a hiccup.</p>\n<p>It&#8217;s <em>possible</em> that the quick draft you lost last week is still in the database, and just hidden from view. As an added complication, these &#8220;discarded drafts&#8221; normally get deleted after seven days, and it&#8217;s already been six days since the release. If we were able to rescue your draft, you&#8217;ll see it on the &#8220;All Posts&#8221; screen after you update to 3.8.3. (We&#8217;ll also be pushing 3.8.3 out as a background update, so you may just see a draft appear.)</p>\n<p>So, if you tried to jot down a quick idea last week, I hope WordPress has recovered it for you. Maybe it&#8217;ll turn into that novella.</p>\n<p><a href=\"http://wordpress.org/download/\">Download WordPress 3.8.3</a> or click &#8220;Update Now&#8221; on Dashboard → Updates.</p>\n<p><em>This affected version 3.7.2 as well, so we&#8217;re pushing a 3.7.3 to these installs, but we&#8217;d encourage you to update to the latest and greatest.</em></p>\n<hr />\n<p><em>Now for some good news:<br />\nWordPress 3.9 is near.<br />\nExpect it this week</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/news/2014/04/wordpress-3-8-3/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:31:\"http://wordpress.org/news/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"hourly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:9:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Sun, 07 Sep 2014 18:09:10 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:10:\"x-pingback\";s:36:\"http://wordpress.org/news/xmlrpc.php\";s:13:\"last-modified\";s:29:\"Thu, 04 Sep 2014 17:05:39 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 250\";}s:5:\"build\";s:14:\"20140611021551\";}','no'),(4863,'_transient_timeout_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1410156550','no'),(4864,'_transient_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1410113350','no'),(4865,'_transient_timeout_feed_867bd5c64f85878d03a060509cd2f92c','1410156551','no'),(4866,'_transient_feed_867bd5c64f85878d03a060509cd2f92c','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:61:\"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"WordPress Planet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Planet - http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:50:{i:0;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Matt: Top &amp; Bottom Line\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44093\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"http://ma.tt/2014/09/top-bottomline/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:402:\"<blockquote><p>Somebody once told me, “Manage the top line, and the bottom line will follow.” What’s the top line? It’s things like, why are we doing this in the first place? What’s our strategy? What are customers saying? How responsive are we? Do we have the best products and the best people? Those are the kind of questions you have to focus on.</p></blockquote>\n<p>&#8212; Steve Jobs</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 06 Sep 2014 17:00:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"WPTavern: WordPress Theme Review Team to Launch Mentoring Program\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29636\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"http://wptavern.com/wordpress-theme-review-team-to-launch-mentoring-program\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3034:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/WPMentorFeaturedImage1.jpg\" rel=\"prettyphoto[29636]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/WPMentorFeaturedImage1.jpg?resize=844%2C350\" alt=\"WPMentor Featured Image\" class=\"aligncenter size-full wp-image-14106\" /></a></p>\n<p>The <a href=\"http://make.wordpress.org/themes/\" target=\"_blank\">WordPress.org Theme Review Team</a> put out a call for mentors this week. The team will be launching a mentoring program that will pair new reviewers with those who have experience.</p>\n<p>&#8220;We are looking for currently active reviewers who want to give back to the community, of course, and to teach the next generation of theme reviewers,&#8221; Jose Castaneda said in the announcement. The mentoring program was proposed by TRT admin Tammie Lister as a sort of &#8220;buddy system&#8221; to help onboard new reviewers.</p>\n<p>Currently, WordPress.org offers <a href=\"http://wordpress.org/themes/\" target=\"_blank\">2,677 themes</a> in its directory. As the number of themes continues to grow, so does the work load for approving new submissions as well as new theme version updates. Theme Review Team members are in short supply, and this program aims to get new members up to speed as fast as possible.</p>\n<p>The response so far has been tremendous, with many team members already stepping up to the plate to volunteer as mentors. New reviewers will be paired up with mentors when they receive their first tickets. &#8220;We will be assigning from the <a href=\"http://make.wordpress.org/themes/about/trac-ticket-request-queue/trac-ticket-request-queue-summer-2014/\" target=\"_blank\">theme request list</a> each month,&#8221; Lister told the Tavern.</p>\n<p>This is good news for any WordPress.org theme developers who have been frustrated by the amount of time it takes to get theme and updates approved. At times it can take weeks for a new theme to get pushed out to the directory.</p>\n<p>Lister believes the mentoring program will help to improve the efficiency of reviewers working through the queue. &#8220;Anything that helps train will have a positive impact on the queue,&#8221; she said. &#8220;Every little improvement helps, but we also need more people reviewing &#8211; more hands to make light of the queue.&#8221;</p>\n<p>The introduction of <a href=\"http://make.wordpress.org/themes/2014/08/28/the-role-of-trusted-reviewer/\" target=\"_blank\">Key Reviewers</a> will also help to speed things along. This is a new role within the Theme Review Team with the power to push their own theme reviews live, as well as those being reviewed by other team members. This results in more people available who can make themes live on WordPress.org.</p>\n<p>Experienced theme reviewers who want to join are encouraged to comment on the <a href=\"http://make.wordpress.org/themes/2014/09/05/call-for-theme-review-mentors/\" target=\"_blank\">announcement post</a> with their WordPress.org usernames to be added to the list of available mentors.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 21:25:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"WPTavern: Flywheel Hosting Secures $1.2M In Funding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29960\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wptavern.com/flywheel-hosting-secures-1-2m-in-funding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3846:\"<p>At this time last year, Flywheel Hosting <a title=\"http://wptavern.com/flywheel-hosting-opens-to-the-public\" href=\"http://wptavern.com/flywheel-hosting-opens-to-the-public\">opened its doors</a> to the public. Today, the <a title=\"http://getflywheel.com/announcing-the-flywheel-seed-funding/\" href=\"http://getflywheel.com/announcing-the-flywheel-seed-funding/\">company announced</a> it has secured $1.2M in seed funding. The round was led by <a href=\"http://linseedcapital.com\">Linseed Capital</a>, with participation from the <a href=\"http://nebraskaangels.org\">Nebraska Angels</a>, <a href=\"http://ludlowventures.com\">Ludlow Ventures</a> out of Detroit, <a href=\"http://lightbank.com\">Lightbank</a> and <a href=\"http://hydeparkvp.com\">Hyde Park Venture Partners</a> out of Chicago, and <a href=\"http://rosepaul.com/\">Rose Paul Ventures</a> out of NYC.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/FlywheelLogoOrange.png\" rel=\"prettyphoto[29960]\"><img class=\"aligncenter size-full wp-image-29976\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/FlywheelLogoOrange.png?resize=492%2C160\" alt=\"Flywheel Logo Orange\" /></a></p>\n<p>Flywheel will use the funding to expand their team and infrastructure. Also as part of the announcement, Flywheel now offers bulk pricing plans. Bulk pricing starts with 10 sites with 150,000 visits for $100 a month and 25 sites with 500,000 visits for $250 a month. Flywheel hosting plans for small sites begin at $15 a month for sites with 5,000 visits. Since the customer base is mainly website designers and agencies, these new plans make sense, especially for managing all of their client sites in one location.</p>\n<h2>Managing A Growth Phase</h2>\n<p><a title=\"http://www.matthewwoodward.co.uk/reviews/webhost-trusted-wp-engine-hijacked-business-avoid-them/\" href=\"http://www.matthewwoodward.co.uk/reviews/webhost-trusted-wp-engine-hijacked-business-avoid-them/\">Some customers</a> of WPEngine have suggested that the company&#8217;s rapid growth resulted in lackluster support and reliable service during the height of its popularity. Earlier this year, an article on the WPEngine blog entitled <a title=\"http://wpengine.com/2014/05/21/growth-hard/\" href=\"http://wpengine.com/2014/05/21/growth-hard/\">Growth Is Hard,</a> explained the growing pains the company experienced.</p>\n<p>I asked the co-founder and CEO of Flywheel, Dusty Davidson, how he plans to manage the next phase of Flywheel.</p>\n<blockquote><p>We&#8217;re very aware of how hard it is to scale a support organization. We&#8217;re investing heavily in great people, great automation, tools, and other things to do our absolute best to provide the level of support that our customers have come to expect. It&#8217;s core to our mission to provide service at that level, even at scale and we&#8217;ll do what it takes to accomplish that.</p></blockquote>\n<p>It&#8217;s rare to see so many people compliment a webhosting provider but that&#8217;s what I&#8217;ve witnessed over the past year. Through Twitter, WordCamps, and other venues, <a title=\"https://imajworks.com/2013/11/14/five-reasons-love-flywheel/\" href=\"https://imajworks.com/2013/11/14/five-reasons-love-flywheel/\">customers appear</a> to be unanimously happy with Flywheel. It will be interesting to see if the company can scale at a fast rate while maintaining their signature level of quality service and support.</p>\n<h2>Tell Us About Your Experience With FlyWheel</h2>\n<p>With so many companies in the managed WordPress hosting market, it&#8217;s encouraging to see a startup proving to be a hit amongst its customers. Instead of going after everyone, FlyWheel has carved out a niche within the market and is doing well. If you are a current or existing customer of FlyWheel Hosting, tell us about your experience in the comments.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 20:42:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:115:\"WPTavern: 1,000+ WordPress Themes on Envato Market Potentially Affected by Slider Revolution Security Vulnerability\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29940\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:123:\"http://wptavern.com/1000-wordpress-themes-on-envato-market-potentially-affected-by-revolution-slider-security-vulnerability\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6680:\"<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/envato.jpg\" rel=\"prettyphoto[29940]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/envato.jpg?resize=697%2C314\" alt=\"envato\" class=\"aligncenter size-full wp-image-29973\" /></a></p>\n<p>A couple days ago we wrote about a <a href=\"http://wptavern.com/critical-security-vulnerability-found-in-wordpress-slider-revolution-plugin-immediate-update-advised\" target=\"_blank\">critical security vulnerability</a> that was found in the popular WordPress Slider Revolution plugin and silently patched by its author. Envato Market has since <a href=\"http://marketblog.envato.com/general/plugin-vulnerability/\" target=\"_blank\">launched further investigation</a> of the matter, as the product is not only hosted on their marketplace but also packaged with many other products.</p>\n<p>The company has identified <a href=\"http://marketblog.envato.com/general/affected-themes/\" target=\"_blank\">more than 1,000 themes</a> sold through its marketplace that are potentially affected by this vulnerability. While many of the products have already been patched, some theme authors have not yet acted. In recognition of the severity of this vulnerability and the ease with which it&#8217;s exploited, the marketplace is temporarily disabling themes that have not yet been patched:</p>\n<blockquote><p>We are starting to temporarily disable affected themes that haven’t been updated, contacting authors of those themes to get an update through ASAP. This will take a while as there are a lot of themes to manually sort through.</p></blockquote>\n<p>Even with the products getting patched, the next challenge is to get users to update. Many themes do not have an auto-update system included to notify users and WordPress users do not always apply updates as soon as they are available, for fear of breaking something. Envato Market is addressing this by emailing users to inform them of the security vulnerability:</p>\n<blockquote><p>We will be contacting all buyers of affected themes directly via their Envato Market email address asap, to ensure they read and act on this information.</p></blockquote>\n<p>Envato Market published detailed instructions to help users determine if they are affected and update accordingly.</p>\n<h2>The Danger of Bundling Plugins With Themes</h2>\n<p>When a security vulnerability potentially affects more than 1,000 products, silent patching is not acceptable. This should have been publicly disclosed by the ThemePunch team at the time it occurred, which might have prevented this vulnerability from being actively exploited in the wild.</p>\n<p>At the end of the post, Envato Market highlights what they are doing to ensure that this doesn&#8217;t happen again:</p>\n<blockquote><p>We will be releasing guidelines and processes to make sure issues like this get to us faster, and to help authors make sure their buyers are updated and patched as fast as possible. </p>\n<p>We are also going to revisit how updates are handled for bundles and themes that include separate plugins.</p></blockquote>\n<p>Unfortunately, &#8220;more guidelines and processes&#8221; do not address the root of this problem. This vulnerability highlights the danger of allowing theme authors to bundle plugins in their products. Envato Market would have no need to list out 1,000+ potentially affected themes if it discouraged, or even forbade, theme authors from bundling plugins.</p>\n<p>Since the vast majority of Envato&#8217;s top-selling themes do not follow industry best practices, forbidding them to bundle plugins would most certainly result in a loss of profit. There seems to be little incentive for Envato Market to act decisively on the lesson of this security vulnerability and move toward best practices.</p>\n<p>Respected professionals in the WordPress community have been calling on theme authors to keep plugins separate for years. This situation has renewed the debate:</p>\n<blockquote class=\"twitter-tweet\" width=\"550\"><p>.<a href=\"https://twitter.com/envato\">@envato</a> This is why you should never permit bundled plugins in themes: <a href=\"http://t.co/XFAU1anKef\">http://t.co/XFAU1anKef</a> &#8211; no exceptions</p>\n<p>&mdash; Pippinsplugins (@pippinsplugins) <a href=\"https://twitter.com/pippinsplugins/status/507907279140945921\">September 5, 2014</a></p></blockquote>\n<p></p>\n<p>Historically, Envato has been slow to act on theme best practices. Last year&#8217;s addition of a <a href=\"http://notes.envato.com/general/100-gpl-option-now-available-plus-woothemes-arrives\" target=\"_blank\">GPL licensing option</a> and the <a href=\"http://notes.envato.com/news/update-wordpress-theme-submission-requirements\" target=\"_blank\">updated theme submission requirements</a> were a good start, but authors have found ways to skirt the requirements. Justin Tadlock offers some insight on this practice, following his <a href=\"http://justintadlock.com/archives/2013/09/11/the-themeforest-experiment-one-year-later\" target=\"_blank\">Themeforest experiment</a>:</p>\n<blockquote><p>Based on what I’ve seen in the forums, many authors are just looking for ways to do what they’ve already been doing but just putting it in a plugin packaged with their theme. Basically, they don’t want anyone to “steal their code” nor do they want to truly make a wonderful user experience, one in which users will keep coming back long after they’ve switched to a new theme. If you package your plugin functionality into a plugin that’s only ever going to be useful with your theme, then you’re _doing_it_wrong(). That’s what I envision, but I hope that’s the sort of thing Envato will take a stand against. Otherwise, you’re just pulling the same ol’ tricks in a different costume.</p></blockquote>\n<p>This experience prompted Tadlock to continue building standalone <a href=\"http://themehybrid.com/plugins\" target=\"_blank\">plugins </a>that theme authors can add support for when building their products. This frees theme authors up to focus on the theme itself and offer better data portability for users via plugins. Adopting a standard for plugin functionality is good for users and creates less work for theme authors. They can continue building more themes, instead of wasting time patching their themes for a slider&#8217;s security vulnerability.</p>\n<p>WordPress is now used by more than 23% of the world&#8217;s websites and will always be a target for hackers looking to exploit vulnerabilities. If Envato Market doesn&#8217;t take a stand against theme authors packaging plugins, it will continue to encounter the same security problems that are topping the headlines this week.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 19:48:54 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"Matt: Tale of Two Automatticians\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44084\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"http://ma.tt/2014/09/tale-of-two-automatticians/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:423:\"<p>Today we hear from two Automatticians: <a href=\"http://extrapolate.me/2014/09/04/ten-years-since-my-first-open-source-contribution/\">Nikolay talks about his first open source contribution ten years ago and the path his life has taken since</a>, and Andrea <a href=\"http://andreabadgley.com/2014/09/03/call-me-democratizer/\">says she &#8220;can’t wipe this grin off my face&#8221; at the start of a new journey</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 17:34:46 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"WPTavern: Rams: A Free WordPress Blogging Theme With Zero Fluff\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29752\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"http://wptavern.com/rams-a-free-wordpress-blogging-theme-with-zero-fluff\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2745:\"<p><a href=\"http://wordpress.org/themes/rams\" target=\"_blank\">Rams</a> is a new release from WordPress theme developer <a href=\"http://www.andersnoren.se/\" target=\"_blank\">Anders Norén</a>. The theme is aptly named for <a href=\"http://en.wikipedia.org/wiki/Dieter_Rams\" target=\"_blank\">Dieter Rams</a>, a German industrial designer who is well known for his innovative, unobtrusive, and timeless product design.</p>\n<p>Rams is a minimalist blogging theme that bears Noren&#8217;s trademark <a href=\"http://wptavern.com/anders-noren-on-achieving-simplicity-in-wordpress-theme-design\" target=\"_blank\">simplicity</a>. Norén said that he designed the theme with &#8220;zero fluff&#8221; to put the content in focus.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/rams.png\" rel=\"prettyphoto[29752]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/rams.png?resize=880%2C660\" alt=\"rams\" class=\"aligncenter size-full wp-image-29904\" /></a></p>\n<p>Rams includes support for the gallery, video and quote post formats. It is retina-ready and responsive, providing a high quality reading experience on desktop, tablets, and mobile phones.</p>\n<p>The theme comes packaged with a beautiful, simplified archive template and built-in editor styles. It also includes support for <a href=\"http://jetpack.me/support/tiled-galleries/\" target=\"_blank\">Jetpack Tiled Galleries</a> and infinite scroll.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/jetpack-tiled-gallery.png\" rel=\"prettyphoto[29752]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/jetpack-tiled-gallery.png?resize=1025%2C617\" alt=\"jetpack-tiled-gallery\" class=\"aligncenter size-full wp-image-29921\" /></a></p>\n<p>Check out a <a href=\"http://www.andersnoren.se/themes/rams/\" target=\"_blank\">live demo</a> to see Rams in action and make sure to navigate through the various templates and styles.</p>\n<h3>One Theme Option</h3>\n<p>Rams includes only one theme option. Yes, you read that correctly. The color control option allows you to set the background color of the sidebar as well as the accent color of the content. Rams includes no other options and no widget areas. That means that it takes no effort whatsoever to get your site looking just like the demo.</p>\n<p>Norén skillfully captures the essence of Dieter Rams&#8217; <a href=\"http://www.sfmoma.org/about/press/press_exhibitions/releases/880\" target=\"_blank\">principles of good design</a> in this tribute theme. If you&#8217;re looking for a beautiful, simple blog design with plenty of room for content to breathe, Rams is a solid option. <a href=\"http://wordpress.org/themes/rams\" target=\"_blank\">Download</a> it for free from WordPress.org.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 04:58:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"WPTavern: Syed Balkhi on The Overnight Success of OptinMonster\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29899\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"http://wptavern.com/syed-balkhi-on-the-overnight-success-of-optinmonster\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3253:\"<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/MonsterFeaturedImage.png\" rel=\"prettyphoto[29899]\"><img class=\"size-full wp-image-29901\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/MonsterFeaturedImage.png?resize=640%2C345\" alt=\"Monster Featured Image\" /></a>photo credit: <a href=\"https://www.flickr.com/photos/jdhancock/3777558632/\">JD Hancock</a> &#8211; <a href=\"http://creativecommons.org/licenses/by/2.0/\">cc</a>\n<p>Created by Syed Balkhi and Thomas Griffin, <a title=\"http://optinmonster.com/\" href=\"http://optinmonster.com/\">OptinMonster</a> is one of the most popular WordPress plugins when it comes to converting visitors into subscribers and customers. Its success is one of the reasons the duo decided to <a title=\"http://www.poststat.us/syed-balkhi-thomas-griffin-awesome-motive/\" href=\"http://www.poststat.us/syed-balkhi-thomas-griffin-awesome-motive/\">join forces</a>. While the team enjoys the success of OptinMonster today, the plugin almost didn&#8217;t make it to the market.</p>\n<p>Balkhi <a title=\"http://www.balkhis.com/how-we-turned-a-failed-product-into-a-six-figure-business-in-less-than-a-month/\" href=\"http://www.balkhis.com/how-we-turned-a-failed-product-into-a-six-figure-business-in-less-than-a-month/\">shares a story on his personal site</a> that explains how he and Griffin turned OptinMonster into a 10 month-long, overnight success story.</p>\n<blockquote><p>That night was the longest night ever. Once we added List25 along with few other sites, our servers crashed. Since neither of us were sysadmins, we couldn’t get the servers to scale properly.</p>\n<p>We consulted with a few sysadmins and long story short the issue was our reporting. The WordPress database couldn’t handle that many rewrites. We were tracking impressions and conversions for every site (imagine the amount of database writes).</p>\n<p>We really had two options at this point: completely pivot in 30 days or close down shop.</p></blockquote>\n<p>Stories like this are great because it gives us a glimpse into the work involved to create a stellar product. What&#8217;s of particular interest to me is that it almost didn&#8217;t see the light of day. The team persevered, made a pivot, and are now the proud owners of a great plugin.</p>\n<p>I&#8217;d love to see more developers share their journeys. Other developers that have shared their stories include:</p>\n<ul>\n<li><a href=\"http://wptavern.com/chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes\" target=\"_blank\">Chris Wiegman on Why He Sold Better WP Security to iThemes</a></li>\n<li><a href=\"http://wptavern.com/jason-schuller-shares-his-experience-running-a-wordpress-theme-business\" target=\"_blank\">Jason Schuller Shares His Experience Running a WordPress Theme Business</a></li>\n<li><a title=\"https://bruteprotect.com/bruteprotect-joins-automattic/\" href=\"https://bruteprotect.com/bruteprotect-joins-automattic/\">BruteProtect Joins Automattic</a></li>\n</ul>\n<p>I almost think I&#8217;m in the wrong business when I hear about WordPress companies or specific products making millions of dollars. However, stories like the ones above are reminders that there is a lot of work that goes on behind the scenes to create a successful product.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 23:04:15 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"WPTavern: Poll: Who Uses Reader In The WordPress Mobile Apps?\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29874\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"http://wptavern.com/poll-who-uses-reader-in-the-wordpress-mobile-apps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2434:\"<p>WordPress for iOS 4.3 is <a title=\"http://apps.wordpress.org/2014/09/04/4-3-release/\" href=\"http://apps.wordpress.org/2014/09/04/4-3-release/\">now available</a> for download from the App Store. The new release contains updates to stats and reader. You can now see more details in the stats chart for Visitors and Views. Just tap any of the views available such as Days, Weeks, or Months.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/WordPressForiOS4point3FeaturedImage.png\" rel=\"prettyphoto[29874]\"><img class=\"aligncenter size-full wp-image-29876\" src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/WordPressForiOS4point3FeaturedImage.png?resize=735%2C321\" alt=\"WordPress For iOS 4 Poin 3 Featured Image\" /></a></p>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/FollowAnyASiteInReader.png\" rel=\"prettyphoto[29874]\"><img class=\"wp-image-29882 size-medium\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/FollowAnyASiteInReader.png?resize=300%2C111\" alt=\"Follow Any Site In Reader\" /></a>Follow Any Site In Reader\n<p>In previous versions of the app, reader was limited to WordPress.com and self hosted sites using Jetpack. In 4.3, you can add any site to the reader by URL or tag essentially turning it into an RSS Feed Reader.</p>\n<p>The app contains several improvements under the hood to prepare for the release of iOS 8. Among some of the features slated for the next version include an iOS 8 <em>Today</em> extension to view stats, a major interface update for notifications, and a limited roll out of a new WYSIWYG post editor.</p>\n<h2>Who Uses The Reader Part Of The Mobile Apps?</h2>\n<p>Being able to add any site to the reader is a nice enhancement but it&#8217;s not enough to convince me to use it. I use <a title=\"http://feedly.com/\" href=\"http://feedly.com/\">Feedly</a> as my feed reader both on the desktop and my phone. The interface of reader makes it difficult to quickly skim the headlines of several different websites and I&#8217;d rather not manage so many sites on my phone. I&#8217;ve also found it to not be the ideal experience to consume content.</p>\n<p>I wonder how many people use this portion of the app. Help me figure it out by participating in the poll. If you vote yes, let me know in the comments how you use it.</p>\nNote: There is a poll embedded within this post, please visit the site to participate in this post\'s poll.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 21:56:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Matt: 4.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44082\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://ma.tt/2014/09/4-0/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:534:\"<p>WordPress 4.0, code-named Benny, <a href=\"http://wordpress.org/news/2014/09/benny/\">is now available</a>. The response so far has been great, over 200k downloads in just a few hours. Today we celebrate, <a href=\"http://wordpress.org/download/counter/\">watch the counter</a>, and tomorrow go back to work on 4.1. <img src=\"http://i1.wp.com/s.ma.tt/blog/wp-includes/images/smilies/icon_smile.gif?w=604\" alt=\":)\" class=\"wp-smiley\" /> For those following along at home, the 3.x series of WordPress was downloaded 300 million times.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 21:00:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"WPTavern: Pressgram to Shut Down, Development Discontinued\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29842\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wptavern.com/pressgram-to-shut-down-development-discontinued\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4734:\"<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/03/pressgram-feature.jpg\" rel=\"prettyphoto[29842]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/03/pressgram-feature.jpg?resize=800%2C373\" alt=\"pressgram-feature\" class=\"aligncenter size-full wp-image-19956\" /></a></p>\n<p><a href=\"http://pressgr.am/\" target=\"_blank\">Pressgram</a> founder John Saddington <a href=\"http://john.do/bye-pressgram/\" target=\"_blank\">announced</a> today that he will be shutting down the project and pulling the app from the Apple Store on September 11. The app started as a <a href=\"http://wptavern.com/pressgram-launches-wordpress-powered-photo-sharing-app\" target=\"_blank\">WordPress-powered photo sharing app</a> and evolved to support all kinds of publishing platforms. Last March, Saddington <a href=\"http://wptavern.com/pressgram-2-0-removes-social-layer-to-focus-on-publishing\" target=\"_blank\">dropped the social layer</a> in favor of focusing his efforts on the publishing features.</p>\n<p>Despite running a successful <a href=\"https://www.kickstarter.com/projects/tentblogger/pressgram-an-image-sharing-app-built-for-an-indepe\" target=\"_blank\">$50K+ Kickstarter campaign</a>, Saddington was not able to continue development on the project.</p>\n<blockquote><p>Today marks the 2-year (official) anniversary of Pressgram and it is with a very heavy heart that I am announcing that active development on Pressgram is being discontinued.</p></blockquote>\n<p>He does not specify the reasons for shutting down the app in his departure post, which is more of a thank you to investors and a farewell to users. However, his responses to users on Twitter indicate that he could not continue to uphold the financial burden of the Amazon AWS costs of running the service, which centralized publishing requests to various social outlets.</p>\n<blockquote class=\"twitter-tweet\" width=\"550\"><p><a href=\"https://twitter.com/Tarendai\">@Tarendai</a> <a href=\"https://twitter.com/Pressgram\">@Pressgram</a> // custom built API to handle a ton of requests from the users, especially to publish to multiple techs and platforms.</p>\n<p>&mdash; John Saddington (@saddington) <a href=\"https://twitter.com/saddington/status/507596625582120960\">September 4, 2014</a></p></blockquote>\n<p></p>\n<p>In response to users who inquired whether or not they will be able to continue using the app, Saddington <a href=\"https://twitter.com/saddington/status/507523755485052928\" target=\"_blank\">replied</a>, &#8220;The service will turn off officially at the end of the month, unfortunately.&#8221;</p>\n<p>When Pressgram was in the crowdfunding stage, WordPress co-founder Matt Mullenweg had pledged $10K dollars to help get it off the ground but eventually withdrew his pledge when he learned that the project would not be open source. The last time we spoke with Saddington, he was open to open sourcing the app but has thus far continued with it under a proprietary license. Now that development is being discontinued, users want to know about the possibility of open sourcing the code so that it doesn&#8217;t disappear. He confirmed that this is still a possibility.</p>\n<blockquote class=\"twitter-tweet\" width=\"550\"><p><a href=\"https://twitter.com/ramiabraham\">@ramiabraham</a> <a href=\"https://twitter.com/Pressgram\">@Pressgram</a> always a possibility.</p>\n<p>&mdash; John Saddington (@saddington) <a href=\"https://twitter.com/saddington/status/507587286129598464\">September 4, 2014</a></p></blockquote>\n<p></p>\n<p>At a later date, Saddington <a href=\"https://twitter.com/saddington/status/507479571688476673\" target=\"_blank\">plans to share more thoughts</a> about why the project didn&#8217;t end up working out. The information will undoubtedly be of interest to his many Kickstarter backers, some of whom pledged hundreds of dollars to see this app become a reality.</p>\n<p>From the beginning, Pressgram had mass appeal, given that it used WordPress to power a creative application with the potential to become a viable alternative to some of the larger players, such as Instagram. Many in the WordPress community were hoping that that app would be open source, since it was originally based on open source software and could potentially help move the WordPress app space forward.</p>\n<p>If Pressgram were open source, it&#8217;s possible that someone could use the code as a starting place to build an app that doesn&#8217;t require a centralized service. Where could Saddington have taken Pressgram if he had a team of enthusiastic open source contributors surrounding the project and improving upon it at a faster rate? Would you like to see the app open sourced or do you think it should be simply retired? Let us know in the comments.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 20:42:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"WPTavern: WPWeekly Episode 161 – The CTO Of CrowdFavorite, Chris Lema\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"http://wptavern.com?p=29854&preview_id=29854\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wptavern.com/wpweekly-episode-161-the-cto-of-crowdfavorite-chris-lema\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3852:\"<p><a title=\"http://marcuscouch.com/\" href=\"http://marcuscouch.com/\">Marcus Couch</a> and I are joined by <a title=\"http://crowdfavorite.com\" href=\"http://crowdfavorite.com\">CrowdFavorite</a> CTO, <a title=\"http://chrislema.com/\" href=\"http://chrislema.com/\">Chris Lema</a>. We talk about his new position and what the <a title=\"http://crowdfavorite.com/blog/2014/08/ithemes-crowd-favorite-partner-in-new-product-development/\" href=\"http://crowdfavorite.com/blog/2014/08/ithemes-crowd-favorite-partner-in-new-product-development/\">joint-venture partnership</a> means for both CrowdFavorite and iThemes. Lema explains what the word <em>enterprise</em> means for WordPress products and near the end of the show, gives us his prediction on what will happen in the service and product sectors of the WordPress ecosystem.</p>\n<h2>Stories Discussed:</h2>\n<p><a title=\"http://wptavern.com/critical-security-vulnerability-found-in-wordpress-slider-revolution-plugin-immediate-update-advised\" href=\"http://wptavern.com/critical-security-vulnerability-found-in-wordpress-slider-revolution-plugin-immediate-update-advised\">Critical Security Vulnerability Found in WordPress Slider Revolution Plugin, Immediate Update Advised</a><br />\n<a title=\"http://wptavern.com/prowordpress-subreddit-passes-1000-subscribers\" href=\"http://wptavern.com/prowordpress-subreddit-passes-1000-subscribers\">ProWordPress Subreddit Passes 1,000 Subscribers </a><br />\n<a title=\"http://wptavern.com/why-you-might-consider-adding-development-hours-to-your-changelog\" href=\"http://wptavern.com/why-you-might-consider-adding-development-hours-to-your-changelog\">Why You Might Consider Adding Development Hours to Your Changelog</a><br />\n<a title=\"http://wptavern.com/the-hidden-savings-of-a-wordcamp-ticket\" href=\"http://wptavern.com/the-hidden-savings-of-a-wordcamp-ticket\">The Hidden Savings Of a WordCamp Ticket</a></p>\n<h2>Plugins Picked By Marcus:</h2>\n<p><a title=\"http://wordpress.org/plugins/wp-scroll-depth/\" href=\"http://wordpress.org/plugins/wp-scroll-depth/\">WP Scroll Depth</a> is a small Google Analytics plugin that allows you to measure how far down the page your users are scrolling. It monitors the 25%, 50%, 75%, and 100% scroll points, sending a Google Analytics Event at each one. You can also track when specific elements on the page are scrolled into view. On a blog, for example, you could send a Scroll Depth event whenever the user reaches the end of a post.</p>\n<p><a title=\"http://wordpress.org/plugins/embed-custom-field/\" href=\"http://wordpress.org/plugins/embed-custom-field/\">Embed Custom Field</a> adds a shortcode for including a custom field on a page or post. Create a custom field on your post/page, then use the following shortcode to include it on your site: [embed_custom_field \"field-name-here\"]</p>\n<p><a title=\"http://wordpress.org/plugins/wp-taxi-me/\" href=\"http://wordpress.org/plugins/wp-taxi-me/\">WP Taxi Me</a> adds the ability to order a taxi directly from your mobile site using Uber. You can encourage users to register for Uber using an optional setting as well. The plugin hides itself if the user isn&#8217;t on mobile, but users can still register for Uber.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, September 10th 9:30 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href=\"http://www.wptavern.com/feed/podcast\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #161:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 19:38:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"WPTavern: WordPress 4.0 Benny Now Available for Download\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29690\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wptavern.com/wordpress-4-0-benny-now-available-for-download\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6916:\"<p>WordPress 4.0 &#8220;Benny&#8221; was released today, named for American jazz and swing musician <a href=\"http://en.wikipedia.org/wiki/Benny_Goodman\" target=\"_blank\">Benny Goodman</a>, also known as the &#8220;King of Swing.&#8221;</p>\n<p>Development for 4.0 <a href=\"http://wptavern.com/wordpress-4-0-kicks-off-development-today-helen-hou-sandi-to-lead-release\" target=\"_blank\">kicked off at the end of April</a>, led by <a href=\"http://profiles.wordpress.org/helen\" target=\"_blank\">Helen Hou-Sandí</a>. This release includes hundreds of refinements and a few brand new features, culminating in a more polished media and editing experience. You&#8217;ll also find some exciting new tools for developers. Here&#8217;s a quick overview of what&#8217;s new.</p>\n<h2>New Media Grid View</h2>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/media-library.png\" rel=\"prettyphoto[29690]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/media-library.png?resize=1025%2C409\" alt=\"media-library\" class=\"aligncenter size-full wp-image-29695\" /></a></p>\n<p>The WordPress media library has a beautiful new default grid view. When you click on an item, the attachment details will launch a preview that allows you to easily edit and navigate items in your library. Media is now easier to manage with the &#8220;bulk select&#8221; option which enables you to delete multiple items at once.</p>\n<h2>Improved Writing Experience</h2>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sticky-editing-tools.png\" rel=\"prettyphoto[29690]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sticky-editing-tools.png?resize=1025%2C572\" alt=\"sticky-editing-tools\" class=\"aligncenter size-full wp-image-29706\" /></a></p>\n<p>Composing in WordPress has never been better. The visual editor now expands to fit your content, instead of the awkward scrollbar you used to see within the content area. The editing experience is smoother with a fixed toolbar as you scroll, which means your tools will follow you as your content expands.</p>\n<h2>oEmbed Previews</h2>\n<div class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<a href=\"http://wptavern.com/wp-content/uploads/2014/09/oembed-previews.mp4\">http://wptavern.com/wp-content/uploads/2014/09/oembed-previews.mp4</a></div><div class=\"media-shortcode-extend\"><div class=\"media-info video-info\"><ul class=\"media-meta\"><li><span class=\"prep\">Run Time</span> <span class=\"data\">0:17</span></li><li><span class=\"prep\">Dimensions</span> <span class=\"data\">1,312 &#215; 800</span></li><li><span class=\"prep\">File Name</span> <span class=\"data\"><a href=\"http://wptavern.com/wp-content/uploads/2014/09/oembed-previews.mp4\">oembed-previews.mp4</a></span></li><li><span class=\"prep\">File Size</span> <span class=\"data\">2.41 MB</span></li><li><span class=\"prep\">File Type</span> <span class=\"data\">MP4</span></li><li><span class=\"prep\">Mime Type</span> <span class=\"data\">video/quicktime</span></li></ul></div><button class=\"media-info-toggle\">Video Info</button></div>\n<p>WordPress 4.0 adds oEmbed support for TED talks, Mixcloud, CollegeHumor.com, Issuu, Polldaddy’s short URL format, YouTube playlist URLs. The visual editor now displays previews of media added via on oEmbed URL. The video above is included on the 4.0 about page, demonstrating oEmbed previews in action.</p>\n<h2>Refreshed Plugin Install and Search Experience</h2>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/add-plugins.png\" rel=\"prettyphoto[29690]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/add-plugins.png?resize=1025%2C447\" alt=\"add-plugins\" class=\"aligncenter size-full wp-image-29712\" /></a></p>\n<p>WordPress 4.0 makes it much easier to search for plugins in the admin. The plugin installer now displays plugin as cards in a grid view. Plugin authors can add <a href=\"http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer\" target=\"_blank\">custom icons</a> that will appear in the installer. Clicking on a listing launches the plugin details modal with a description, ratings, reviews, compatibility information and more.</p>\n<h2>Improved Language Support</h2>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/07/wordpress-languages.jpg\" rel=\"prettyphoto[29690]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/07/wordpress-languages.jpg?resize=809%2C381\" alt=\"wordpress-languages\" class=\"aligncenter size-full wp-image-25834\" /></a></p>\n<p>This release adds major <a href=\"http://wptavern.com/major-internationalization-improvements-planned-for-wordpress-4-0\" target=\"_blank\">internationalization improvements</a> to the software. <a href=\"http://wptavern.com/wordpress-4-0-to-add-language-selection-to-installation\">Language selection</a> is now available at installation and language management has been streamlined in the dashboard.</p>\n<h3>What&#8217;s new under the hood?</h3>\n<p>WordPress 4.0 also includes an exciting array of new developer goodies. Here are a few of the highlights:</p>\n<h5>Customizer API</h5>\n<p>This release adds a new <a href=\"https://core.trac.wordpress.org/ticket/27406\" target=\"_blank\">Panels API</a> that enables developers to group customizer controls into sections. It also includes support for contextual controls that will be visible or hidden based on the page the user is viewing. The improved customizer offers a wider array of controls and parameters that allow developers to extend it for more varied uses beyond themes.</p>\n<h5>Query Ordering</h5>\n<p>WordPress 4.0 includes <a href=\"http://make.wordpress.org/core/2014/08/29/a-more-powerful-order-by-in-wordpress-4-0/\" target=\"_blank\">a more powerful ORDER BY</a> argument for developers working with <a href=\"http://codex.wordpress.org/Class_Reference/WP_Query\" target=\"_blank\">WP_Query</a>. Developers can now pass an array to WP_Query as the value for <a href=\"http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters\" target=\"_blank\">orderby</a> for more flexible and precise querying.</p>\n<h5>External Libraries</h5>\n<p>This major release includes updates for libraries used in WordPress, including TinyMCE 4.1.3, jQuery 1.11.1, MediaElement 2.15.</p>\n<p>You can find the full list of all the changes on the <a href=\"http://codex.wordpress.org/Version_4.0\" target=\"_blank\">4.0 release page</a>, which was created by volunteers from the docs team.</p>\n<p>WordPress 4.0 is the result of the tireless efforts of 275 contributors. If code is poetry, then this release is a skillfully-written sonnet that resolves problem spots and introduces new tools that users will love. Once you update, you&#8217;ll wonder how you ever lived without these improvements. Visit your WordPress site and navigate to Dashboard > Update to get 4.0 and take advantage of all the shiny new features.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 17:13:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"Dev Blog: WordPress 4.0 “Benny”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3296\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/news/2014/09/benny/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:21826:\"<p>Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader <a href=\"http://en.wikipedia.org/wiki/Benny_Goodman\">Benny Goodman</a>, is available <a href=\"http://wordpress.org/download/\">for download</a> or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience we think you&#8217;ll enjoy.</p>\n<div id=\"v-bUdzKMro-1\" class=\"video-player\"></div>\n<hr />\n<h2>Manage your media with style</h2>\n<p><img class=\"alignnone size-full wp-image-3316\" src=\"http://i0.wp.com/wordpress.org/news/files/2014/09/media.jpg?resize=692%2C406\" alt=\"Media Library\" />Explore your uploads in a beautiful, endless grid. A new details preview makes viewing and editing any amount of media in sequence a snap.</p>\n<hr />\n<h2>Working with embeds has never been easier</h2>\n<div class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<a href=\"http://s.w.org/images/core/4.0/embed.mp4\">//s.w.org/images/core/4.0/embed.mp4</a></div>\n<p>Paste in a YouTube URL on a new line, and watch it magically become an embedded video. Now try it with a tweet. Oh yeah — embedding has become a visual experience. The editor shows a true preview of your embedded content, saving you time and giving you confidence.</p>\n<p>We’ve expanded the services supported by default, too — you can embed videos from CollegeHumor, playlists from YouTube, and talks from TED. <a href=\"http://codex.wordpress.org/Embeds\">Check out all of the embeds</a> that WordPress supports.</p>\n<hr />\n<h2>Focus on your content</h2>\n<div class=\"wp-video\"><a href=\"http://s.w.org/images/core/4.0/focus.mp4\">//s.w.org/images/core/4.0/focus.mp4</a></div>\n<p>Writing and editing is smoother and more immersive with an editor that expands to fit your content as you write, and keeps the formatting tools available at all times.</p>\n<hr />\n<h2>Finding the right plugin</h2>\n<p><img class=\"aligncenter size-large wp-image-3309\" src=\"http://i0.wp.com/wordpress.org/news/files/2014/09/add-plugin1.png?resize=692%2C405\" alt=\"Add plugins\" /></p>\n<p>There are more than 30,000 free and open source plugins in the WordPress plugin directory. WordPress 4.0 makes it easier to find the right one for your needs, with new metrics, improved search, and a more visual browsing experience.</p>\n<hr />\n<h2>The Ensemble</h2>\n<p>This release was led by <a href=\"http://helenhousandi.com\">Helen Hou-Sandí</a>, with the help of these fine individuals. There are 275 contributors with props in this release, a new high. Pull up some Benny Goodman on your music service of choice, as a bandleader or in one of his turns as a classical clarinetist, and check out some of their profiles:</p>\n<p><a href=\"http://profiles.wordpress.org/sharonaustin\">_Redd</a>, <a href=\"http://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"http://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"http://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"http://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>, <a href=\"http://profiles.wordpress.org/tellyworth\">Alex Shiels</a>, <a href=\"http://profiles.wordpress.org/alexanderrohmann\">Alexander Rohmann</a>, <a href=\"http://profiles.wordpress.org/aliso\">Alison Barrett</a>, <a href=\"http://profiles.wordpress.org/collinsinternet\">Allan Collins</a>, <a href=\"http://profiles.wordpress.org/amit\">Amit Gupta</a>, <a href=\"http://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>, <a href=\"http://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"http://profiles.wordpress.org/andrezrv\">Andres Villarreal</a>, <a href=\"http://profiles.wordpress.org/zamfeer\">Andrew Mowe</a>, <a href=\"http://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"http://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"http://profiles.wordpress.org/andy\">Andy Skelton</a>, <a href=\"http://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>, <a href=\"http://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"http://profiles.wordpress.org/arnee\">Arne Brachhold</a>, <a href=\"http://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>, <a href=\"http://profiles.wordpress.org/filosofo\">Austin Matzko</a>, <a href=\"http://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>, <a href=\"http://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>, <a href=\"http://profiles.wordpress.org/boonebgorges\">Boone Gorges</a>, <a href=\"http://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>, <a href=\"http://profiles.wordpress.org/bramd\">bramd</a>, <a href=\"http://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"http://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>, <a href=\"http://profiles.wordpress.org/brianlayman\">Brian Layman</a>, <a href=\"http://profiles.wordpress.org/rzen\">Brian Richards</a>, <a href=\"http://profiles.wordpress.org/camdensegal\">camden</a>, <a href=\"http://profiles.wordpress.org/lukecarbis\">Carbis</a>, <a href=\"http://profiles.wordpress.org/sixhours\">Caroline Moore</a>, <a href=\"http://profiles.wordpress.org/mackensen\">Charles Fulton</a>, <a href=\"http://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"http://profiles.wordpress.org/chrico\">ChriCo</a>, <a href=\"http://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>, <a href=\"http://profiles.wordpress.org/chrisl27\">chrisl27</a>, <a href=\"http://profiles.wordpress.org/caxelsson\">Christian Axelsson</a>, <a href=\"http://profiles.wordpress.org/cfinke\">Christopher Finke</a>, <a href=\"http://profiles.wordpress.org/boda1982\">Christopher Spires</a>, <a href=\"http://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>, <a href=\"http://profiles.wordpress.org/codenameeli\">codenameEli</a>, <a href=\"http://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>, <a href=\"http://profiles.wordpress.org/corphi\">Corphi</a>, <a href=\"http://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>, <a href=\"http://profiles.wordpress.org/ghost1227\">Dan Griffiths</a>, <a href=\"http://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"http://profiles.wordpress.org/danielhuesken\">Daniel Husken</a>, <a href=\"http://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>, <a href=\"http://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>, <a href=\"http://profiles.wordpress.org/dkotter\">Darin Kotter</a>, <a href=\"http://profiles.wordpress.org/koop\">Daryl Koopersmith</a>, <a href=\"http://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>, <a href=\"http://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>, <a href=\"http://profiles.wordpress.org/dlh\">David Herrera</a>, <a href=\"http://profiles.wordpress.org/dnaber-de\">David Naber</a>, <a href=\"http://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>, <a href=\"http://profiles.wordpress.org/debaat\">DeBAAT</a>, <a href=\"http://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"http://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"http://profiles.wordpress.org/donncha\">Donncha O Caoimh</a>, <a href=\"http://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"http://profiles.wordpress.org/dustyn\">dustyn</a>, <a href=\"http://profiles.wordpress.org/eddiemoya\">Eddie Moya</a>, <a href=\"http://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>, <a href=\"http://profiles.wordpress.org/edwin-at-studiojoyocom\">Edwin Siebel</a>, <a href=\"http://profiles.wordpress.org/ehg\">ehg</a>, <a href=\"http://profiles.wordpress.org/tmeister\">Enrique Chavez</a>, <a href=\"http://profiles.wordpress.org/erayalakese\">erayalakese</a>, <a href=\"http://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>, <a href=\"http://profiles.wordpress.org/ebinnion\">Eric Binnion</a>, <a href=\"http://profiles.wordpress.org/ericmann\">Eric Mann</a>, <a href=\"http://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>, <a href=\"http://profiles.wordpress.org/eherman24\">Evan Herman</a>, <a href=\"http://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>, <a href=\"http://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>, <a href=\"http://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>, <a href=\"http://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"http://profiles.wordpress.org/garhdez\">garhdez</a>, <a href=\"http://profiles.wordpress.org/garyc40\">Gary Cao</a>, <a href=\"http://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"http://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"http://profiles.wordpress.org/garza\">garza</a>, <a href=\"http://profiles.wordpress.org/gauravmittal1995\">gauravmittal1995</a>, <a href=\"http://profiles.wordpress.org/gavra\">Gavrisimo</a>, <a href=\"http://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"http://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>, <a href=\"http://profiles.wordpress.org/vancoder\">Grant Mangham</a>, <a href=\"http://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"http://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>, <a href=\"http://profiles.wordpress.org/harrym\">harrym</a>, <a href=\"http://profiles.wordpress.org/hebbet\">hebbet</a>, <a href=\"http://profiles.wordpress.org/hinnerk\">Hinnerk Altenburg</a>, <a href=\"http://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>, <a href=\"http://profiles.wordpress.org/iljoja\">iljoja</a>, <a href=\"http://profiles.wordpress.org/imath\">imath</a>, <a href=\"http://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"http://profiles.wordpress.org/issuu\">issuu</a>, <a href=\"http://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"http://profiles.wordpress.org/jacklenox\">Jack Lenox</a>, <a href=\"http://profiles.wordpress.org/jackreichert\">Jack Reichert</a>, <a href=\"http://profiles.wordpress.org/jacobdubail\">Jacob Dubail</a>, <a href=\"http://profiles.wordpress.org/janhenkg\">JanHenkG</a>, <a href=\"http://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"http://profiles.wordpress.org/jaza613\">Jaza613</a>, <a href=\"http://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>, <a href=\"http://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"http://profiles.wordpress.org/jpry\">Jeremy Pry</a>, <a href=\"http://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>, <a href=\"http://profiles.wordpress.org/jerrysarcastic\">Jerry Bates (jerrysarcastic)</a>, <a href=\"http://profiles.wordpress.org/jesin\">Jesin A</a>, <a href=\"http://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>, <a href=\"http://profiles.wordpress.org/engelen\">Jesper van Engelen</a>, <a href=\"http://profiles.wordpress.org/jesper800\">Jesper van Engelen</a>, <a href=\"http://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>, <a href=\"http://profiles.wordpress.org/jgadbois\">jgadbois</a>, <a href=\"http://profiles.wordpress.org/jartes\">Joan Artes</a>, <a href=\"http://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"http://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"http://profiles.wordpress.org/jkudish\">Joey Kudish</a>, <a href=\"http://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"http://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"http://profiles.wordpress.org/johnzanussi\">John Zanussi</a>, <a href=\"http://profiles.wordpress.org/duck_\">Jon Cave</a>, <a href=\"http://profiles.wordpress.org/jonnyauk\">jonnyauk</a>, <a href=\"http://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"http://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>, <a href=\"http://profiles.wordpress.org/jjeaton\">Josh Eaton</a>, <a href=\"http://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>, <a href=\"http://profiles.wordpress.org/juliobox\">Julio Potier</a>, <a href=\"http://profiles.wordpress.org/justinsainton\">Justin Sainton</a>, <a href=\"http://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>, <a href=\"http://profiles.wordpress.org/greenshady\">Justin Tadlock</a>, <a href=\"http://profiles.wordpress.org/jwenerd\">jwenerd</a>, <a href=\"http://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"http://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>, <a href=\"http://profiles.wordpress.org/ixkaito\">Kaito</a>, <a href=\"http://profiles.wordpress.org/kapeels\">kapeels</a>, <a href=\"http://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"http://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>, <a href=\"http://profiles.wordpress.org/kworthington\">Kevin Worthington</a>, <a href=\"http://profiles.wordpress.org/kpdesign\">Kim Parsell</a>, <a href=\"http://profiles.wordpress.org/kwight\">Kirk Wight</a>, <a href=\"http://profiles.wordpress.org/kitchin\">kitchin</a>, <a href=\"http://profiles.wordpress.org/knutsp\">Knut Sparhell</a>, <a href=\"http://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"http://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"http://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>, <a href=\"http://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"http://profiles.wordpress.org/leewillis77\">Lee Willis</a>, <a href=\"http://profiles.wordpress.org/lessbloat\">lessbloat</a>, <a href=\"http://profiles.wordpress.org/layotte\">Lew Ayotte</a>, <a href=\"http://profiles.wordpress.org/lritter\">lritter</a>, <a href=\"http://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>, <a href=\"http://profiles.wordpress.org/m_i_n\">m_i_n</a>, <a href=\"http://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>, <a href=\"http://profiles.wordpress.org/targz-1\">Manuel Schmalstieg</a>, <a href=\"http://profiles.wordpress.org/clorith\">Marius Jensen (Clorith)</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"http://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"http://profiles.wordpress.org/mjbanks\">Matt Banks</a>, <a href=\"http://profiles.wordpress.org/sivel\">Matt Martz</a>, <a href=\"http://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"http://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>, <a href=\"http://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"http://profiles.wordpress.org/mdbitz\">Matthew Denton</a>, <a href=\"http://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>, <a href=\"http://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"http://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"http://profiles.wordpress.org/meekyhwang\">meekyhwang</a>, <a href=\"http://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"http://profiles.wordpress.org/midxcat\">mi_cat</a>, <a href=\"http://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>, <a href=\"http://profiles.wordpress.org/michalzuber\">michalzuber</a>, <a href=\"http://profiles.wordpress.org/mauteri\">Mike Auteri</a>, <a href=\"http://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"http://profiles.wordpress.org/mikelittle\">Mike Little</a>, <a href=\"http://profiles.wordpress.org/mikemanger\">Mike Manger</a>, <a href=\"http://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>, <a href=\"http://profiles.wordpress.org/mikejolley\">mikejolley</a>, <a href=\"http://profiles.wordpress.org/mikeyarce\">mikeyarce</a>, <a href=\"http://profiles.wordpress.org/dimadin\">Milan Dinic</a>, <a href=\"http://profiles.wordpress.org/mnelson4\">mnelson4</a>, <a href=\"http://profiles.wordpress.org/morganestes\">Morgan Estes</a>, <a href=\"http://profiles.wordpress.org/usermrpapa\">Mr Papa</a>, <a href=\"http://profiles.wordpress.org/mrmist\">mrmist</a>, <a href=\"http://profiles.wordpress.org/m_uysl\">Mustafa Uysal</a>, <a href=\"http://profiles.wordpress.org/muvimotv\">MuViMoTV</a>, <a href=\"http://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>, <a href=\"http://profiles.wordpress.org/namibia\">Namibia</a>, <a href=\"http://profiles.wordpress.org/nd987\">nd987</a>, <a href=\"http://profiles.wordpress.org/neil_pie\">Neil Pie</a>, <a href=\"http://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>, <a href=\"http://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"http://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>, <a href=\"http://profiles.wordpress.org/schoenwaldnils\">Nils Schonwald</a>, <a href=\"http://profiles.wordpress.org/ninos-ego\">Ninos</a>, <a href=\"http://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>, <a href=\"http://profiles.wordpress.org/compute\">Patrick Hesselberg</a>, <a href=\"http://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"http://profiles.wordpress.org/pdclark\">Paul Clark</a>, <a href=\"http://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"http://profiles.wordpress.org/paulschreiber\">paulschreiber</a>, <a href=\"http://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"http://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"http://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>, <a href=\"http://profiles.wordpress.org/philipjohn\">Philip John</a>, <a href=\"http://profiles.wordpress.org/senlin\">Piet</a>, <a href=\"http://profiles.wordpress.org/psoluch\">Piotr Soluch</a>, <a href=\"http://profiles.wordpress.org/mordauk\">Pippin Williamson</a>, <a href=\"http://profiles.wordpress.org/purzlbaum\">purzlbaum</a>, <a href=\"http://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"http://profiles.wordpress.org/rclations\">rclations</a>, <a href=\"http://profiles.wordpress.org/iamfriendly\">Richard Tape</a>, <a href=\"http://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>, <a href=\"http://profiles.wordpress.org/rob1n\">rob1n</a>, <a href=\"http://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>, <a href=\"http://profiles.wordpress.org/rdall\">Robert Dall</a>, <a href=\"http://profiles.wordpress.org/harmr\">RobertHarm</a>, <a href=\"http://profiles.wordpress.org/rohan013\">Rohan Rawat</a>, <a href=\"http://profiles.wordpress.org/rhurling\">Rouven Hurling</a>, <a href=\"http://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>, <a href=\"http://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"http://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"http://profiles.wordpress.org/sammybeats\">Sam Brodie</a>, <a href=\"http://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"http://profiles.wordpress.org/sathishn\">sathishn</a>, <a href=\"http://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"http://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"http://profiles.wordpress.org/greglone\">ScreenfeedFr</a>, <a href=\"http://profiles.wordpress.org/scribu\">scribu</a>, <a href=\"http://profiles.wordpress.org/seanchayes\">Sean Hayes</a>, <a href=\"http://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>, <a href=\"http://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>, <a href=\"http://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"http://profiles.wordpress.org/shanebp\">shanebp</a>, <a href=\"http://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>, <a href=\"http://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>, <a href=\"http://profiles.wordpress.org/simonp303\">simonp303</a>, <a href=\"http://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>, <a href=\"http://profiles.wordpress.org/solarissmoke\">solarissmoke</a>, <a href=\"http://profiles.wordpress.org/sphoid\">sphoid</a>, <a href=\"http://profiles.wordpress.org/stephdau\">Stephane Daury</a>, <a href=\"http://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"http://profiles.wordpress.org/stompweb\">Steven Jones</a>, <a href=\"http://profiles.wordpress.org/strangerstudios\">strangerstudios</a>, <a href=\"http://profiles.wordpress.org/5um17\">Sumit Singh</a>, <a href=\"http://profiles.wordpress.org/sumobi\">sumobi</a>, <a href=\"http://profiles.wordpress.org/t4k1s\">t4k1s</a>, <a href=\"http://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>, <a href=\"http://profiles.wordpress.org/taylorde\">Taylor Dewey</a>, <a href=\"http://profiles.wordpress.org/thomasvanderbeek\">Thomas van der Beek</a>, <a href=\"http://profiles.wordpress.org/tillkruess\">Till Kruss</a>, <a href=\"http://profiles.wordpress.org/tobiasbg\">TobiasBg</a>, <a href=\"http://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>, <a href=\"http://profiles.wordpress.org/willmot\">Tom Willmot</a>, <a href=\"http://profiles.wordpress.org/topher1kenobe\">Topher</a>, <a href=\"http://profiles.wordpress.org/torresga\">torresga</a>, <a href=\"http://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>, <a href=\"http://profiles.wordpress.org/wpsmith\">Travis Smith</a>, <a href=\"http://profiles.wordpress.org/treyhunner\">treyhunner</a>, <a href=\"http://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>, <a href=\"http://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>, <a href=\"http://profiles.wordpress.org/vlajos\">vlajos</a>, <a href=\"http://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"http://profiles.wordpress.org/winterdev\">winterDev</a>, <a href=\"http://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>, <a href=\"http://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"http://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>, <a href=\"http://profiles.wordpress.org/tollmanz\">Zack Tollman</a>, and <a href=\"http://profiles.wordpress.org/zoerooney\">Zoe Rooney</a>. Also thanks to <a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a> for producing the release video, and Helen with <a href=\"http://adriansandi.com\">Adrián Sandí</a> for the music.</p>\n<p>If you want to follow along or help out, check out <a href=\"http://make.wordpress.org/\">Make WordPress</a> and our <a href=\"http://make.wordpress.org/core/\">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.1!</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 17:05:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"WP iPhone: WordPress for iOS 4.3 Released\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://apps.wordpress.org/?p=2207\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"http://apps.wordpress.org/2014/09/04/4-3-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3735:\"<p>WordPress for iOS 4.3 is here! The download is available from the App Store. Here&#8217;s a glimpse at the latest updates:</p>\n<h3>Various stats improvements</h3>\n<p>We know you love checking your stats on the go, wherever you may be. On your Stats page, you can now see more details in the stats chart in your Visitors and Views. Just tap on any view &#8212; Days, Weeks, Months &#8212; and then click on a particular day, week, or month to view specific views and visitors stats for that item.</p>\n\n<a href=\"http://apps.wordpress.org/2014/09/04/4-3-release/photo-aug-26-9-37-51-am/\"><img width=\"84\" height=\"150\" src=\"http://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-37-51-am.png?w=84&h=150\" class=\"attachment-thumbnail\" alt=\"Stat details for a specific day, August 20\" /></a>\n<a href=\"http://apps.wordpress.org/2014/09/04/4-3-release/photo-aug-26-9-39-06-am/\"><img width=\"84\" height=\"150\" src=\"http://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-39-06-am.png?w=84&h=150\" class=\"attachment-thumbnail\" alt=\"Stat details for the week of August 4\" /></a>\n<a href=\"http://apps.wordpress.org/2014/09/04/4-3-release/photo-aug-26-9-38-57-am/\"><img width=\"84\" height=\"150\" src=\"http://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-38-57-am.png?w=84&h=150\" class=\"attachment-thumbnail\" alt=\"Stat details for July 2014\" /></a>\n\n<h3>Follow more sites in your Reader</h3>\n<p>You can now follow a blog or website, on WordPress.com and elsewhere on the web, by adding its URL. In your Reader, click on the tag at the top right of the screen, and enter the URL of the site you&#8217;d like to follow:</p>\n<p><a href=\"https://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-49-28-am.png\"><img class=\"alignnone size-medium wp-image-2214\" src=\"http://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-49-28-am.png?w=300&h=110\" alt=\"Photo Aug 26, 9 49 28 AM\" width=\"300\" height=\"110\" /></a></p>\n<p>After you click &#8220;Done,&#8221; you&#8217;ll see a &#8220;Followed&#8221; message on the screen that confirms you&#8217;ve successfully followed the site.</p>\n<h3>Other updates and fixes</h3>\n<p>In addition, we&#8217;ve provided initial support for iOS 8 in preparation for upcoming features &#8212; we&#8217;re excited about what&#8217;s to come! We&#8217;ve also released numerous stability updates, including fixes for errors that affected some users, including a crash when opening the Reader, as well as an error for live chat users who were unable to follow up on their support requests.</p>\n<p>As usual, we&#8217;re hard at work on the next release, which will include an iOS 8 &#8220;Today&#8221; extension to view stats, a major interface update for notifications and a limited rollout of a new WYSIWYG post editor.</p>\n<p>Many thanks to the contributors who worked on this release: <a href=\"https://github.com/astralbodies\">Aaron Douglas</a>, <a href=\"https://github.com/irbrad\">Brad Angelcyk</a>, <a href=\"https://github.com/cyrilchandelier\">Cyril Chandelier</a>, <a href=\"https://github.com/roundhill\">Dan Roundhill</a>, <a href=\"https://github.com/davidfilip\">David Filip</a>, <a href=\"https://github.com/aerych\">Eric Johnson</a>, <a href=\"https://github.com/koke\">Jorge Bernal</a>, <a href=\"https://github.com/jleandroperez\">Jorge Leandro Perez</a>, <a href=\"https://github.com/bummytime\">Matt Bumgardner</a>, <a href=\"https://github.com/oguzkocer\">Oguz Kocer</a> and <a href=\"https://github.com/sendhil\">Sendhil Panchadsaram</a>.</p>\n<p>If you have feedback, please leave a comment below or tweet us @WordPressiOS. Thanks!</p><img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=apps.wordpress.org&blog=62767514&post=2207&subd=wpmobileapps&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 15:18:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Brad Angelcyk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"WordPress.tv Blog: WordPress.tv Weekly Staff Picks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://blog.wordpress.tv/?p=369\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://blog.wordpress.tv/2014/09/04/wordpress-tv-weekly-staff-picks/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4078:\"<p>The past week (August 25-31, 2014) has brought with it a great collection of WordCamp videos for designers and developers alike.  If you&#8217;re looking to learn more about WordPress, these videos are a great way to level up!</p>\n<h3>Loris Grillet: Selling Your Projects and Building the Perfect Client Relationship</h3>\n<p>From <a href=\"http://wordpress.tv/event/wordcamp-switzerland-2014/\" title=\"Visit the WordCamp Switzerland event page on WordPress.tv\" target=\"_blank\">WordCamp Switzerland</a> (May 3-4, 2014) comes this great presentation by web and UX designer Loris Grillet on presenting design work and building a good relationship with clients.</p>\n<div id=\"v-Be6CkbNN-1\" class=\"video-player\">\n</div>\n<p><a href=\"http://wordpress.tv/2014/08/25/loris-grillet-selling-your-projects-and-building-the-perfect-client-relationship/\" title=\"View Loris Grillet: Selling Your Projects and Building the Perfect Client Relationship\" target=\"_blank\">View on WordPress.tv</a></p>\n<h3>Simon Owen: Optimising Your Front-End Workflow for WordPress</h3>\n<p>For theme developers, this presentation from <a href=\"http://wordpress.tv/event/wordcamp-manchester-2014/\" title=\"Visit the WordCamp Manchester event page on WordPress.tv\" target=\"_blank\">WordCamp Manchester</a> (June 28-29, 2014) by Simon Owen covers the techniques, applications and shortcuts that he uses to help him when building WordPress themes.</p>\n<div id=\"v-jtf0hlWq-1\" class=\"video-player\">\n</div>\n<p><a href=\"http://wordpress.tv/2014/08/29/simon-owen-optimising-your-front-end-workflow-for-wordpress/\" title=\"View Simon Owen: Optimising Your Front-End Workflow for WordPress on WordPress.tv\" target=\"_blank\">View on WordPress.tv</a></p>\n<h3>Kevin Stover: The Candid Developer. Developing and Maintaining A Successful Plugin… Is Scary</h3>\n<p>Also from <a href=\"http://wordpress.tv/event/wordcamp-manchester-2014/\" title=\"Visit the WordCamp Manchester event page on WordPress.tv\" target=\"_blank\">WordCamp Manchester</a> (June 28-29, 2014) comes this presentation from Kevin Stover that is an honest look at the very scary prospect of releasing a plugin to the public, and how to overcome that fear.</p>\n<div id=\"v-1WQjXPlQ-1\" class=\"video-player\">\n</div>\n<p><a href=\"http://wordpress.tv/2014/08/29/kevin-stover-the-candid-developer-developing-and-maintaining-a-successful-plugin-is-scary-2/\" title=\"View Kevin Stover: The Candid Developer. Developing and Maintaining A Successful Plugin Is Scary on WordPress.tv\" target=\"_blank\">View on WordPress.tv</a></p>\n<p>Of course, this is just a sampling of the great videos that are being published every day, so feel free to visit <a href=\"http://wordpress.tv\" title=\"Visit the WordPress.tv homepage\" target=\"_blank\">WordPress.tv</a> and expand your WordPress knowledge!</p>\n<p>- Your WordPress.tv Moderator Squad</p><br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptvblog.wordpress.com/369/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptvblog.wordpress.com/369/\" /></a> <img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=blog.wordpress.tv&blog=5310177&post=369&subd=wptvblog&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://blog.wordpress.tv/2014/09/04/wordpress-tv-weekly-staff-picks/\"><img alt=\"Loris Grillet: Selling Your Projects and Building the Perfect Client Relationship\" src=\"http://videos.videopress.com/Be6CkbNN/loris-grillet-wcch14_scruberthumbnail_1.jpg\" width=\"160\" height=\"120\" /></a></div><div><a href=\"http://blog.wordpress.tv/2014/09/04/wordpress-tv-weekly-staff-picks/\"><img alt=\"Simon Owen: Optimising Your Front-End Workflow for WordPress\" src=\"http://videos.videopress.com/jtf0hlWq/video-365e1f5a2b_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div><div><a href=\"http://blog.wordpress.tv/2014/09/04/wordpress-tv-weekly-staff-picks/\"><img alt=\"Kevin Stover: The Candid Developer. Developing and Maintaining A Successful Plugin… Is Scary\" src=\"http://videos.videopress.com/1WQjXPlQ/video-7fd062bfb2_scruberthumbnail_2.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 01:01:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Jerry Bates\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:111:\"WPTavern: Critical Security Vulnerability Found in WordPress Slider Revolution Plugin, Immediate Update Advised\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29756\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:120:\"http://wptavern.com/critical-security-vulnerability-found-in-wordpress-slider-revolution-plugin-immediate-update-advised\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5906:\"<p>The security team at Sucuri <a href=\"http://blog.sucuri.net/2014/09/slider-revolution-plugin-critical-vulnerability-being-exploited.html\" target=\"_blank\">publicized a critical vulnerability</a> found in the WordPress Slider Revolution plugin recently. The bug has since been patched, but the development team for <a href=\"http://codecanyon.net/item/slider-revolution-responsive-wordpress-plugin/2751380\" target=\"_blank\">Slider Revolution</a> kept silent about it and did not notify their users of the importance of updating.</p>\n<p>The popular commercial slider plugin is hosted on Codecanyon, an offshoot of <a href=\"http://market.envato.com/\" target=\"_blank\">EnvatoMarket</a>. The slider is bundled in theme packages, such as <a href=\"http://theme-fusion.com/avada/\" target=\"_blank\">Avada</a>, Themeforest&#8217;s top-selling theme. It&#8217;s also packaged with other popular <a href=\"http://marketblog.envato.com/general/affected-themes/\" target=\"_blank\">themes</a> such as <a href=\"http://themeforest.net/item/x-the-theme/5871901\" target=\"_blank\">X Theme</a>, <a href=\"http://themeforest.net/item/udesign-responsive-wordpress-theme/253220\" target=\"_blank\">uDesign</a>, and <a href=\"http://themeforest.net/item/jupiter-multipurpose-responsive-theme/5177775\" target=\"_blank\">Jupiter</a>, in addition to being used independently on thousands of websites.</p>\n<h3>Details of the Vulnerability</h3>\n<p>This is a nasty security vulnerability by which virtually anyone could easily gain access to your database credentials and everything else. It allows a remote attacker to download any file from the server, including the <em>wp-config.php</em> file, which gives the hacker full access to your site. Sucuri shared an example of how one might easily access a site&#8217;s wp-config file by exploiting the vulnerability:</p>\n<p><code>http://victim.com/wp-admin/admin-ajax.php?action=revslider_show_image&#038;img=../wp-config.php</code></p>\n<p>&#8220;This type of vulnerability is known as a Local File Inclusion (LFI) attack,&#8221; Sucuri explained. &#8220;The attacker is able to access, review, download a local file on the server.&#8221;</p>\n<p>The Slider Revolution vulnerability was first disclosed via underground forums before the plugin&#8217;s author decided to patch it silently. A team of Bangladeshi hackers published a <a href=\"https://www.youtube.com/watch?v=8wlTaWnhSvQ\" target=\"_blank\">video</a> on Youtube, detailing how to exploit sites that are vulnerable.</p>\n<p>The <a href=\"https://msisac.cisecurity.org/advisories/2014/2014-070.cfm\" target=\"_blank\">cyber advisory</a> issued on the security threat states that the vulnerability is being actively exploited in the wild. The vulnerability places small, medium, and large government and business entities at a high risk.</p>\n<p>Sucuri analyzed <a href=\"http://cloudproxy.sucuri.net/\" target=\"_blank\">WAF</a> access logs and confirmed that today alone &#8220;there were 64 different IP addresses trying to trigger this vulnerability on more than 1,000 different websites within our environment.&#8221;</p>\n<h3>Users Advised to Update Slider Revolution Immediately</h3>\n<p>If you are using the Slider Revolution plugin on your site, you need to update immediately to avoid becoming a victim of this critical vulnerability. You should also scan your files and database for evidence of hacking and put <a href=\"http://codex.wordpress.org/Hardening_WordPress\" target=\"_blank\">hardening measures</a> in place to prevent future attacks.</p>\n<p>Although the issue was fixed in version 4.2 of the plugin, issued February 25th, the changelog simply referenced a &#8220;security fix.&#8221; Users have since <a href=\"http://codecanyon.net/item/slider-revolution-responsive-wordpress-plugin/2751380/comments#comment_7681157\" target=\"_blank\">commented</a> on the product&#8217;s Codecanyon page to express outrage at not having been further notified:</p>\n<blockquote><p>You should have let us know to update immediately. I am signed up for notifications of updates, but the only way I found out about this was through the Sucuri blog.</p></blockquote>\n<p>The team at <a href=\"http://codecanyon.net/user/themepunch\" target=\"_blank\">ThemePunch</a>, the plugin&#8217;s creators, allegedly contacted multiple security companies for advice on the matter.</p>\n<p>&#8220;We urgently discussed this security issue with leading Security Companies and we were strongly advised to go with a Silent Update,&#8221; a ThemePunch representative replied. They also referenced an auto update system that users can sign up for to receive notice in the future.</p>\n<p>&#8220;We have an Update system for Auto Updates, for which you can register once you have purchased the item, which informs you about new updates.&#8221;</p>\n<h3>The Risk of Using Free or Commercial Extensions Without Update Notifications</h3>\n<p>If you are using a commercial plugin or theme that has no auto-update system or relies on email to notify you of updates, you need to be very proactive about keeping yourself informed.  A critical security vulnerability, such as the one reported for Slider Revolution, can easily take down your site(s) if you neglect updates. Theme authors don&#8217;t always update their bundled plugins and their users cannot take advantage of the auto update system provided by the plugin author.</p>\n<p>This particular security threat wouldn&#8217;t put so many sites in danger if the Slider Revolution plugin was not bundled into themes. Bundling commercial plugins with themes tends to obscure the details of how users can get plugin updates. Even with an update notification system, users are made vulnerable by developers who patch silently and don&#8217;t make an effort to notify their user base about a critical security update. Users can protect themselves from situations like this by declining to purchase themes that bundle plugins/functionality.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Sep 2014 23:39:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"WPTavern: Tom McFarlin Launches Crowdfunding Campaign For PodsCamp\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29684\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wptavern.com/tom-mcfarlin-launches-crowdfunding-campaign-for-podscamp\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2467:\"<p>Running a conference is usually <a title=\"http://wptavern.com/the-hidden-savings-of-a-wordcamp-ticket\" href=\"http://wptavern.com/the-hidden-savings-of-a-wordcamp-ticket\">an expensive</a> endeavor. Scott Kingsley Clark is finding out personally as he continues to work towards putting on the first ever <a title=\"http://podscamp.org/\" href=\"http://podscamp.org/\">PodsCamp</a>, a <a title=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp\" href=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp\">conference devoted</a> to the <a title=\"http://pods.io/\" href=\"http://pods.io/\">Pods Framework</a>. Tom McFarlin hopes to ease budget concerns and has started a <a title=\"https://www.tilt.com/campaigns/podscamp\" href=\"https://www.tilt.com/campaigns/podscamp\">Crowd Tilt campaign</a> for PodsCamp.</p>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/PodsCampCrowdTilt.png\" rel=\"prettyphoto[29684]\"><img class=\"size-full wp-image-29750\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/PodsCampCrowdTilt.png?resize=667%2C447\" alt=\"Crowd Tilt Campaign For PodsCamp\" /></a>Crowd Tilt Campaign For PodsCamp\n<p>The campaign is set to tilt at $1,500 with $3,000 being the target amount. According to the <a title=\"https://www.tilt.com/campaigns/podscamp/description\" href=\"https://www.tilt.com/campaigns/podscamp/description\">campaign description</a>, it offers an opportunity for people to give back to the project.</p>\n<blockquote><p>Since the Pods team has given so much to WordPress in a variety of ways and since I <i>know</i> how generous the WordPress community is, I&#8217;d love to raise some money to help out with the finances of the conference.</p>\n<p>No amount is too small. Seriously &#8211; $1.00 is helpful &#8211; but I know that Scott and his team are doing amazing things for WordPress, and I know that many of us are benefiting from it &#8211; or will benefit from it &#8211; in some way.</p></blockquote>\n<p>An alternative to donating is to <a title=\"http://podscamp.org/tickets/\" href=\"http://podscamp.org/tickets/\">purchase a ticket</a> for $50 and attend the event. It&#8217;s October 3rd in Dallas, TX, and will focus on all things Pods. It&#8217;s the first time the entire development team will be in the same physical location.</p>\n<p>If you&#8217;ve been thinking about donating to the Pods plugin, consider contributing to the campaign to help Clark put on a phenomenal conference.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Sep 2014 21:46:24 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:103:\"WPTavern: Gitium Provides Automatic Git Version Control and Deployment for WordPress Plugins and Themes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29556\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:113:\"http://wptavern.com/gitium-provides-automatic-git-version-control-and-deployment-for-wordpress-plugins-and-themes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3894:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/gitium.jpg\" rel=\"prettyphoto[29556]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/gitium.jpg?resize=1025%2C481\" alt=\"gitium\" class=\"aligncenter size-full wp-image-29717\" /></a></p>\n<p>One important trend surfacing this year is WordPress developers&#8217; growing desire to add git-based version control to their sites. It adds an extra layer of safety in case you need to revert changes. Version control also helps multi-person teams work together more efficiently on the same website.</p>\n<p>Several plugin options are in the works in varying stages of development. While VersionPress <a href=\"http://wptavern.com/versionpress-misses-crowdfunding-goal-by-14-5k\" target=\"_blank\">missed its crowdfunding goal by $14.5K</a> and struggles to put out a working prototype, the <a href=\"http://wptavern.com/free-revisr-plugin-offers-git-management-for-wordpress\" target=\"_blank\">Revisr plugin</a> is open source and already available on WordPress.org.</p>\n<p><a href=\"http://www.gitium.com/\" target=\"_blank\">Gitium</a> is a new plugin in beta, targeted specifically at adding version control for plugins and themes. It enables continuous deployment for WordPress and integrates with Github, Bitbucket, or Travis-CI.The plugin provides automatic git version control and deployment for WordPress extensions and also tracks code edits that originate in the plugin and theme editors.</p>\n<p>Gitium was built by the folks at <a href=\"http://www.presslabs.com/\" target=\"_blank\">PressLabs</a>, a Romanian-based WordPress hosting company. It requires the git command line tool (minimum version of 1.7) installed on the server and the <a href=\"http://php.net/manual/en/function.proc-open.php\" target=\"_blank\">proc_open PHP function</a> enabled.</p>\n<p>Gitium installs like a normal plugin and the settings page prompts the user to provide a URL for remote access to a Git repository via SSH, HTTPS, or Subversion. If you use <a href=\"https://github.com/\" target=\"_blank\">GitHub</a> or <a href=\"https://bitbucket.org/\" target=\"_blank\">Bitbucket</a>, you will need the key issued by Gitum for SSH key-based authentication to allow write access to your repository.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/gitium-settings.jpg\" rel=\"prettyphoto[29556]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/gitium-settings.jpg?resize=779%2C453\" alt=\"gitium-settings\" class=\"aligncenter size-full wp-image-29718\" /></a></p>\n<p>Once configured, Gitium will monitor when you add, remove, update or change files in a plugin or theme. The plugin sets the WordPress logged-in user as the author of the commits. It allows for staging and production to follow different branches of the same repository. Code can be deployed using <code>git push</code>. In the event of a conflict, Gitium will overwrite the changes on the origin repository with the local changes- local modifications will always take precedence over remove ones.</p>\n<p>Ordinarily, most of the code changes on a WordPress site happen within the context of plugins and themes. Gitium allows you to keep track of who changed what. At the moment, the plugin does not support WordPress multisite or submodules. If you need to track changes in both the files and database of your site, then <a href=\"http://wptavern.com/free-revisr-plugin-offers-git-management-for-wordpress\" target=\"_blank\">Revisr</a> might be a more suitable option for adding git-based version control to your site.</p>\n<p>Gitium is licensed under the GPLv2 license. It is still in beta and is not yet ready for production use. Adventurous folks can download it for free from the <a href=\"http://www.gitium.com/\" target=\"_blank\">Gitium</a> website or check out the project on <a href=\"https://github.com/PressLabs/gitium\" target=\"_blank\">GitHub</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Sep 2014 19:06:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Matt: ALS Challenge Fails\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44069\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://ma.tt/2014/09/als-challenge-fails/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:394:\"<p><span class=\"embed-youtube\"></span></p>\n<p>Pretty hilarious compilation of ALS Ice Bucket Challenges gone wrong. I&#8217;ve been challenged and it&#8217;s not going to happen, but <a href=\"http://www.alsa.org/donate/\">did make a donation to the foundation</a>. Really clever marketing, reminenscent of <a href=\"http://www.charitywater.org/\">charity: water&#8217;s</a> birthday campaigns.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Sep 2014 17:34:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"WP iPhone: WordPress Android App Version 3.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://apps.wordpress.org/?p=2193\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"http://apps.wordpress.org/2014/09/03/wordpress-android-app-version-3-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3747:\"<p>The WordPress Android app version 3.1 is now available in the Google Play Store. This update brings robust statistics to the app experience, and makes keeping up with your favorite sites in the Reader even easier.</p>\n<h1>Native Statistics Details</h1>\n<p>Now, you can tap the bar chart in your Statistics to access more detailed stats. Tap a specific bar in the Days, Weeks, or Months views to see detailed data on your views and visitors.</p>\n\n<a href=\"http://apps.wordpress.org/?attachment_id=2228\"><img width=\"84\" height=\"150\" src=\"http://wpmobileapps.files.wordpress.com/2014/09/native-stats-day.png?w=84&h=150\" class=\"attachment-thumbnail\" alt=\"native-stats-day\" /></a>\n<a href=\"http://apps.wordpress.org/?attachment_id=2229\"><img width=\"84\" height=\"150\" src=\"http://wpmobileapps.files.wordpress.com/2014/09/native-stats-week.png?w=84&h=150\" class=\"attachment-thumbnail\" alt=\"native-stats-week\" /></a>\n<a href=\"http://apps.wordpress.org/?attachment_id=2230\"><img width=\"84\" height=\"150\" src=\"http://wpmobileapps.files.wordpress.com/2014/09/native-stats-month.png?w=84&h=150\" class=\"attachment-thumbnail\" alt=\"native-stats-month\" /></a>\n\n<h1>General Changes</h1>\n<ul>\n<li>Automatic refresh: Statistics and Reader post lists automatically refresh when you open the app, so you always see the newest data.</li>\n<li>Improved Reader experience: To make interacting on the go easier, we added <a href=\"http://en.blog.wordpress.com/2014/08/07/introducing-comment-likes/\" target=\"_blank\">comment likes</a> to the Reader. You can also block blogs on Reader tag pages to customize your reading experience.</li>\n<li>Updated blog preview. See screenshot below:</li>\n</ul>\n<p><a href=\"https://wpmobileapps.files.wordpress.com/2014/08/new-blog-preview2.png\"><img class=\"alignnone size-large wp-image-2205\" src=\"http://wpmobileapps.files.wordpress.com/2014/08/new-blog-preview2.png?w=720&h=352\" alt=\"new-blog-preview2\" width=\"720\" height=\"352\" /></a></p>\n<p>&nbsp;</p>\n<p>We&#8217;ve also temporarily disabled the live chat with Automattic support due to an issue with the library we&#8217;re using. We expect to re-enable it in the next version or two.</p>\n<h1>Bug Fixes</h1>\n<p>This version also comes with a bunch of bug fixes. Here&#8217;s a non-exhaustive list:</p>\n<ul>\n<li>Improved notifications synchronization, which sometimes got stuck.</li>\n<li>Fixed the ability to follow a blog by its URL.</li>\n<li>Fixed broken blockquote styling in the comments view.</li>\n</ul>\n<h1>What’s Next?</h1>\n<p>A big thanks to all of the contributors who worked on this release: <a href=\"https://github.com/beaucollins\">@beaucollins</a>, <a href=\"https://github.com/daniloercoli\">@daniloercoli</a>, <a href=\"https://github.com/maxme\">@maxme</a>, <a href=\"https://github.com/mjangda\">@mjangda</a>, <a href=\"https://github.com/nbradbury\">@nbradbury</a>, <a href=\"https://github.com/roundhill\">@roundhill</a> and <a href=\"https://github.com/sendhil\">@sendhil</a>! You can keep up with the development progress for the next version by visiting <a href=\"https://github.com/wordpress-mobile/WordPress-Android/issues?q=is%3Aopen+is%3Aissue+milestone%3A3.2\">our 3.2 milestone on GitHub</a> or by following us on Twitter <a href=\"http://twitter.com/wpandroid\">@WPAndroid</a>.</p>\n<p>Beta testers have access to beta versions with beta updates shipped directly through Google Play. The beta versions may have new features, new fixes, and possibly new bugs. If you want to join them, request access on our <a href=\"https://plus.google.com/communities/108813167297661427043\">Google+ Community</a>.</p><img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=apps.wordpress.org&blog=62767514&post=2193&subd=wpmobileapps&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Sep 2014 14:30:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"Maxime\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"Matt: Downtown Vegas Podcast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44072\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"http://ma.tt/2014/09/downtown-vegas-podcast/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:430:\"<p>I&#8217;m a fan of Tony Hsieh&#8217;s <a href=\"http://downtownproject.com/\">Downtown Project</a> and try to do something with the community whenever I&#8217;m in town. On Thursday I&#8217;m going to be on the <a href=\"http://www.downtownpodcast.tv/\">Downtown Vegas Podcast</a> which will be filmed live at 9 pm at <a href=\"https://www.facebook.com/inspirelv\">Inspire Theatre</a>. Please come by if you&#8217;re in the area!</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Sep 2014 06:55:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"WPTavern: Sprout Apps Launches Free WordPress Invoicing Plugin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29553\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"http://wptavern.com/sprout-apps-launches-free-wordpress-invoicing-plugin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4837:\"<p>Last month, <a href=\"https://sproutapps.co/\" target=\"_blank\">Sprout Apps</a> announced that it would soon be <a href=\"http://wptavern.com/sprout-apps-to-launch-a-suite-of-wordpress-powered-apps-targeted-at-freelancers-and-small-businesses\" target=\"_blank\">launching a suite of business apps</a> targeted at WordPress freelancers and small businesses. While the company is still in pre-launch operations, <a href=\"http://wordpress.org/plugins/sprout-invoices/\" target=\"_blank\">Sprout Invoices</a> was just released on WordPress.org as part of the launch plan.</p>\n<p><a href=\"http://dancameron.org/\" target=\"_blank\">Dan Cameron</a>, the founder of Sprout Apps, believes there are some distinct advantages to managing common business-related tasks in the admin. The Sprout Apps product suite aims to streamline and brand all client communications, making your WordPress site the center of activity for your business. Cameron hopes that users will opt for a homegrown WordPress solution that fits right into their websites, instead of relegating business tasks to third-party applications with narrow customization options.</p>\n<p>The <a href=\"http://wordpress.org/plugins/sprout-invoices/\" target=\"_blank\">Sprout Invoices</a> plugin unifies the workflow of estimate creation and invoice management. It allows you to receive estimate requests via a default form, or you can integrate it with Gravity Forms or Ninja Forms. The plugin automatically creates estimates based on the requests you receive and you can easily manage their status in the admin:</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/easy-estimate-management.png\" rel=\"prettyphoto[29553]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/easy-estimate-management.png?resize=1025%2C705\" alt=\"easy-estimate-management\" class=\"aligncenter size-full wp-image-29660\" /></a></p>\n<p>Once an estimate is accepted, the plugin automatically generates the invoice to speed up the process of being paid. Sprout Invoicing has built-in support for deposit payments.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/sprout-invoice.png\" rel=\"prettyphoto[29553]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/sprout-invoice.png?resize=1025%2C795\" alt=\"sprout-invoice\" class=\"aligncenter size-full wp-image-29662\" /></a></p>\n<p>Sprout Invoicing allows for custom estimate and invoice templates, which you can brand for your business via a standards WordPress theme template. Notification editing allows for plain-text or HTML, so you can also match the branding in your email communications.</p>\n<p>The plugin&#8217;s dashboard lets you know how your business is doing at a glance, with charts and summaries:</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sprout-invoicing-dashboard.gif\" rel=\"prettyphoto[29553]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sprout-invoicing-dashboard.gif?resize=606%2C342\" alt=\"sprout-invoicing-dashboard\" class=\"aligncenter size-full wp-image-29665\" /></a></p>\n<p>Sprout Invoicing also includes dynamic reports, which allow for date filtering, sorting, search, and exporting &#8211; all of the features you would normally expect from your standard invoicing app.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/dynamic-reports.gif\" rel=\"prettyphoto[29553]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/dynamic-reports.gif?resize=606%2C342\" alt=\"dynamic-reports\" class=\"aligncenter size-full wp-image-29666\" /></a></p>\n<p>The free Sprout Invoicing plugin allows you to accept payment via Paypal Pro or send customers to Paypal to pay invoices. The <a href=\"https://sproutapps.co/marketplace/\" target=\"_blank\">Sprout App marketplace</a> includes additional upgrades and payment add-ons.</p>\n<p>Sprout Invoicing features at a glance include:</p>\n<ul>\n<li>Advanced Estimate and Invoice Admin</li>\n<li>200+ filters and actions for hooking into the plugin and altering anything</li>\n<li>Customizable invoice and estimate templates</li>\n<li>Discounts</li>\n<li>Deposit Payments</li>\n<li>Taxes</li>\n<li>Client records with multiple points of contact</li>\n<li>Nested line items</li>\n<li>Pre-defined tasks/line items</li>\n<li>AJAX throughout to speed up workflow</li>\n</ul>\n<p>In the future, Cameron plans to add importing from WP-Invoice, Harvest, and Freshbooks. Other major features on the roadmap include time tracking, recurring payments, and payment terms.</p>\n<p>If you are currently using commercial invoicing software and want to save your small business a little bit of cash, Sprout Invoices looks like a promising WordPress-based alternative. You can <a href=\"http://wordpress.org/plugins/sprout-invoices/\" target=\"_blank\">download</a> it for free from WordPress.org.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 02 Sep 2014 22:00:07 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WPTavern: The Hidden Savings Of a WordCamp Ticket\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29602\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wptavern.com/the-hidden-savings-of-a-wordcamp-ticket\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:12345:\"<p>When we wrote about tickets going on sale for the <a title=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp\" href=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp\">first ever PodsCamp</a>, some folks commented that <a title=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58410\" href=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58410\">$50 was too much</a> for a one day event, especially when compared to a WordCamp. I agree with <a title=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58440\" href=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58440\">Sarah Pressler who said</a>, &#8220;WordCampers are spoiled by the $20-40 fees associated with WordCamps.&#8221;</p>\n<p>To see how spoiled the WordPress community is in having the WordPress Foundation, WordCamp Central pillar sponsors, and <a title=\"http://central.wordcamp.org/multi-event-sponsorship-packages/\" href=\"http://central.wordcamp.org/multi-event-sponsorship-packages/\">Multi-Event Sponsors</a> foot most of the bill for WordCamps, I compared their prices with other conferences. I also discovered through public budget reports that ticket prices are 2-4 times cheaper than what the total amount of expenses are per attendee.</p>\n<h2>Joomla Conferences</h2>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/Joomla-Logo.png\" rel=\"prettyphoto[29602]\"><img class=\"aligncenter size-full wp-image-29604\" src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/Joomla-Logo.png?resize=1025%2C260\" alt=\"Joomla Logo\" /></a></p>\n<p>Joomla has two different types of conferences. One is called <a title=\"http://docs.joomla.org/JoomlaDays\" href=\"http://docs.joomla.org/JoomlaDays\">Joomla Day</a> while the other is <a title=\"http://events.joomla.org./joomla-conferences/699-joomla-world-conference\" href=\"http://events.joomla.org./joomla-conferences/699-joomla-world-conference\">Joomla World</a>. Joomla Day is a 1-3 day event, similar to WordCamps. They&#8217;re held all over the world. Based on my research, prices for events based in the United States range from $20-$80.</p>\n<p>Joomla World is similar to WordCamp San Francisco in that its a once a year, unique experience in addition to learning about Joomla from premiere speakers. The location of Joomla World changes every year.</p>\n<p>This year, it&#8217;s in Grand Oasis Cancun, Mexico, November 7th-9th. Early bird tickets are $199 while standard tickets are $299. The 3-day pass includes access to all the sessions from Friday through Sunday. Food and accommodations are <strong>NOT</strong> included with the ticket.</p>\n<p>According to the <a title=\"http://events.joomla.org./how-to-organize-a-joomla-day\" href=\"http://events.joomla.org./how-to-organize-a-joomla-day\">Joomla events website</a>, <a title=\"http://opensourcematters.org/\" href=\"http://opensourcematters.org/\">Open Source Matters</a> will provide $2,500 in funding to first time Joomla Days. For subsequent annual events, OSM will provide $1,500 in financial support.</p>\n<h2>Drupal Conferences</h2>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/drupal_logo-blue.png\" rel=\"prettyphoto[29602]\"><img class=\"aligncenter size-full wp-image-29657\" src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/drupal_logo-blue.png?resize=620%2C249\" alt=\"Drupal Logo\" /></a></p>\n<p>Drupal also has two different conference types, Drupal Camp and DrupalCon. A <a title=\"https://www.drupal.org/node/247972\" href=\"https://www.drupal.org/node/247972\">Drupal Camp</a> is similar to WordCamp in that it&#8217;s a 1-2 day event that focuses on many aspects of Drupal in one location. DrupalCon is the official conference of the Drupal Community.</p>\n<p>Tickets for DrupalCon Austin, TX, that took place June 2nd-6th ranged in price depending on when you purchased them. Here&#8217;s what the ticket price break down looks like.</p>\n<ul>\n<li>Earlybird     $400     ends April 4</li>\n<li>Regular        $500     ends May 2</li>\n<li>Late              $550     ends May 30</li>\n<li>Onsite          $600     ends June 5</li>\n</ul>\n<p>These are the average prices for a DrupalCon held in the United States. A ticket to DrupalCon Austin would have given you access to a daily lunch and morning coffee break, most of the event, and swag items. Drupal Camps on the other hand average $20 for admission. The ticket price includes food and swag items.</p>\n<p><a title=\"http://www.acquia.com/\" href=\"http://www.acquia.com/\">Acquia</a> is the commercial entity that supports the Drupal project and is the top-tier sponsor for most DrupalCons. Similar to WordPress and Joomla, <a title=\"https://assoc.drupal.org/\" href=\"https://assoc.drupal.org/\">Drupal has an association</a> dedicated to helping the open-source CMS project flourish. Unlike Joomla and WordPress, the Drupal Association does not help with the fiscal responsibilities of Drupal Camps.</p>\n<h2>Everyone Sees Value Differently</h2>\n<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/PodsCampFeaturedImage.png\" rel=\"prettyphoto[29602]\"><img class=\"size-full wp-image-29491\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/PodsCampFeaturedImage.png?resize=697%2C284\" alt=\"The First Ever Podscamp\" /></a>The First Ever Podscamp\n<p>The only person that determines whether a conference is worth the price of admission is the attendee. On price alone, WordCamps are substantially more affordable than several other conferences related to open source software. This is in large part due to the financial support provided by the <a title=\"http://wordpressfoundation.org/\" href=\"http://wordpressfoundation.org/\">WordPress Foundation, </a> <a title=\"http://central.wordcamp.org/sponsorship-level/wordcamp-pillar/\" href=\"http://central.wordcamp.org/sponsorship-level/wordcamp-pillar/\">WordCamp Pillar Sponsors</a>, and <a title=\"http://central.wordcamp.org/multi-event-sponsorship-packages/\" href=\"http://central.wordcamp.org/multi-event-sponsorship-packages/\">Multi-Event Sponsors</a>.</p>\n<p>While Scott Kingsley Clark would love to have <a title=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58437\" href=\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58437\">PodsCamp be free to attend</a>, the costs associated with the event prohibit it from happening. Since it&#8217;s a separate event from WordCamp, Clark doesn&#8217;t have access to the funds WordCamps enjoy. Instead, he&#8217;s relying on sponsors to help offset the costs so everything is not out of his pocket.</p>\n<p>Again, value is determined by an individual but for $50, you get food, a full day of sessions devoted to Pods, and face to face access with the entire development team. I think $50 is a bargain, especially for those who use Pods extensively.</p>\n<h2>Should Open Source Conferences Be Free?</h2>\n<p>There is a line of thought that open source conferences should be free to attend. Steve Burge, of OSTraining.com, <a title=\"https://www.ostraining.com/blog/general/open-source-event-free/\" href=\"https://www.ostraining.com/blog/general/open-source-event-free/\">explains why</a>.</p>\n<blockquote><p>If you want to increase the number of people using your software, you should leverage your event to attract as many people as you possibly can.</p>\n<p>If you charge $50 or more, you&#8217;ll only ever attract the same old people. If you want to attract new people, try and remove all barriers that might stop them from attending.</p></blockquote>\n<p>Burge goes on to list a few different ways offering free tickets can work. I&#8217;ve never organized a WordCamp myself but have spoken to many who have. Several of them have told me the cost of the venue is the most expensive part of the event. Food and beverages are typically the second largest expense. Swag items are not as expensive as you might think since they are purchased in bulk.</p>\n<p>I don&#8217;t think what Burge describes is likely to happen for WordCamps. Part of the reason is expectations. The other is that because of the <a title=\"http://plan.wordcamp.org/\" href=\"http://plan.wordcamp.org/\">WordCamp guidelines</a>, several of the events are <em>cookie cutter</em> in nature. By upping the ante with a bigger after party or extravagant offerings, WordCamps can differentiate themselves. It&#8217;s possible the cost of differentiating the event will generate more expensive tickets unless it&#8217;s offset by a sponsorship.</p>\n<p>One item Burge doesn&#8217;t mention in his post is the incentive given to people who pay for a ticket. The <a title=\"http://plan.wordcamp.org/planning-details/selling-tickets/\" href=\"http://plan.wordcamp.org/planning-details/selling-tickets/\">WordCamp planning site</a> explains the benefits of charging a small fee.</p>\n<blockquote><p>We think of WordCamp tickets not as being comparable to conference tickets (for many WordCamp lineups, you’d have to pay hundreds of dollars at a regular conference), but as being just enough to get people out of bed on that sleepy WordCamp morning.</p>\n<p>Typical prices run about $15-20 per day, which basically covers lunch and a t-shirt, leaving you to cover the additional event costs through <a title=\"Fundraising\" href=\"http://plan.wordcamp.org/planning-details/fundraising/\">fundraising</a>. If you think you need to charge more than $20 per day, chances are there’s something going on your budget that can be adjusted.</p></blockquote>\n<h2>WordCamp Budgets Show How Much Money We&#8217;re Saving On Ticket Prices</h2>\n<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/06/CashRegisterFeaturedImage.png\" rel=\"prettyphoto[29602]\"><img class=\"size-full wp-image-25380\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/06/CashRegisterFeaturedImage.png?resize=637%2C200\" alt=\"Cash Register Featured Image\" /></a>photo credit: <a href=\"http://www.flickr.com/photos/jalevega/8733967750/\">Historias Visuales</a> &#8211; <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.0/\">cc</a>\n<p>At least a few WordCamps have their budget reports available for public viewing. The numbers that jump out at me are the total expenses per attendee.</p>\n<ul>\n<li><a title=\"http://2013.london.wordcamp.org/2014/04/30/wordcamp-london-2013-budget/\" href=\"http://2013.london.wordcamp.org/2014/04/30/wordcamp-london-2013-budget/\">WordCamp London 2013</a></li>\n<li><a title=\"https://docs.google.com/spreadsheet/ccc?key=0ArMhzS3WJ97adExMLXZBbDVrVkxKZks2c1BhWGdQc3c&usp=sharing\" href=\"https://docs.google.com/spreadsheet/ccc?key=0ArMhzS3WJ97adExMLXZBbDVrVkxKZks2c1BhWGdQc3c&usp=sharing\">WordCamp Milwaukee 2014</a></li>\n<li><a title=\"http://2013.sf.wordcamp.org/2013/04/07/the-wordcamp-san-francisco-budget-or-how-i-learned-to-stop-worrying-and-love-the-spreadsheet/\" href=\"http://2013.sf.wordcamp.org/2013/04/07/the-wordcamp-san-francisco-budget-or-how-i-learned-to-stop-worrying-and-love-the-spreadsheet/\">WordCamp San Francisco 2013</a></li>\n<li><a title=\"http://www.wordcamphouston.com/2010-wordcamp-budget/\" href=\"http://www.wordcamphouston.com/2010-wordcamp-budget/\">WordCamp Houston 2010</a></li>\n</ul>\n<p>Both WordCamp San Francisco and Milwaukee had a total expense amount close to $83 per attendee. This means both events would have needed to charge attendees $84 to put on the event without financial support from external sources. WCSF charged $20 per day per person while Milwaukee charged $25 for Saturday and Sunday. Thanks to sponsorships and the WordPress Foundation, attendees saved anywhere from $40-$60 per ticket.</p>\n<h2>WordCamps Need To Keep Ticket Prices Low</h2>\n<p>The biggest point Burge makes in his post and something I agree with is that the more affordable conferences are, the more people who can attend them. I&#8217;d hate to see average WordCamp prices between $50-$80 for 1-2 days of learning. More expensive WordCamps would cause exclusivity which is against the ethos of WordPress.</p>\n<p>I&#8217;d love to hear from WordCamp organizers on ideas or steps you&#8217;ve taken to get more people with low income levels to attend your event. I&#8217;m also interested to know if you offer free tickets to college students or members of non-profit organizations.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 02 Sep 2014 21:12:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"WPTavern: Saga: A Free WordPress Theme for Writers from Theme Hybrid\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29076\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"http://wptavern.com/saga-a-free-wordpress-theme-for-writers-from-theme-hybrid\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4333:\"<p>When Theme Hybrid <a href=\"http://wptavern.com/stargazer-a-free-design-specific-parent-theme-for-wordpress\" target=\"_blank\">launched its Stargazer theme</a>, the idea of a design-specific parent theme that would provide limitations landed in stark contrast to the super generic, all-encompassing themes that permeate the market. You&#8217;ve probably seen themes marketed as &#8220;the last WordPress theme you&#8217;ll ever need.&#8221; They kinds of themes purport to have so much flexibility that they can be suitable for any kind of website. Stargazer was launched as the exact opposite.</p>\n<p>Justin Tadlock is aiming to restore the original design for the relationship between parent and child themes. His post on <a href=\"http://themehybrid.com/weblog/designing-the-box\" target=\"_blank\">Designing in a Box</a> further explains the philosophy behind child themes with limitations where the parent theme houses the majority of the design. The Stargazer experiment inspired a flurry of child themes. It represented a shift in how Theme Hybrid themes are built and its overwhelming success prompted Tadlock to create another.</p>\n<p><a href=\"http://themehybrid.com/weblog/saga-wordpress-theme\" target=\"_blank\">Saga</a> is the next parent theme in Theme Hybrid&#8217;s revolution. It was designed specifically for writers and has been stripped of anything that would distract from the content.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/saga.png\" rel=\"prettyphoto[29076]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/saga.png?resize=880%2C660\" alt=\"saga\" class=\"aligncenter size-full wp-image-29607\" /></a></p>\n<p>The theme was designed with careful attention to typography, since it focuses on the written word. The homepage and single posts display big, bold featured images. The customizer offers custom color options and a header icon option with 400+ icons to choose from. Navigation is mobile-friendly and hidden until clicked.</p>\n<p>Saga seamlessly integrates with several of Tadlock&#8217;s free plugins for further customization, including <a href=\"http://themehybrid.com/plugins/custom-background-extended\" target=\"_blank\">Custom Background Extended</a>, <a href=\"http://themehybrid.com/plugins/grid-columns\" target=\"_blank\">Grid Columns</a>, and <a href=\"http://themehybrid.com/plugins/custom-header-extended\" target=\"_blank\">Custom Header Extended</a> for per-post headers and backgrounds.</p>\n<p>The theme is compatible with Philip Author Moore’s new <a href=\"http://wptavern.com/new-plugin-adds-subtitles-to-wordpress-posts-pages-and-custom-post-types\" target=\"_blank\">Subtitles</a> plugin, which offers an elegant and portable way to include subtitles even if you change themes.</p>\n<p>Saga also includes beautiful support for post formats with a unique design for each format.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/saga-post-formats.png\" rel=\"prettyphoto[29076]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/saga-post-formats.png?resize=970%2C540\" alt=\"saga-post-formats\" class=\"aligncenter size-full wp-image-29625\" /></a></p>\n<p>Check out a <a href=\"http://locallylost.com/saga/\" target=\"_blank\">live demo</a> of Saga to see the theme in action.</p>\n<h3>Build a Saga Child Theme</h3>\n<p>If you want to build a child theme for Saga, the barrier for entry is intentionally low so that new theme developers can easily get started experimenting. &#8220;Like Stargazer, you can literally build a custom child theme for Saga with just a few lines of code,&#8221; Tadlock said. Child theme authors who submit their themes to Theme Hybrid and WordPress.org will receive a free, lifetime membership to Theme Hybrid. You&#8217;ll also receive a detailed technical review from Tadlock and the WordPress Theme Review Team, which will help you refine your skills as a theme author.</p>\n<p>Even if you&#8217;re not planning on building a child theme, Saga is beautiful without any modifications. It offers writers a unique design for sharing stories while keeping the focus on the content. If your blog needs a design refresh, you can <a href=\"http://themehybrid.com/themes/saga\" target=\"_blank\">download Saga</a> for free from Theme Hybrid. It will also be arriving soon on WordPress.org, pending approval.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 02 Sep 2014 18:32:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"WPTavern: WordPress Plugin Boilerplate 3.0 Released with New Community Website\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29559\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:88:\"http://wptavern.com/wordpress-plugin-boilerplate-3-0-released-with-new-community-website\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6679:\"<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/wppb.png\" rel=\"prettyphoto[29559]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/wppb.png?resize=1025%2C482\" alt=\"wppb\" class=\"aligncenter size-full wp-image-29572\" /></a></p>\n<p>Version 3.0 of the <a href=\"https://github.com/tommcfarlin/WordPress-Plugin-Boilerplate\" target=\"_blank\">WordPress Plugin Boilerplate</a> was released today. The open source project was started in 2011 by Tom McFarlin as a GitHub repository for storing code while he learned plugin development. Over the past three years, the boilerplate has matured beyond his expectations with the help of 39 contributors. It now has more than 1800 stars on GitHub and a brand new logo and <a href=\"http://wppb.io/\" target=\"_blank\">website</a>.</p>\n<h3>What&#8217;s New in 3.0?</h3>\n<p>The 3.0 release constitutes a major rewrite of the boilerplate. The primary objective of the project is to provide a standardized, object-oriented starting place for building high quality plugins.</p>\n<p>&#8220;In the new version, we&#8217;ve broken things down into a very, very specific organizational structure,&#8221; McFarlin explained. &#8220;It&#8217;s much more object-oriented than it&#8217;s predecessor, the code doesn&#8217;t include a lot of TODO&#8217;s. Instead, the comments give developers guidance as to what a variable or a function should be doing when using the Boilerplate.&#8221;</p>\n<p>As developers implement their own work using the boilerplate, they are encouraged to overwrite the comments that are included as a guide.</p>\n<p>McFarlin and contributors made every effort to ensure that the code in version 3.0 conforms to WordPress&#8217; <a href=\"http://codex.wordpress.org/WordPress_Coding_Standards\" target=\"_blank\">coding standards</a> and its <a href=\"http://codex.wordpress.org/Inline_Documentation\" target=\"_blank\">inline documentation standards</a>.</p>\n<p>The plugin boilerplate now includes classes that are responsible for everything. There are classes for:</p>\n<ul>\n<li>Plugin activation</li>\n<li>Plugin deactivation</li>\n<li>Plugin Internationalization</li>\n<li>A class that&#8217;s used to register all hooks with WordPress</li>\n<li>A core plugin class</li>\n<li>Some use of common object-oriented design paradigms</li>\n<li>A specific location for dashboard-related functionality, styles, and scripts</li>\n<li>A location for public-facing styles, and scripts</li>\n<li>A location for shared code (be it libraries or not)</li>\n<li>A template for a plugin readme</li>\n<li>A directory structure that mimics the WordPress Plugin Repository&#8217;s Subversion directory</li>\n<li>Places for screenshots, banner images, and even the <a href=\"http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer\" target=\"_blank\">custom icons</a> that were just announced for WordPress 4.0</li>\n</ul>\n<p>The new directory structure is now broken down into assets and trunk directories:</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/wppb-directory-structure.png\" rel=\"prettyphoto[29559]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/wppb-directory-structure.png?resize=884%2C620\" alt=\"wppb-directory-structure\" class=\"aligncenter size-full wp-image-29580\" /></a></p>\n<p>One of the most exciting updates to 3.0 is that this version of the boilerplate can be installed and activated like a regular plugin, making it easier for new plugin developers to get started. &#8220;It doesn&#8217;t introduce any functionality into WordPress,&#8221; McFarlin explained. &#8220;But there are two sample JavaScript files that show how to use the core Boilerplate code to get started.&#8221;</p>\n<h3>The Future of the WordPress Plugin Boilerplate: Expanded Documentation and Community</h3>\n<p>Version 3.0 omits the <a href=\"https://github.com/afragen/github-updater\" target=\"_blank\">Github Updater</a>, which was part of previous versions. The reason behind this change is that McFarlin wanted to scale back the boilerplate&#8217;s contents in order to offer only the bare essentials to get started.</p>\n<p><strong>&#8220;I want to start up Editions (or basically forks) of the Boilerplate that are tailored to those who like to use Grunt or Composer or those who want to include the GitHub updater in the plugin,&#8221;</strong> he said. &#8220;Personally, I&#8217;m a big fan of it and I use it in a number of my plugins, but I didn&#8217;t want to build it into this version when it can just as easily be added by someone else&#8217;s fork.&#8221;</p>\n<p>With the new website and branding in place, McFarlin hopes to develop the community behind the project. &#8220;Hopefully, having a face to relate to the Boilerplate will help elevate it beyond just a miscellaneous GitHub repository,&#8221; he said. &#8220;A domain, a logo, branding, and all of that stuff can go a long way in helping others to associate a project with an idea and a group of people more than an open source repository and a README could ever do.&#8221;</p>\n<p>McFarlin plans to expand the boilerplate&#8217;s documentation on the website and grow a community where developers can share ideas and forks that they&#8217;ve created for specific use cases, such as WordPress multisite.</p>\n<p>Appealing to new developers is also part of the goal for the new website. <strong>&#8220;I want to make the Boilerplate more accessible &#8211; GitHub is great, but it&#8217;s great if you&#8217;re a programmer,&#8221;<strong> McFarlin said. &#8220;If not, it&#8217;s really intimidating and people have no idea how to get started with contributing to a project.&#8221;</p>\n<p>The boilerplate website will serve to provide documentation, example code, and an explanation of how people can get involved contributing to the project. McFarlin is even considering adding courses, editions, and a forum. &#8220;To be honest, I&#8217;ve even considered holding online events where people can pay to learn how to use the Boilerplate for certain things, though this and all of the other things are so far on the backburner that it&#8217;s hard to envision how it&#8217;s going to play out right now,&#8221; he said.</p>\n<p>Over the years, the community surrounding the boilerplate has helped to shape its future and McFarlin is committed to move the project in a direction that continues to serve WordPress plugin developers.</p>\n<p>&#8220;I think the one thing that I never expect to hear, yet never get tired of hearing, is: <em>&#8216;I didn&#8217;t know how to write a plugin or where to start until I found the Boilerplate,&#8217;</em>&#8221; he said. &#8220;That&#8217;s a really great feeling.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 02 Sep 2014 14:41:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"Matt: Fight Club A/B Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44063\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://ma.tt/2014/09/fight-club-abtesting/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:221:\"<p>Luca Sartoni writes <a href=\"http://lucasartoni.com/2014/08/28/the-rules-of-ab-testing-by-tyler-durden/\">The Rules of A/B Testing by Tyler Durden</a>. &#8220;1st Rule: You don&#8217;t talk about A/B Testing.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 01 Sep 2014 15:39:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Akismet: August Stats Roundup\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://blog.akismet.com/?p=1680\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://blog.akismet.com/2014/09/01/august-stats-roundup/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3819:\"<div id=\"attachment_1681\" class=\"wp-caption alignright\"><img class=\"wp-image-1681 size-medium\" src=\"http://akismet.files.wordpress.com/2014/09/harry_potter_stack_of_books.jpg?w=240&h=300\" alt=\"Harry Potter stack of books\" width=\"240\" height=\"300\" /><p class=\"wp-caption-text\"><a href=\"https://www.flickr.com/photos/angelic0devil6/865080396\">&#8220;Potter II&#8221; by </a><a href=\"https://www.flickr.com/photos/angelic0devil6/\">L. Whittaker</a><a href=\"https://www.flickr.com/photos/angelic0devil6/865080396\"> is licensed under </a><a href=\"https://creativecommons.org/licenses/by/2.0/\">CC BY 2.0</a></p></div>\n<p><em>This post is part of a monthly series summarizing some stats and figures from the Akismet universe. Feel free to browse <a href=\"http://blog.akismet.com/category/monthly-roundup/\">all of the posts in the series</a>.</em></p>\n<p>In August, there were 7,203,785,500 pieces of spam that came through Akismet. <strong>If each piece of spam were one word, it would take 6645 copies of the Harry Potter series to accomodate them all.</strong></p>\n<p>Here&#8217;s a breakdown of the number of spam and legitimate comments (what we call ham) we saw last month:</p>\n<div id=\"attachment_1682\" class=\"wp-caption alignnone\"><a href=\"https://akismet.files.wordpress.com/2014/09/akismet-spam-and-ham-stats-aug-2014.png\"><img class=\"wp-image-1682 size-large\" src=\"http://akismet.files.wordpress.com/2014/09/akismet-spam-and-ham-stats-aug-2014.png?w=700&h=436\" alt=\"Akismet spam and ham stats Aug 2014\" /></a><p class=\"wp-caption-text\">Our busiest day was August 21, with about 269 million spam messages, and the slowest day was August 3 with 173 million. We missed only about 1 in every 5,916 spams.</p></div>\n<p>The number of spam message is up 92% from last year, which is a similar large rise we&#8217;ve seen in previous months. It&#8217;s also up from last month by 28%.</p>\n<p>The number of legimate messages that went through this month is 33,377,8500. <strong>If each legitimate comment was a word, they&#8217;d only fill 307 copies of the Harry Potter series.</strong> The amount of legitimate content going around is only about 4% &#8211; and the large difference is business as usual.</p>\n<p>As always, if your own missed spam or false positive numbers are on the rise, we&#8217;d love to help. You can reach out through our <a href=\"http://akismet.com/contact/\">contact form</a>.</p>\n<p>August was a big month in the spam universe, three services were in the news. Google added new spam filtering support to Gmail &#8211; you can find more info on <a href=\"http://www.pcworld.com/article/2464440/google-tightens-gmail-spam-filtering.html\">PC World</a>. Twitter <a href=\"https://blog.twitter.com/2014/fighting-spam-with-botmaker\">announced</a> its new spam filtering system, BotMaker. And, Apple&#8217;s iMessage seems to have been hit with a bout of spam. Wired <a href=\"http://www.wired.com/2014/08/apples-imessage-is-being-taken-over-by-spammers/\">explained why</a>, though MacWorld showed us why the numbers <a href=\"http://www.macworld.com/article/2597429/hold-the-phone-imessage-spam-not-all-its-cracked-up-to-be.html\">may not in fact be so dire</a>.</p>\n<p>And now for a question for the readers: <strong>what other data tidbits would you like to see mentioned or discussed in these monthly spam reports?</strong> We&#8217;d love to hear from you, and accomodate where we can <span class=\"wp-smiley emoji emoji-smile\" title=\":)\">:)</span></p><br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/akismet.wordpress.com/1680/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/akismet.wordpress.com/1680/\" /></a> <img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=blog.akismet.com&blog=116920&post=1680&subd=akismet&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 01 Sep 2014 05:43:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Valerie\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"Matt: You Can’t Tell This is 3D Rendered\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44052\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"http://ma.tt/2014/08/ikea-3d/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:442:\"<p><img class=\"aligncenter size-full wp-image-44057\" src=\"http://i2.wp.com/s.ma.tt/files/2014/08/2014-08-27-ikea-3d-01.jpg?resize=604%2C411\" alt=\"\" /></p>\n<p>Khoi Vinh writes about <a href=\"http://www.subtraction.com/2014/08/27/ikea-is-selling-you-a-pack-3d-rendered-of-lies/\">How 75% of the real-looking photographs you see in an Ikea catalog are actually 3d-rendered</a>. <cite>Hat tip: <a href=\"http://hfz.im/\">Hafiz Rahman</a>.</cite></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 31 Aug 2014 15:29:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Matt: Why LaTeX?\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44050\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://ma.tt/2014/08/whylatex/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:448:\"<blockquote class=\"twitter-tweet\" width=\"550\"><p>Posts like this are why <a href=\"https://twitter.com/wordpressdotcom\">@wordpressdotcom</a> and <a href=\"https://twitter.com/jetpack\">@jetpack</a> offer LaTeX / Beautiful Math support. <a href=\"http://t.co/rYUbyq2IpR\">http://t.co/rYUbyq2IpR</a></p>\n<p>&mdash; George Stephanis (@daljo628) <a href=\"https://twitter.com/daljo628/statuses/504230941514944512\">August 26, 2014</a></p></blockquote>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 30 Aug 2014 14:58:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"WPTavern: Tickets On Sale For The First Ever PodsCamp\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29485\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4175:\"<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/PodsCampFeaturedImage.png\" rel=\"prettyphoto[29485]\"><img class=\"size-full wp-image-29491\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/PodsCampFeaturedImage.png?resize=697%2C284\" alt=\"The First Ever Podscamp\" /></a>The First Ever PodsCamp\n<p>Tickets are <a title=\"http://podscamp.org/tickets/\" href=\"http://podscamp.org/tickets/\">now on sale</a> for the first ever <a title=\"http://podscamp.org/\" href=\"http://podscamp.org/\">PodsCamp</a>. It&#8217;s being held in Dallas, TX on October 3rd, 2014, a day before <a title=\"http://2014.dfw.wordcamp.org/\" href=\"http://2014.dfw.wordcamp.org/\">WordCamp DFW</a> (Dallas/Fort Worth) with a ticket price of $50 each. Each ticket grants you access to the event, BBQ for lunch, and direct access to the developers of Pods Framework.</p>\n<p>The event will focus on what you can do with Pods and will <a title=\"http://podscamp.org/schedule/\" href=\"http://podscamp.org/schedule/\">feature sessions on topics</a> such as an introduction to Pods, building applications, and a Q&amp;A session with the Pods development team. For those not familiar with the plugin, <a title=\"http://wordpress.org/plugins/pods/\" href=\"http://wordpress.org/plugins/pods/\">Pods</a> is a framework for creating, managing, and deploying customized content types and fields.</p>\n<h2>A First For The Pods Development Team</h2>\n<p>The event will mark the first time the entire Pods development team will be under one roof. Lead developer for Pods, Scott Kingsley Clark, said the team will be in Dallas, TX the Wednesday before WordCamp and will be working on putting the finishing touches on Pods 3.0.</p>\n<p>Clark explains why the team hasn&#8217;t had a PodsCamp in the past. &#8220;We&#8217;ve been talking about and planning an event like this for years, but it wasn&#8217;t until the Pods team grew large enough for me to feel like we could really do something worth people&#8217;s time.&#8221;</p>\n<h2>No Conflicts With WordCamp</h2>\n<p>Initially, I thought PodsCamp was taking place at the same time as WordCamp DFW but since it&#8217;s a day before, it won&#8217;t interfere with the event. &#8220;It&#8217;s completely separate, in terms of organization and funding,&#8221; Clark told the Tavern.</p>\n<p>A few years ago, <a title=\"http://podcamp.pbworks.com/w/page/17344268/FrontPage\" href=\"http://podcamp.pbworks.com/w/page/17344268/FrontPage\">PodCamps</a> would sometimes be merged with a WordCamp to offer attendees a chance to attend two events with one ticket. However, WordCamp central frowns against this practice and now states that WordCamps must be focused on WordPress. From the WordCamp Central FAQ:</p>\n<blockquote><p><strong>Q.</strong> Can I do a track at a BarCamp/PodCamp/other event and call it WordCamp?<br />\n<strong>A.</strong> No. The use of the WordCamp name indicates that it is a standalone event dedicated to WordPress, and to prevent confusion, WordPress “tracks” within larger events such as BarCamp or other conferences are no longer called WordCamps.</p></blockquote>\n<h2>Sponsoring and Needing to Be Sponsored</h2>\n<p>The <a title=\"http://podsfoundation.org/\" href=\"http://podsfoundation.org/\">Pods Foundation</a> is sponsoring the WordCamp DFW Contributor Day on October 5th, through a deal Clark made to secure the same space for both days. At the same time, PodsCamp is in need of more sponsors. If you&#8217;re interested in <a title=\"http://podscamp.org/2014/08/19/call-sponsors/\" href=\"http://podscamp.org/2014/08/19/call-sponsors/\">sponsorship opportunities</a>, please get in touch with the organizing team. SiteGround, Chris Lema, Aesop Interactive, and Beil Media are just a sample of the sponsors already on board with helping the event.</p>\n<p>I think it&#8217;s great to see events like PodsCamp where you can focus on a particular plugin or subject while not conflicting with a WordCamp that same weekend. I like the strategy on the part of Clark and his team for the event to be a day before WordCamp so people can attend both without worrying about missing sessions.</p>\n<p>Will you be attending the first ever PodsCamp?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 29 Aug 2014 22:36:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:30;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"WPTavern: How to Create a Quick Style Guide for Client Websites\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29499\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wptavern.com/how-to-create-a-quick-style-guide-for-client-websites\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3870:\"<p>The business of building WordPress websites is exploding, and most agencies and freelancers have more work than they can handle. Clients are attracted to WordPress because of how easy it is to manage content. In the old days, if you had a website built, you would still need to hire a developer to make updates to your content or design. WordPress makes it possible for anyone to create new posts, pages, products, etc., without any technical experience.</p>\n<p>The flip side of this is that your design may be in danger when everything is so easy to edit. If you want to keep branding consistent across a website, you may need to include a style guide to breakdown the design you&#8217;ve created.</p>\n<p>Having a style guide for reference is especially important if you are passing off a CMS to a client who will be using it to create content on a regular basis. Without a guide your client may go nuts with customization features that may be built into the theme. Before you know it, he will have used 10 different typefaces in various places and multiple header colors and sizes. The beautiful website you created can end up looking like digital goulash in the end, which is no good for your portfolio.</p>\n<p>I&#8217;d like to introduce you to <a href=\"http://stylifyme.com/\" target=\"_blank\">Stylify Me</a>, a handy new tool that can automatically create a quick style guide for any website. Simply enter the site URL and the app will return its background colors, text colors, typography, and image dimensions.</p>\n<p>Here are the colors you get when you input WordPress.org:</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wordpress-styles.jpg\" rel=\"prettyphoto[29499]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wordpress-styles.jpg?resize=982%2C552\" alt=\"wordpress-styles\" class=\"aligncenter size-full wp-image-29504\" /></a></p>\n<p>It also returns the typography and image dimensions found on the homeapage.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wordpress-typography.png\" rel=\"prettyphoto[29499]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wordpress-typography.png?resize=973%2C491\" alt=\"wordpress-typography\" class=\"aligncenter size-full wp-image-29517\" /></a></p>\n<p>The download for your style guide comes in the form of a PDF, a somewhat inconvenient file type that many clients seem to love for whatever reason. Obviously, this is just a quick start which you can further edit and fine tune. Some homepages may not lend themselves as well to demonstrating the site&#8217;s style. In that case you may want to select another content page from which the app can extract styles more representative of the site as a whole.</p>\n<p>The Stylify Me app was built on <a href=\"http://nodejs.org/\" target=\"_blank\">NodeJS</a> and <a href=\"http://phantomjs.org/\" target=\"_blank\">PhantomJS</a>. Its creators, <a href=\"https://twitter.com/annabelleyoon\" target=\"_blank\">Annabelle Yoon</a> and <a href=\"https://twitter.com/MicMro\" target=\"_blank\">Michael Mrowetz</a>, wanted to provide a tool that would allow designers to research sites more efficiently, without having to inspect each element. The app is hosted on <a href=\"http://heroku.com/\" target=\"_blank\">Heroku</a> using the <a href=\"https://github.com/ddollar/heroku-buildpack-multi\" target=\"_blank\">multi buildpack</a> and is MIT-licensed. Check out the code on <a href=\"https://github.com/micmro/Stylify-Me\" target=\"_blank\">GitHub</a> to see how it works.</p>\n<p><a href=\"http://stylifyme.com\" target=\"_blank\">Stylify Me</a> gives you the ability to quickly generate a style guide that will help your clients keep their websites within the realm of the original design. Providing a style guide adds an extra touch, which demonstrates that you care and are invested in your client&#8217;s success.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 29 Aug 2014 22:23:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:31;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Matt: Journalism vs Mass-Media\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44047\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"http://ma.tt/2014/08/journalism-vsmass-media/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:335:\"<p>Matthew Ingram writes for Gigaom: <a href=\"http://gigaom.com/2014/08/26/journalism-is-doing-just-fine-thanks-its-mass-media-business-models-that-are-ailing/\">Journalism is doing just fine, thanks — it’s mass-media business models that are ailing</a>. <cite>Hat tip: <a href=\"http://stratechery.com/\">Ben Thompson</a>.</cite></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 29 Aug 2014 20:52:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:32;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"WPTavern: Nouveau Riche: A Free WordPress Blogging Theme for Creative Minds\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29473\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"http://wptavern.com/nouveau-riche-a-free-wordpress-blogging-theme-for-creative-minds\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3987:\"<p><a href=\"http://fortisthemes.com\" target=\"_blank\">Denis Bosire</a> has been working with WordPress for more than five years. As client work became more frustrating, he decided to focus his attention on WordPress themes. After an unsuccessful attempt to monetize themes at Creative Market, Bosire decided to try his hand at developing themes for WordPress.org. <a href=\"http://wordpress.org/themes/nouveau-riche\" target=\"_blank\">Nouveau Riche</a> was approved this week and is his first theme in the directory.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/nouveau-riche.png\" rel=\"prettyphoto[29473]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/nouveau-riche.png?resize=880%2C660\" alt=\"nouveau-riche\" class=\"aligncenter size-full wp-image-29483\" /></a></p>\n<p>Nouveau Riche is a simple, customizable blogging theme that was designed for creative minds. It offers beautiful support for post formats, with custom icons assigned to each. The theme utilizes the native WordPress customizer to include options for uploading a logo, adding a header and background image, and setting colors for the header, background, and theme.</p>\n<p>The sidebar is hidden by default and slides out when clicked. The theme also includes support for two other widget areas- main footer and sub footer.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/nouveau-riche-sidebar.jpg\" rel=\"prettyphoto[29473]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/nouveau-riche-sidebar.jpg?resize=1025%2C701\" alt=\"nouveau-riche-sidebar\" class=\"aligncenter size-full wp-image-29489\" /></a></p>\n<p>Check out a <a href=\"http://demo.fortisthemes.com/nouveau/\" target=\"_blank\">live demo</a> to see the theme in action.</p>\n<p>Nouveau Riche is based on the <a href=\"http://underscores.me/\" target=\"_blank\">Underscores</a> starter theme. &#8220;I didn&#8217;t use any framework, just _S starter theme, which I use for ALL of my other themes,&#8221; Bosire told the Tavern. &#8220;No CSS framework either; I find them very unsuitable for WordPress themes because of all the bloat. Took me about three days from start to finish and submitted it immediately,&#8221; he said.</p>\n<p>Bosire found that building the theme was easy and quick, because he was used to all the WordPress coding standards after finishing a theme for WordPress.com. His commercial theme is currently undergoing review and should be launching in a few days. He plans to release another free theme in September in addition to another commercial blogging theme that is still in process.</p>\n<p>His journey began when he started offering free themes on his website. &#8220;I started building simple blogging themes and offering them for free on my website,&#8221; Bosire said. &#8220;I then proceeded to build premium themes that I sell on Creative Market. Sadly, they didn&#8217;t sell as expected but I really enjoyed building themes, so I decided to continue doing it, this time for WordPress.org.&#8221;</p>\n<p>Bosire&#8217;s tenacity in continuing theme development after a discouraging experience is admirable. If you build a theme and submit it to one marketplace where it doesn&#8217;t take off, don&#8217;t get discouraged and stop building themes. If you love creating themes for WordPress users, try again via a different distribution route. If you choose to go the WordPress.org route, you&#8217;ll learn quite a bit during the process with the help of <a href=\"http://wptavern.com/a-day-in-the-life-of-a-wordpress-theme-reviewer\" target=\"_blank\">Theme Review Team</a>.</p>\n<p>Nouveau Riche is a beautiful and simple blogging theme that you can personalize in a matter of minutes. It&#8217;s responsive and translation-ready. If your blog needs a fresh design but you don&#8217;t have a lot of time, this might be good option. <a href=\"http://wordpress.org/themes/nouveau-riche\" target=\"_blank\">Download </a> Nouveau Riche for free from WordPress.org.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 29 Aug 2014 20:43:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:33;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"WPTavern: Why You Might Consider Adding Development Hours to Your Changelog\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29275\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"http://wptavern.com/why-you-might-consider-adding-development-hours-to-your-changelog\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3936:\"<p>Jean Galea, who is a member of the <a title=\"https://www.facebook.com/groups/advancedwp/\" href=\"https://www.facebook.com/groups/advancedwp/\">Advanced WordPress group</a> on Facebook, recently shared a plugin with an interesting changelog. It&#8217;s called <a title=\"https://wordpress.org/plugins/bulk-delete\" href=\"https://wordpress.org/plugins/bulk-delete\">Bulk Delete</a> and is developed by Sudar Muthu, a developer based in Bangalore, India. The changelog not only shows which bugs have been fixed or features that were added, it also displays the amount of time spent on each release.</p>\n<a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/BulkDeleteChangelog.png\" rel=\"prettyphoto[29275]\"><img class=\"size-full wp-image-29472\" src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/BulkDeleteChangelog.png?resize=524%2C462\" alt=\"Bulk Delete Changelog On WordPress.org\" /></a>Bulk Delete Changelog On WordPress.org\n<p>Due to some personal things going in his life, Muthu began to track how much time he was investing in his side projects. &#8220;This happened because I got married and suddenly the amount of free time that I used to have in my life started to dry up. I wanted to find out which pet projects are taking up the majority of my free time,&#8221; Muthu Told the Tavern. In April of 2012, <a title=\"http://sudarmuthu.com/blog/started-tracking-time-spend-on-my-pet-projects/\" href=\"http://sudarmuthu.com/blog/started-tracking-time-spend-on-my-pet-projects/\">he wrote about the initiative</a> and started adding the metrics to the changelog of Bulk Delete.</p>\n<a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/BulkDeleteInAction.png\" rel=\"prettyphoto[29275]\"><img class=\"size-full wp-image-29471\" src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/BulkDeleteInAction.png?resize=955%2C655\" alt=\"Bulk Delete Settings Page\" /></a>Bulk Delete Settings Page\n<p>Some plugin authors have funded development of their plugin by having users pay for specific features. Muthu doesn&#8217;t get paid to work on Bulk Delete but he has started to sell <a title=\"http://bulkwp.com/\" href=\"http://bulkwp.com/\">commercial addons</a> for it.</p>\n<h2>A Different Approach to Getting Free Support</h2>\n<p>One of the things Muthu has noticed is how users approach him to receive free support. &#8220;After I started adding the amount of time I am spending on different plugins in the changelog, the way people interact in the support forum seems to have changed a bit. I felt that they were able to understand the amount of time I am investing in developing and supporting a free plugin,&#8221; Muthu said.</p>\n<p>I asked if he thinks this is something other plugin authors should consider implementing. &#8220;Each developer has their own preference but I guess if possible, I would like plugin authors to do this. It seems <a title=\"https://twitter.com/kelter/status/478983307884236801\" href=\"https://twitter.com/kelter/status/478983307884236801\">people like it</a> and it will also let people know how much time an author spends in developing and maintaining a free plugin,&#8221; Muthu said.</p>\n<h2>I Think It&#8217;s a Great Idea</h2>\n<p>As someone who investigates the changelog for every plugin update, I&#8217;ve seen my share of them. However, I&#8217;ve yet to see one that is as detailed and informative as <a title=\"https://wordpress.org/plugins/bulk-delete/changelog/\" href=\"https://wordpress.org/plugins/bulk-delete/changelog/\">Bulk Delete</a>. Showing the amount of time each version takes to develop gives users a perspective of the time and effort required to maintain a plugin. We generally hear how much time is involved, but rarely get to see how much.</p>\n<p>Would you like to see this type of information added to the changelog of more plugins? Will seeing the amount of time change the way you approach the author to receive support? Sound off in the comments.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 29 Aug 2014 19:56:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:34;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:93:\"WPTavern: Google Authorship is Officially Dead, WordPress Authorship Plugins are Now Obsolete\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29438\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:228:\"http://wptavern.com/google-authorship-is-officially-dead-wordpress-authorship-plugins-are-now-obsolete?utm_source=rss&utm_medium=rss&utm_campaign=google-authorship-is-officially-dead-wordpress-authorship-plugins-are-now-obsolete\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4329:\"<p>John Mueller, Webmaster Trends Analyst at Google, <a href=\"https://plus.google.com/u/0/+JohnMueller/posts/HZf3KDP1Dm8\" target=\"_blank\">announced</a> today that Google will be discontinuing its support for authorship in search results.</p>\n<blockquote><p>We&#8217;ve gotten lots of useful feedback from all kinds of webmasters and users, and we&#8217;ve tweaked, updated, and honed recognition and displaying of authorship information. Unfortunately, we&#8217;ve also observed that this information isn’t as useful to our users as we’d hoped, and can even distract from those results. With this in mind, we&#8217;ve made the difficult decision to stop showing authorship in search results.</p></blockquote>\n<p>In June 2014, author photos were <a href=\"http://searchengineland.com/google-plays-authorship-search-results-dropping-profile-image-google-circle-count-195163\" target=\"_blank\">dropped from search results</a> in order to reduce clutter in the design, according to Mueller. Today&#8217;s announcement means that the rel=author markup will no longer be tracked on websites.</p>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2013/09/cutts.jpg\" rel=\"prettyphoto[29438]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2013/09/cutts.jpg?resize=472%2C280\" alt=\"Google authorship in action\" class=\"size-full wp-image-9315\" /></a>Google authorship in action\n<p>Authorship was an experiment that Google had been running for the past three years. Mueller reported that their tests showed that removing authorship generally does not seem to reduce traffic to sites, nor does it make it more likely that users will click on ads. The change was allegedly implemented to improve users&#8217; experience.</p>\n<p>Although the authorship schema is no longer used to identify a post&#8217;s author in search results, Mueller says there&#8217;s no need to be in a rush to remove it from your code. &#8220;We&#8217;re no longer using it for authorship, we treat it like any other markup on your pages. Leaving it is fine, it won&#8217;t cause problems (and perhaps your users appreciate being able to find out more about you through your profile too),&#8221; he said.</p>\n<p>Jetpack 2.5 introduced an easy way for WordPress users to <a href=\"http://wptavern.com/automatically-add-google-authorship-to-wordpress-posts-with-jetpack-2-5\" target=\"_blank\">add authorship to posts</a>. Representatives from the Jetpack team were not immediately available to comment on whether or not the plugin will shed the dead weight of authorship in the next release. There are many other WordPress <a href=\"http://wordpress.org/plugins/search.php?q=google+authorship\" target=\"_blank\">plugins that add Google authorship</a>, though not as elegantly as Jetpack did. Several major SEO plugins also incorporate ways to add authorship to posts. The authorship-related functionality in these plugins is now obsolete.</p>\n<p>Mueller emphasized that even though authorship is being discontinued, Google will continue its support for structured markup:</p>\n<blockquote><p>Going forward, we&#8217;re strongly committed to continuing and expanding our support of structured markup (such as <a href=\"http://schema.org/\" target=\"_blank\">schema.org</a>). This markup helps all search engines better understand the content and context of pages on the web, and we&#8217;ll continue to use it to show rich snippets in search results.</p></blockquote>\n<p>Many SEO specialists have speculated that linking authorship to Google+ profiles was a ploy to get more people to use Google+, a product that has failed to gain momentum. Fans of the authorship feature are baffled by its removal, given that Google&#8217;s research indicates that it doesn&#8217;t seem to affect search results. From a user&#8217;s standpoint, seeing an author you recognize can be tremendously beneficial when selecting among similar search results.</p>\n<p>Google is well known for experimenting with features and products and killing them off as soon as tests show that they are no longer valuable. It&#8217;s not clear whether or not authorship will be reincarnated in some other form down the road. If you&#8217;re using a WordPress plugin that adds authorship to your site for SEO purposes, you are safe to disable it, as Google is no longer interested in that data.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 29 Aug 2014 01:25:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:35;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"WPTavern: ProWordPress Subreddit Passes 1,000 Subscribers\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29393\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:156:\"http://wptavern.com/prowordpress-subreddit-passes-1000-subscribers?utm_source=rss&utm_medium=rss&utm_campaign=prowordpress-subreddit-passes-1000-subscribers\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4264:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/reddit.jpg\" rel=\"prettyphoto[29393]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/reddit.jpg?resize=877%2C399\" alt=\"reddit\" class=\"aligncenter size-full wp-image-29436\" /></a></p>\n<p>Earlier this year we featured the <a href=\"http://www.reddit.com/r/ProWordPress/\" target=\"_blank\">/r/ProWordPress </a> subreddit on a post exploring various <a href=\"http://wptavern.com/add-these-subreddits-to-your-list-of-wordpress-watering-holes\" target=\"_blank\">WordPress watering holes</a>. If you&#8217;re not familiar with subreddits, they are essentially focused topics where where registered users can vote article submissions &#8220;up&#8221; or &#8220;down.&#8221; Subscribing to a subreddit allows you to hone in on specific topics where you have an interest.</p>\n<p>/r/ProWordPress was started by Brad Williams, CEO of <a href=\"http://webdevstudios.com/\" target=\"_blank\">WebDevStudios</a> and author of <a href=\"http://www.amazon.com/Professional-WordPress-Plugin-Development-Williams/dp/0470916222\" target=\"_blank\">Professional WordPress Plugin Development</a>. As a developer, Williams has a strong interest in exploring more technical topics surrounding WordPress. The group recently passed 1,000 subscribers (currently at 1,027 readers) and continues to grow.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/prowordpress-subreddit.png\" rel=\"prettyphoto[29393]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/prowordpress-subreddit.png?resize=743%2C309\" alt=\"prowordpress-subreddit\" class=\"aligncenter size-full wp-image-29421\" /></a></p>\n<p>&#8220;I started the r/ProWordPress subreddit to focus on more advanced WordPress topics,&#8221; Williams told the Tavern.  &#8220;<a href=\"http://www.reddit.com/r/Wordpress\" target=\"_blank\">r/WordPress</a> is great but will always have more beginner users, so it&#8217;s hard for the more advanced topics to surface. <strong>r/ProWordPress is a smaller, more focused subreddit with a focus on advanced WP topics.</strong>&#8221;</p>\n<p>As the subreddit has grown, r/ProWordPress has become one of William&#8217;s main sources of news on WordPress development. More subscribers translates into a wider reach of advanced topics as well as more voting users to curate the quality of articles that float to the top. Williams has the ability to moderate the topics submitted but reports that, unless you have a highly active subreddit, very little work is required.</p>\n<p>With WordPress now powering <a href=\"http://w3techs.com/technologies/overview/content_management/all\" target=\"_blank\">more than 23% of all websites online</a>, the community surrounding the software is growing at breakneck speed. People are working with WordPress every day, building businesses on top of it, and are seeking out places online to learn from each other. Matt Mullenweg recently jumped in on the <a href=\"http://wptavern.com/matt-mullenweg-hosts-impromptu-qa-session-on-facebook\" target=\"_blank\">Advanced WordPress group on Facebook</a>, which has accrued more than 9,000 members. This group explores a wide range of WordPress-related topics but may not appeal to everyone.</p>\n<p>While some WordPress users enjoy interacting on Facebook, others are taking to forums such as <a href=\"http://wptavern.com/wpchat-relaunches-as-a-forum-dedicated-to-wordpress\" target=\"_blank\">WP Chat</a>. Different kinds of groups are popping up, reflecting the various interaction styles that WordPress community members use to connect.</p>\n<p><strong>&#8220;WordPress has such a large user base that it&#8217;s hard to have a one size fits all area for all topics,&#8221;</strong> Williams said. In his corner of the internet, he hopes that /r/ProWordPress will continue to be a nice place to share and read about more advanced topics. In some ways Reddit combines the best aspects of both Twitter and forums, in that you can share articles, vote, and comment to enter into discussions with other members. If advanced WordPress development falls within your wheelhouse, make sure to drop by the <a href=\"http://www.reddit.com/r/ProWordPress/\" target=\"_blank\">/r/ProWordPress </a> subreddit and subscribe to new topics.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Aug 2014 23:15:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:36;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"WPTavern: WP Settings Generator: Quickly Create a Custom Options Page Using the WordPress Settings API\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29385\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:246:\"http://wptavern.com/wp-settings-generator-quickly-create-a-custom-options-page-using-the-wordpress-settings-api?utm_source=rss&utm_medium=rss&utm_campaign=wp-settings-generator-quickly-create-a-custom-options-page-using-the-wordpress-settings-api\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3454:\"<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/switches.png\" rel=\"prettyphoto[29385]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/switches.png?resize=949%2C461\" alt=\"photo credit: Leo Reynolds - cc\" class=\"size-full wp-image-29409\" /></a>photo credit: <a href=\"https://www.flickr.com/photos/lwr/7293237710/\">Leo Reynolds</a> &#8211; <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.0/\">cc</a>\n<p>Yesterday we featured a plugin, created by application developer Jeroen Sormani, that <a href=\"http://wptavern.com/wp-dashboard-notes-clones-google-keep-in-the-wordpress-dashboard\" target=\"_blank\">clones Google Keep functionality in the WordPress dashboard</a>. Sormani has produced a number of other interesting experiment with WordPress, including a little known tool for generating WordPress settings.</p>\n<p>The <a href=\"http://wpsettingsapi.jeroensormani.com/\" target=\"_blank\">WP Settings Generator</a> is a tool for plugin and theme developers. It generates a custom options page that is fully compatible with the <a href=\"http://codex.wordpress.org/Settings_API\" target=\"_blank\">WordPress Settings API</a> standards. The tool is similar to the kinds of generators found at <a href=\"http://generatewp.com/\" target=\"_blank\">GenerateWP</a>, which lacks a tool for creating settings.</p>\n<p>On the config tab you can enter your plugin/theme name, plugin prefix, and text domain. Select your menu position and then proceed to the next tab.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/settings-generator.png\" rel=\"prettyphoto[29385]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/settings-generator.png?resize=730%2C417\" alt=\"settings-generator\" class=\"aligncenter size-full wp-image-29387\" /></a></p>\n<p>The next screen provides a drag-and-drop interface for adding settings fields:</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/settings-fields.png\" rel=\"prettyphoto[29385]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/settings-fields.png?resize=974%2C662\" alt=\"settings-fields\" class=\"aligncenter size-full wp-image-29388\" /></a></p>\n<p>Once you have added all your fields, you will be presented with your customized settings code, which you can scroll through and copy to your plugin. Although it is designed to create settings pages for themes or plugins, the general consensus these days is that it&#8217;s preferable to utilize the native customizer for theme settings.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/the-code.png\" rel=\"prettyphoto[29385]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/the-code.png?resize=974%2C551\" alt=\"the-code\" class=\"aligncenter size-full wp-image-29390\" /></a></p>\n<p>After reviewing your code, you have the opportunity to leave a personalized review of the generator. If you find that the code you receive has any errors or seems off, make sure to let Sormani know with a quick comment.</p>\n<p>Of course, using a settings generator isn&#8217;t going to help you learn how the WordPress Settings API works, but it does give you a quick start for creating options. It&#8217;s not so much of a teaching tool but rather designed to eliminate the rote task of writing your own settings. <a href=\"http://wpsettingsapi.jeroensormani.com/\" target=\"_blank\">Check it out</a> and let us know if it ends up saving you time.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Aug 2014 21:03:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:37;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Matt: Everything Is Bloated\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44042\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://ma.tt/2014/08/everything-isbloated/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:126:\"<p>Tom McFarlin writes <a href=\"http://tommcfarlin.com/everything-is-bloated/\">Everything Is Bloated, Nothing Is Good</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Aug 2014 17:30:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:38;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"WPTavern: An Easy Way To Notify Users When Their Comment Is Approved\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29371\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:180:\"http://wptavern.com/an-easy-way-to-notify-users-when-their-comment-is-approved?utm_source=rss&utm_medium=rss&utm_campaign=an-easy-way-to-notify-users-when-their-comment-is-approved\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2475:\"<p>By default, WordPress doesn&#8217;t notify users when their comments are approved from the moderation queue. If you&#8217;d like to change that, consider using the <a title=\"http://wordpress.org/plugins/comment-approved/\" href=\"http://wordpress.org/plugins/comment-approved/\">Comment Approved</a> plugin by <a title=\"http://media-enzo.nl/\" href=\"http://media-enzo.nl/\">Niels van Renselaar</a>. The plugin is simple to use and configure. After it&#8217;s installed and activated, you&#8217;ll find the settings in <strong>Settings &gt; Comment Approved</strong>. It&#8217;s important to note that even when the plugin is activated, it won&#8217;t send out notifications unless you check mark the box to enable the comment approved message.</p>\n<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/CommentApprovedSettings.png\" rel=\"prettyphoto[29371]\"><img class=\"size-full wp-image-29372\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/CommentApprovedSettings.png?resize=1014%2C561\" alt=\"Click The Checkbox To Enable The Comment Approved Message\" /></a>Click The Checkbox To Enable The Comment Approved Message\n<p>The text area is populated with a default message using the only two shortcodes available. You can customize this message using standard HTML. Here is what the default message looks like in an email.</p>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/CommentApprovedEmailContent.png\" rel=\"prettyphoto[29371]\"><img class=\"size-full wp-image-29373\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/CommentApprovedEmailContent.png?resize=726%2C210\" alt=\"Default Approved Message Email Content\" /></a>Default Approved Message Email Content\n<p>While I like the default behavior to notify users when their comment is approved, you can use this plugin to award first time commenters. For example, you can send them a link to a free eBook or a different promotional item. Once the user&#8217;s comment is approved, they won&#8217;t see the approval message again.</p>\n<p>It&#8217;s strange that comment approval notifications are not part of the default behaviour of WordPress. I think it makes sense, especially if the front-end notifies them that their comment may be held in moderation. While I doubt this plugin will prevent commenters from getting in touch with site administrators to figure out why their comment is not displaying on the site, at least they&#8217;ll know when it&#8217;s approved.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Aug 2014 07:49:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:39;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"WPTavern: Jason Schuller Shares His Experience Running a WordPress Theme Business\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29349\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:206:\"http://wptavern.com/jason-schuller-shares-his-experience-running-a-wordpress-theme-business?utm_source=rss&utm_medium=rss&utm_campaign=jason-schuller-shares-his-experience-running-a-wordpress-theme-business\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4642:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/Press75LogoFeaturedImage.jpg\" rel=\"prettyphoto[29349]\"><img class=\"aligncenter size-full wp-image-15225\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/Press75LogoFeaturedImage.jpg?resize=650%2C200\" alt=\"Press75 Logo Featured Image\" /></a></p>\n<p>Jason Schuller who was the previous owner of <a title=\"http://press75.com/\" href=\"http://press75.com/\">Press75.com</a>, has <a title=\"https://medium.com/@jschuller/a-brief-history-of-a-wordpress-theme-business-3847e16fcba4\" href=\"https://medium.com/@jschuller/a-brief-history-of-a-wordpress-theme-business-3847e16fcba4\">published a great post</a> detailing his experience of running a WordPress commercial theme business from 2008-2014. While Schuller describes a variety of ups and downs he encountered while running the business, I thought his reasoning for losing his way in 2010 was fascinating.</p>\n<blockquote><p>As WordPress became increasingly more complex and option rich, so did the demand for themes. The proverbial “gold rush” of the WordPress world hit and new shops were launching almost weekly with themes that were powered by complex frameworks including endless layout, customization, style options and “shortcodes”. In 2010 I began to focus more on the “bar” that had been set by the market and less on why I started Press75 to begin with.</p></blockquote>\n<p>Instead of continuing to focus on what he was so good at doing, he started developing themes to cater to the market which was outside of his passion. The increase in complexity in WordPress coupled with various development techniques he implemented in his catalog of 20 themes became a huge burden, especially when it came to support. One piece of advice Schuller shares that I think is important and hits home for many commercial theme authors is to <span class=\"pullquote alignleft\">never forget who you are and what your own style is. Be inspired by what others are doing, but always stay true to yourself.</span></p>\n<p>Schuller is not the first person to learn this lesson the hard way. When <a title=\"https://upthemes.com/open-letter/\" href=\"https://upthemes.com/open-letter/\">UpThemes announced</a> a complete restructuring of their theme business in early 2014, they cited poor infrastructure as one of the main culprits of creating a large demand for support.</p>\n<blockquote><p>Building the themes was easy enough, but then selling, deploying, supporting, updating, and generally making a profit on them was something we struggled with, mightily. With every theme, we introduced a ton of new code that had to be supported and maintained. This was at a time when WordPress was still changing the way themes worked. It made development more difficult.</p></blockquote>\n<p>One of the things Schuller wished he had done is to hire the right people once the business became too much to handle. Not doing so put all of the pressure of running the business on his shoulders. In the post, he shares a few other lessons I think aspiring theme shop owners can learn from as well. If you&#8217;d like to hear Schuller tell his story, listen to this <a title=\"http://wptavern.com/interview-with-jason-schuller-founder-of-press75-com\" href=\"http://wptavern.com/interview-with-jason-schuller-founder-of-press75-com\">special interview</a> I did with him early in 2014.</p>\n<div class=\"audio-shortcode-wrap\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/Press75LogoFeaturedImage.jpg?resize=175%2C131\" alt=\"Press75 Logo Featured Image\" class=\"landscape thumbnail post-thumbnail audio-image\" /><!--[if lt IE 9]><script>document.createElement(\'audio\');</script><![endif]-->\n<a href=\"http://wptavern.com/wp-content/uploads/2014/01/Interview-With-Jason-Schuller.mp3\">http://wptavern.com/wp-content/uploads/2014/01/Interview-With-Jason-Schuller.mp3</a></div><div class=\"media-shortcode-extend\"><div class=\"media-info audio-info\"><ul class=\"media-meta\"><li><span class=\"prep\">Run Time</span> <span class=\"data\">50:36</span></li><li><span class=\"prep\">Artist</span> <span class=\"data\">Jeff Chandler</span></li><li><span class=\"prep\">File Name</span> <span class=\"data\"><a href=\"http://wptavern.com/wp-content/uploads/2014/01/Interview-With-Jason-Schuller.mp3\">Interview-With-Jason-Schuller.mp3</a></span></li><li><span class=\"prep\">File Size</span> <span class=\"data\">28.96 MB</span></li><li><span class=\"prep\">File Type</span> <span class=\"data\">MP3</span></li><li><span class=\"prep\">Mime Type</span> <span class=\"data\">audio/mpeg</span></li></ul></div><button class=\"media-info-toggle\">Audio Info</button></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Aug 2014 07:34:54 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:40;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"WPTavern: WPWeekly Episode 160 – The Founder Of BruteProtect, Sam Hotchkiss\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"http://wptavern.com?p=29356&preview_id=29356\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:188:\"http://wptavern.com/wpweekly-episode-160-the-founder-of-bruteprotect-sam-hotchkiss?utm_source=rss&utm_medium=rss&utm_campaign=wpweekly-episode-160-the-founder-of-bruteprotect-sam-hotchkiss\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4191:\"<p>In this weeks show, <a title=\"http://marcuscouch.com/\" href=\"http://marcuscouch.com/\">Marcus Couch</a> and I are joined by the founder of <a title=\"https://bruteprotect.com/\" href=\"https://bruteprotect.com/\">BruteProtect</a>, Sam Hotchkiss. We learn the circumstances which lead to the birth of BruteProtect and how it operates. Hotchkiss explains the details of the <a title=\"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect\" href=\"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect\">acquisition with Automattic</a> and how it will be rolled into Jetpack. While some people are not happy that it&#8217;s being added to Jetpack, we discuss why it&#8217;s a huge win. Last but not least, Hotchkiss explains the process he went through to obtain funding and offers advice to plugin authors who may find themselves in the same position.</p>\n<h2>Stories Discussed:</h2>\n<p><a title=\"http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer\" href=\"http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer\">WordPress 4.0 Adds Custom Icons to the Plugin Installer</a><br />\n<a title=\"http://wptavern.com/wordpress-plugin-wp-inject-renames-to-imageinject-and-introduces-new-features\" href=\"http://wptavern.com/wordpress-plugin-wp-inject-renames-to-imageinject-and-introduces-new-features\">WordPress Plugin WP Inject Renames to ImageInject and Introduces New Features</a><br />\n<a title=\"http://wptavern.com/buddypress-2-1-beta-1-now-available-for-testing\" href=\"http://wptavern.com/buddypress-2-1-beta-1-now-available-for-testing\">BuddyPress 2.1 Beta 1 Now Available for Testing</a><br />\n<a title=\"http://wptavern.com/chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes\" href=\"http://wptavern.com/chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes\">Chris Wiegman on Why He Sold Better WP Security to iThemes</a><br />\n<a title=\"http://wptavern.com/wordpress-4-0-release-candidate-now-available-for-testing\" href=\"http://wptavern.com/wordpress-4-0-release-candidate-now-available-for-testing\">WordPress 4.0 Release Candidate Now Available for Testing</a></p>\n<h2>Plugins Picked By Marcus:</h2>\n<p><a title=\"http://wordpress.org/plugins/wp-admin-quicknav/\" href=\"http://wordpress.org/plugins/wp-admin-quicknav/\">WP Admin Quicknav</a> adds a simple dropdown box at the top admin edit screens allowing you to quickly jump from one page, post, or custom post type to the next without having to return to the respective listing page. This is easily customized and can be really handy for saving time navigating to specific admin pages.</p>\n<p><a title=\"http://wordpress.org/plugins/comment-approved/\" href=\"http://wordpress.org/plugins/comment-approved/\">Comment Approved</a> can be used to notify a user when their comment is approved. This is a great way to keep the communication channel open between you and your loyal readers. You can customize the approval notification enabling you to reward those who participate. This could include an ebook, a link to special content, etc.</p>\n<p><a title=\"http://wordpress.org/plugins/wp-is-mobile-text-widget/\" href=\"http://wordpress.org/plugins/wp-is-mobile-text-widget/\">WP Is Mobile Text Widget</a> adds a text widget that switches the display text using the <em>wp_is_mobile()</em> function depending on whether the device is mobile or not. This is a great enhancement for delivering a simple, custom piece of text content based on the detection of a mobile browser.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, September 3rd 9:30 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href=\"http://www.wptavern.com/feed/podcast\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #160:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 28 Aug 2014 07:30:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:41;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"WPTavern: WP Dashboard Notes Plugin Clones Google Keep in the WordPress Dashboard\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29322\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:192:\"http://wptavern.com/wp-dashboard-notes-clones-google-keep-in-the-wordpress-dashboard?utm_source=rss&utm_medium=rss&utm_campaign=wp-dashboard-notes-clones-google-keep-in-the-wordpress-dashboard\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3991:\"<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/wp-dashboard-notes.jpg\" rel=\"prettyphoto[29322]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/wp-dashboard-notes.jpg?resize=772%2C250\" alt=\"wp-dashboard-notes\" class=\"aligncenter size-full wp-image-29326\" /></a></p>\n<p>Dashboard notes can come in handy when working with multiple people on a WordPress site. Even when working alone, you can use notes to collect ideas for posts or to remind yourself of important publishing-related tasks and ways to promote your posts. While there are many varying plugins devoted to creating sticky notes in the dashboard, the new <a href=\"http://wordpress.org/plugins/wp-dashboard-notes/\" target=\"_blank\">WP Dashboard Notes</a> plugin stands out with an interesting implementation that mirrors Google&#8217;s popular note-taking service.</p>\n<p>Google junkies will notice that the color scheme of the notes is strangely similar to that of Google Keep, if not identical. The note creation and management process is also very similar in that there is no save button for editing and everything is saved automatically in the background.</p>\n<p>WP Dashboard Notes doesn&#8217;t add any admin menus. Once installed, you can create a new note by clicking &#8220;Add Note&#8221; under Screen Options in the upper right corner. After you create your first note, you can add new notes from the black bar within existing notes.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/add-note.png\" rel=\"prettyphoto[29322]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/add-note.png?resize=976%2C291\" alt=\"add-note\" class=\"aligncenter size-full wp-image-29331\" /></a></p>\n<p>A new note pops into your dashboard, which you can now edit and skin with one of the preset colors. Like Google Keep, notes can be set as a single note or a list. Users also have the option to set the visibility to &#8216;Everyone&#8217; or &#8216;Private.&#8217; Here&#8217;s a quick demo:</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wp-dashboard-notes.gif\" rel=\"prettyphoto[29322]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wp-dashboard-notes.gif?resize=578%2C473\" alt=\"wp-dashboard-notes\" class=\"aligncenter size-full wp-image-29333\" /></a></p>\n<p>WP Dashboard Notes contains virtually all the same capabilities of Google Keep, minus the ability to upload images. The plugin&#8217;s features include:</p>\n<ul>\n<li>Colored notes</li>\n<li>List notes or regular notes</li>\n<li>Public or private notes</li>\n<li>Edit on dashboard</li>\n<li>Add as many notes as you like</li>\n<li>Drag and drop list items</li>\n<li>No save button needed</li>\n</ul>\n<p>Multiple notes arranged together create a colorful dashboard full of ideas and users will see public notes upon logging in.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/notes.png\" rel=\"prettyphoto[29322]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/notes.png?resize=1025%2C470\" alt=\"notes\" class=\"aligncenter size-full wp-image-29338\" /></a></p>\n<p>After testing the plugin I found that it was simple and intuitive to use. The plugin, created by application developer <a href=\"http://www.jeroensormani.com/\" target=\"_blank\">Jeroen Sormani</a>, elegantly merges WordPress and Google Keep functionality to create a useful addition to the dashboard.</p>\n<p>You can customize the colors by overriding the plugin&#8217;s CSS from another stylesheet. Additional color palettes and per-user visibility settings might make the plugin even more fun, but for now Sormani has kept it delightfully simple.</p>\n<p>If you need note-taking capabilities for better collaboration in the dashboard, this plugin works as advertised and goes far beyond most other dashboard notes plugins. <a href=\"http://wordpress.org/plugins/wp-dashboard-notes/\" target=\"_blank\">WP Dashboard Notes</a> is available for free from WordPress.org.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 22:41:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:42;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"WPTavern: Matt Mullenweg Hosts Impromptu Q&amp;A Session On Facebook\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29278\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:170:\"http://wptavern.com/matt-mullenweg-hosts-impromptu-qa-session-on-facebook?utm_source=rss&utm_medium=rss&utm_campaign=matt-mullenweg-hosts-impromptu-qa-session-on-facebook\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:7047:\"<p>WordPress co-creator, Matt Mullenweg, stopped by the <a title=\"https://www.facebook.com/groups/advancedwp/\" href=\"https://www.facebook.com/groups/advancedwp/\">Advanced WordPress Facebook group</a> and participated in a WordPress edition of <a title=\"http://www.reddit.com/r/AMA/\" href=\"http://www.reddit.com/r/AMA/\">ask me anything</a>. After receiving a warm welcome from the group, Mullenweg outlined what types of questions he would answer.</p>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/MattMullenwegAdvancedWPFacebookGroup.png\" rel=\"prettyphoto[29278]\"><img class=\"size-full wp-image-29312\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/MattMullenwegAdvancedWPFacebookGroup.png?resize=504%2C233\" alt=\"Rules Of Engagement\" /></a>Rules Of Engagement\n<p>Once the gates were opened, the questions started pouring in. Here are a few of my favorites along with Mullenweg&#8217;s answers.</p>\n<p><strong>What is the most important thing we can do to support and bring value to WordPress?</strong></p>\n<p><em>Everyone really sets their own path. Think about the thing that makes you happiest, what you consider your gift that you can share with the world, or something that you want to learn a lot more about.</em></p>\n<p><strong>What are your thoughts on the businesses and entire industries that are built around WordPress and what opportunities do you see in the future?</strong></p>\n<p><em>I think it&#8217;s awesome there are whole industries built on WordPress, that was part of the idea from very early on. It&#8217;s counter-intuitive, but I actually think one of bigger opportunities is in consulting and building sites right now. WordPress can get people 90% of the way there, but that last 10% represents a lot of opportunity for clients from the Fortune 500 to the smallest personal sites.</em></p>\n<p><strong>I&#8217;m curious about Automattic&#8217;s policy about unlimited vacation days. I have never heard of this policy anywhere else. How does that play out? Seems like such an awesome place to work.</strong></p>\n<p><em>I think open vacation policies are becoming more common, here&#8217;s an article that covers the pros and cons fairly well and says 1% of companies offer them now: <a href=\"http://www.businessinsider.com/pros-and-cons-of-unlimited-vacation-2013-12\" target=\"_blank\" rel=\"nofollow\">The Pros And Cons Of Unlimited Vacation Policies</a></em></p>\n<p><em>I think it really comes down to hiring. With the right people you can have very liberal policies like this because people think about the organization as a whole and do the right thing. If anything we sometimes have to encourage people to take a bit more time off, something I don&#8217;t always set the best example of but I&#8217;m trying this week. I&#8217;ll be completely offline Thursday through Sunday.</em></p>\n<p><strong>Is the Codex really going to disappear eventually?</strong></p>\n<p><em>We&#8217;re not going to take down the Codex until we have something better to replace it. It&#8217;s more likely you&#8217;ll just see more links default to someplace new and Codex traffic will trail off until at some point, we&#8217;ll put it into archive mode.</em></p>\n<p><strong>Do you think now that JSON support in WordPress core is coming, should it be used over RSS for building things like Mobile Apps? What you would recommend?</strong></p>\n<p><em>Whether you use the prototype JSON API or RSS for a mobile app I would say depends a lot on what it does. Think of the JSON API more as replacing XML-RPC.</em></p>\n<p><em>What would be great for everyone is to start to try and build applications on top of the prototype API, and let the team know where you get stuck or find things hard to understand. I&#8217;m extremely anxious to have a cleaner API in core, but I feel strongly that it should remain a plugin until we&#8217;ve built a few independent third-party applications on top of it when it&#8217;s in plugin form, utilizing every aspect of the API, so we know where it works well and where it&#8217;s lacking.</em></p>\n<p><em>This is a lesson I&#8217;ve learned from my experience at Automattic. You can never design a perfect API and anticipate all needs, you really need to use it to solve real problems a few times before you can iterate it to have it be something that works well and that you&#8217;ll want to support for many years to come.</em></p>\n<p>This is just a sample of the questions and answers within the conversation that took place on Facebook. If you want to see the rest of them, you&#8217;ll need to join the<a title=\"https://www.facebook.com/groups/advancedwp/\" href=\"https://www.facebook.com/groups/advancedwp/\"> Advanced WordPress group</a> on Facebook. It&#8217;s free and the moderators are quick to approve new members.</p>\n<h2>I&#8217;d Like To See More Of These Types Of Events</h2>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/bucky-box-opensource-matt-mullenweg.jpg\" rel=\"prettyphoto[29278]\"><img class=\"size-full wp-image-29315\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/bucky-box-opensource-matt-mullenweg.jpg?resize=1025%2C742\" alt=\"Conversation With Matt\" /></a>Image Courtesy of <a title=\"http://blog.buckybox.com/2014/06/opening-up-the-secret-sauce-open-sourcing-bucky-box/\" href=\"http://blog.buckybox.com/2014/06/opening-up-the-secret-sauce-open-sourcing-bucky-box/\">Bucky Box</a>\n<p>This was just a sample of the questions and answers within the conversation. If you want to see the rest of them, you&#8217;ll need to <a title=\"https://www.facebook.com/groups/advancedwp/\" href=\"https://www.facebook.com/groups/advancedwp/\">join the Facebook group</a>. It&#8217;s free and the moderators are quick to approve new members.</p>\n<p>Seeing Mullenweg join the Facebook Group and then participate by answering questions was a shock to me. I know from experience that he likes to hang out where discussions of WordPress are taking place but it&#8217;s rare that I see him participate in the discussions, let alone host an impromptu Q&amp;A session.</p>\n<p>I&#8217;d like to see more of these types of events from Mullenweg whether it be on his blog or through a medium of his choice. Perhaps once a month, he can hold a Q&amp;A session at a different WordPress hangout.</p>\n<p>The community can be a fickle bunch but I think it would be beneficial if he participated in more discussions outside of what&#8217;s going on in core. In <a title=\"http://www.mattcromwell.com/coder-troll-matt-mullenweg-walk-bar/\" href=\"http://www.mattcromwell.com/coder-troll-matt-mullenweg-walk-bar/\">his roundup post</a>, Matt Cromwell hits the nail on the head on what it means to some folks to have a direct conversation with Mullenweg.</p>\n<blockquote><p>I hope Mullenweg drops by again in the future. For him it may have been a quick dip into the WP Community. But for boat loads of WordPress developers, it was the highlight of the week.</p></blockquote>\n<p>Just out of curiosity, if you had one question to ask Mullenweg, what would it be?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 18:52:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:43;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:79:\"Lorelle on WP: Two WordPress College Classes Offered at Clark College This Fall\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"http://lorelle.wordpress.com/?p=11855\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"http://lorelle.wordpress.com/2014/08/27/two-wordpress-college-classes-offered-at-clark-college-this-fall/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:482:\"The WordPress I CTEC 160 courses at Clark College are about to close and there are still seats open in the Monday/Wednesday classes. This fall there are two times to choose from. Days from 1-3:30PM and evenings from 6:30-9PM. The 5-credit course covers the basics of WordPress, from content to design. Much of the classwork [&#8230;]<img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=lorelle.wordpress.com&blog=72&post=11855&subd=lorelle&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 18:08:59 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Lorelle VanFossen\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:44;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"WPTavern: WP Tech Event Will No Longer Be a WordCamp\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29222\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:148:\"http://wptavern.com/wp-tech-event-will-no-longer-be-a-wordcamp?utm_source=rss&utm_medium=rss&utm_campaign=wp-tech-event-will-no-longer-be-a-wordcamp\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:7380:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/07/nantes-featured.jpg\" rel=\"prettyphoto[29222]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/07/nantes-featured.jpg?resize=1025%2C493\" alt=\"nantes-featured\" class=\"aligncenter size-full wp-image-26172\" /></a></p>\n<p>WP Tech is &#8220;breaking up with WordCamp,&#8221; according to co-organizer <a href=\"http://wabeo.fr/\" target=\"_blank\">Willy Bahuaud</a>. The developer-centric event, previously called <a href=\"http://wptavern.com/nantes-france-to-host-a-wordcamp-for-developers-in-november\" target=\"_blank\">WordCamp Nantes WP Tech</a>, is set to be held at the end of November and was welcomed as France&#8217;s second official WordCamp.</p>\n<p>During the course of working with <a href=\"http://central.wordcamp.org/\" target=\"_blank\">WordCamp Central</a>, the organizers decided to opt out of keeping WP Tech under the WordCamp umbrella due to a number of conflicts.</p>\n<p>&#8220;WordCamp Central gave us too many constraints, and we would not have been able to create a great technical event about WordPress,&#8221; co-organizer Daniel Roch told the Tavern. &#8220;It will be an independent WordPress tech event, like other great events such as Pressnomics, WPSessions, WordSesh or WordUps.&#8221;</p>\n<p>The organizing team found that some of the WC Central rules would have forced them to change the core concept of WP Tech. &#8220;In our case, we wanted to hold WP Tech as a national event, inviting speakers from France to a provincial town (Nantes),&#8221; said Bahuaud. However, this poses a problem, as WordCamps are meant to be <a href=\"http://plan.wordcamp.org/planning-details/speakers/\" target=\"_blank\">local events</a> and the majority of speakers have to be from the city where the event takes place.</p>\n<p>The second critical conflict they encountered was regarding speaker expenses. &#8220;We want to cover speakers&#8217;s travel cost. WordCamp central was very firm with this point: we can&#8217;t. The WP Tech team was told that the only people&#8217;s expenses that can be covered are those who appear on the sidebar of <a href=\"http://wordpress.org/about/\" target=\"_blank\">WordPress&#8217; about page</a>.</p>\n<p>&#8220;WC Central&#8217;s position is that traveling to speak at a conference is a legitimate business expense,&#8221; Bahuaud said. &#8220;But we think it&#8217;s not. We believe that if people spent time to prepare a conference, it&#8217;s normal to cover their $200 (on average) travel and accommodation costs.&#8221;</p>\n<p>Additionally, Bahuaud reports that the requirement to use the WordCamp platform for the event&#8217;s website was problematic, since it doesn&#8217;t allow for extensive customization. The event branding requirements were also an issue. Organizers changed the event name to &#8220;WordCamp Nantes WP Tech&#8221; but WC Central required further changes to make it compatible with guidelines.</p>\n<p>&#8220;Four months before the event, rules were still changing and we had to be accountable on each step. It was very frustrating, so we decided to break up with WordCamp, and make our event separate,&#8221; Bahuaud explained.</p>\n<h3>Cultural and Economic Differences Regarding Speaker Travel Guidelines</h3>\n<p><a href=\"https://twitter.com/jennybeaumont\" target=\"_blank\">Jenny Beaumont</a>, a WordPress developer and an active member of the French WordPress community, commented on the conflict with insight on the economic differences experienced by non-US event organizers:</p>\n<blockquote><p>In France, a majority of people in the WordPress community are freelancers, and as such, many of us have a legal status that&#8217;s called an &#8216;auto-entrepreneur&#8217;. It&#8217;s part of what is known as a micro-regime that gives us a tax break on social contributions, which are very imposing here (45% for regular business owners). </p>\n<p>The flip side to this is two-fold: 1) We have a ceiling on earnings, 2) We can&#8217;t deduct expenses. It&#8217;s this last fact that also influences the desire on the part of WordCamp organizers in France to want to reimburse speakers for their travels costs. WordCamp Paris has been doing it for years, though in light of recent events, may be prohibited from doing so in the future.</p></blockquote>\n<p>Whereas Americans are free to deduct work-related travel expenses as a business expense from their taxes, French speakers do not share that same privilege. At this point in time, WC Central guidelines don&#8217;t currently allow for flexibility on the issue of speaker travel, but the guidelines are not written in stone. WordCamp Central is open to further discussion on the matter.</p>\n<p>Andrea Middleton <a href=\"http://make.wordpress.org/community/2014/08/27/speaker-travel-for-wordcamps/\" target=\"_blank\">clarified the issue of speaker travel expenses</a> today on the make.wordpress.org Community blog. She highlighted the importance of WordCamps as local events and how paying for speaker travel costs doesn&#8217;t mesh well with that guideline:</p>\n<blockquote><p>WordCamps are locally-focused, so there’s an inherent disconnect between paying for people from out of town to speak at a WordCamp and that emphasis on local community. Local experts are assets to their communities all year round, whereas visiting speakers don’t typically serve as ongoing resources once they have returned to their home cities.</p></blockquote>\n<p>Middleton suggests the more cost-effective option of utilizing Skype or Google hangouts to pull in out-of-town speakers who are unable to cover their own travel expenses. The idea is that the WordCamp budget can be better used to serve the local community.</p>\n<p><strong>&#8220;A WordCamp’s primary focus is on connecting local community and lifting up local experts, rather than blowing our budgets on flying people around the world when technology can get them there so much faster,&#8221;</strong> she explained.</p>\n<p>Community members who want to advocate a different opinion on the guidelines have the opportunity to do so. Middleton invites discussion in the comments of her <a href=\"http://make.wordpress.org/community/2014/08/27/speaker-travel-for-wordcamps/\" target=\"_blank\">post</a>. She also plans to discuss the issue with contributors at the WordPress Community Summit in October, which will include WordCamp and meetup organizers from around the world. Data from WordCamp San Francisco&#8217;s new <a href=\"http://2014.sf.wordcamp.org/location/travel-assistance/\" target=\"_blank\">travel assistance program</a> may also factor into the discussion.</p>\n<p>Not every WordPress event has to be a WordCamp. It&#8217;s not a failure on the part of the organizers or WC Central if there are irreconcilable differences. If an event finds the WordCamp guidelines to be too problematic, organizers can host it as an independent event. WC Central exists to nurture local pockets of WordPress enthusiasm, but not every event will share that mission. There&#8217;s no mandate that all WordPress events have to be WordCamps and many successful events run outside of that umbrella.</p>\n<p>Do you think the economic differences in other countries are an influencing factor regarding the creation of new WordCamps? Should cultural and economic differences come into play when it comes to officially-sanctioned WordCamp events?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 17:11:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:45;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Matt: How The Sun Sees You\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44036\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://ma.tt/2014/08/how-the-sun-seesyou/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:243:\"<p><span class=\"embed-youtube\"></span></p>\n<p>This video really makes you want to wear sunblock, something I haven&#8217;t been as good about this week. (Sorry Mom!) <cite>Hat tip: <a href=\"http://www.sararosso.com/\">Sara Rosso</a>.</cite></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 17:00:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:46;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"WPTavern: WordPress 4.0 Release Candidate Now Available for Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29281\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:178:\"http://wptavern.com/wordpress-4-0-release-candidate-now-available-for-testing?utm_source=rss&utm_medium=rss&utm_campaign=wordpress-4-0-release-candidate-now-available-for-testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2011:\"<p><a href=\"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/\" target=\"_blank\">WordPress 4.0 RC 1</a> is now available for download. Helen Hou-Sandí announced the release candidate today with an update to the <a href=\"http://make.wordpress.org/core/version-4-0-project-schedule/\" target=\"_blank\">project schedule</a>. The official release was targeted for the week of August 25th but will likely be arriving the following week.</p>\n<p><strong>&#8220;We hope to ship WordPress 4.0 <em>next week</em>, but we need your help to get there. If you haven’t tested 4.0 yet, there’s no time like the present,&#8221;</strong> Hou-Sandí said in the release announcement.</p>\n<p>The easiest way to test RC1 is to put the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\" target=\"_blank\">WordPress Beta Tester</a> plugin on a test site and start running through all the <a href=\"http://wptavern.com/preview-wordpress-4-0-features-beta-1-now-available-for-testing\" target=\"_blank\">new features</a>, many of which are highlighted on the 4.0 about page in the admin (wp-admin/about.php). If you want a more in-depth look at the new features, Hou-Sandí <a href=\"http://wptavern.com/helen-hou-sandi-previews-wordpress-4-0-at-nyc-meetup\" target=\"_blank\">previewed WordPress 4.0</a> at a recent NYC Meetup and you can watch the video.</p>\n<p>The good news is that plugin and theme authors still have plenty of time to test their extensions against the release candidate for compatibility. Since <a href=\"http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer\" target=\"_blank\">WordPress 4.0 adds icons to the admin plugin installer</a>, plugin developers will want to put their custom icons in place to improve visibility among all the auto-generated ones.</p>\n<p>Over the past month of four beta releases, WordPress 4.0 has incorporated hundreds of fixes and refinements that make it truly a joy to use. Watch for the official release to drop sometime next week.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 16:06:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:47;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"Dev Blog: WordPress 4.0 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3287\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2126:\"<p>The first release candidate for WordPress 4.0 is now available!</p>\n<p>In RC 1, we’ve made refinements to what we&#8217;ve been working on for this release. Check out the <a href=\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">Beta 1 announcement post</a> for more details on those features. We hope to ship WordPress 4.0 <em>next week</em>, but we need your help to get there. If you haven’t tested 4.0 yet, there’s no time like the present. (Please, not on a production site, unless you’re adventurous.)</p>\n<p><strong>Think you’ve found a bug? </strong>Please post to the <a href=\"http://wordpress.org/support/forum/alphabeta/\">Alpha/Beta area in the support forums</a>. If any known issues come up, you’ll be able to <a href=\"http://core.trac.wordpress.org/report/5\">find them here</a>.</p>\n<p>To test WordPress 4.0 RC1, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-4.0-RC1.zip\">download the release candidate here</a> (zip). If you’d like to learn more about what’s new in WordPress 4.0, visit the awesome About screen in your dashboard (<strong><img src=\"http://i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692\" alt=\"\" width=\"16\" height=\"16\" /> → About</strong> in the toolbar).</p>\n<p><strong>Developers,</strong> please test your plugins and themes against WordPress 4.0 and update your plugin&#8217;s <em>Tested up to</em> version in the readme to 4.0 before next week. If you find compatibility problems, please be sure to post any issues to the support forums so we can figure those out before the final release. You also may want to <a href=\"http://make.wordpress.org/core/2014/08/21/introducing-plugin-icons-in-the-plugin-installer/\">give your plugin an icon</a>, which we launched last week and will appear in the dashboard along with banners.</p>\n<p><em>It is almost time</em><br />\n<em> For the 4.0 release</em><br />\n<em> And its awesomeness</em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 12:20:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:48;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"WPTavern: Menu Humility: A Plugin to Put Plugins in Their Place\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29253\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:168:\"http://wptavern.com/menu-humility-a-plugin-to-put-plugins-in-their-place?utm_source=rss&utm_medium=rss&utm_campaign=menu-humility-a-plugin-to-put-plugins-in-their-place\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2017:\"<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/menu-humility.png\" rel=\"prettyphoto[29253]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/menu-humility.png?resize=772%2C250\" alt=\"menu-humility\" class=\"aligncenter size-full wp-image-29256\" /></a></p>\n<p>Giving a plugin a top level admin menu between Dashboard and Posts is somewhat frowned upon among WordPress plugin developers. Although the <a href=\"http://codex.wordpress.org/Administration_Menus\" target=\"_blank\">Administration Menus</a> section of the WordPress codex doesn&#8217;t outright forbid top level menus above Posts, plugin authors are strongly encouraged to consider placing their plugin&#8217;s menu underneath an existing WordPress top-level menu.</p>\n<p>Nevertheless, many plugins assume a higher level of importance by placing their admin menus above WordPress&#8217; core publishing features such as Posts, Comments, and Media. Jetpack is a prime example. As useful as the plugin is, its settings menu is not something that most users need to access more often than posts or comments.</p>\n<p>That&#8217;s why WordPress lead developer Mark Jaquith created <a href=\"http://wordpress.org/plugins/menu-humility/\" target=\"_blank\">Menu Humility</a>, a plugin that reassigns the menu location for errant menu items. For example, if you use it on a site with Jetpack installed, it will put its admin menu at the very bottom below Settings.</p>\n<p>Menu Humility is not a new plugin. In fact, it&#8217;s three years old &#8211; ancient in WordPress years. After testing the plugin today, I found that it&#8217;s still effective at stripping plugins of their assumed preeminence in the admin.</p>\n<p>The bottom line is that most plugins don&#8217;t require top billing. If you feel that a top level menu item constitutes a plugin getting too big for its britches, then install the <a href=\"http://wordpress.org/plugins/menu-humility/\" target=\"_blank\">Menu Humility</a> plugin to bring it back down to its place.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 04:10:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:49;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"WPTavern: Chris Wiegman on Why He Sold Better WP Security to iThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29247\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:180:\"http://wptavern.com/chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes?utm_source=rss&utm_medium=rss&utm_campaign=chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4755:\"<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2013/12/chriswiegman.jpg\" rel=\"prettyphoto[29247]\"><img class=\"size-full wp-image-12530\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2013/12/chriswiegman.jpg?resize=250%2C250\" alt=\"WordPress Security Expert Chris Wiegman\" /></a>WordPress Security Expert Chris Wiegman\n<p>If you&#8217;ve ever wondered why Chris Wiegman sold Better WP Security to iThemes, he <a title=\"http://www.chriswiegman.com/2014/08/sold-better-wp-security/\" href=\"http://www.chriswiegman.com/2014/08/sold-better-wp-security/\">answers the question</a> in a post on his personal site. The birth of Better WP Security started off as a mixture of features from several of his favorite security plugins. &#8220;I started mashing together features of some of the plugins I liked while adding in some of the functionality we wanted as a department (like &#8216;Away mode&#8217;) to produce something that I could manage myself and would make sure I kept off of anyone’s radar by not being hacked,&#8221; Wiegman said.</p>\n<p>Wiegman goes on to describe the success the plugin had and how much money he was making in donations. At the peak of its popularity, it was downloaded over 1M times with $20,000 earned in donations. This prompted Wiegman to create a premium support channel. &#8220;It was so big I was no longer able to keep up and had to implement premium support only for folks who needed it. This was a new revenue stream and the first official revenue stream for the plugin.&#8221; The surge of popularity came at a time when Wiegman was teaching and reviewing books for APress. This severely limited the amount of time he had available to develop new features.</p>\n<h2>iThemes Enters The Picture</h2>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2013/10/ithemeslogo2.jpg\" rel=\"prettyphoto[29247]\"><img class=\"alignright size-full wp-image-10776\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2013/10/ithemeslogo2.jpg?resize=255%2C53\" alt=\"iThemes logo 2\" /></a>One day, the founder of iThemes, Cory Miller, reached out to Wiegman for support after he was locked out of his site. &#8220;What started out as a rather simple conversation quickly lead to something more. I realized that the medicine the project needed to get off life support wasn’t necessarily something I needed to provide myself but could in fact come in the form of selling the plugin to a group who had the resources to make more of it,&#8221; Wiegman said.</p>\n<p>According to the post, he reached out to a few other groups but stuck with iThemes because they had products that complimented a security plugin such as BackupBuddy and Exchange. Better WP Security was <a title=\"http://wptavern.com/ithemes-acquires-better-wp-security-plugin-and-hires-wordpress-security-expert-chris-wiegman\" href=\"http://wptavern.com/ithemes-acquires-better-wp-security-plugin-and-hires-wordpress-security-expert-chris-wiegman\">sold to iThemes on December 1st, 2013</a> and renamed to <a title=\"https://wordpress.org/plugins/better-wp-security/\" href=\"https://wordpress.org/plugins/better-wp-security/\">iThemes Security</a>. As part of the deal, Wiegman joined iThemes as a full-time employee to continue developing iThemes Security.</p>\n<h2>Not Every Plugin Has a Happy Ending</h2>\n<p>What I like most about Wiegman&#8217;s story is how a simple idea turns into a solid product. I think a lot of WordPress plugins are created because they scratch an itch or solve a problem. The plugin&#8217;s creator usually submits the plugin to the directory with a mindset that it can help others as well. Since WordPress is used on <a title=\"http://w3techs.com/\" href=\"http://w3techs.com/\">23% of the web</a>, there&#8217;s a good chance that a plugin distributed through the directory will help more than one person.</p>\n<p>While Wiegman&#8217;s tale has a happy ending, so many plugins never reach the type of adoption of Better WP Security. In fact, quite a few end up in a <a title=\"http://wptavern.com/could-wordpress-plugin-adoption-lower-the-rate-of-abandonment\" href=\"http://wptavern.com/could-wordpress-plugin-adoption-lower-the-rate-of-abandonment\">graveyard of abandonment</a> for any number of reasons. If you find yourself in this situation, read our guide on <a title=\"http://wptavern.com/how-to-adopt-a-plugin-or-put-it-up-for-adoption\" href=\"http://wptavern.com/how-to-adopt-a-plugin-or-put-it-up-for-adoption\">how to adopt a plugin and put one up for adoption.</a> It could end up being the next Better WP Security or <a title=\"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect\" href=\"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect\">BruteProtect</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 03:55:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:10:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Sun, 07 Sep 2014 18:09:10 GMT\";s:12:\"content-type\";s:8:\"text/xml\";s:14:\"content-length\";s:6:\"239343\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:13:\"last-modified\";s:29:\"Sun, 07 Sep 2014 18:00:13 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 250\";s:13:\"accept-ranges\";s:5:\"bytes\";}s:5:\"build\";s:14:\"20140611021551\";}','no'),(4867,'_transient_timeout_feed_mod_867bd5c64f85878d03a060509cd2f92c','1410156551','no'),(4868,'_transient_feed_mod_867bd5c64f85878d03a060509cd2f92c','1410113351','no'),(4869,'_transient_timeout_feed_b9388c83948825c1edaef0d856b7b109','1410156551','no'),(4870,'_transient_feed_b9388c83948825c1edaef0d856b7b109','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n	\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:72:\"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"WordPress Plugins » View: Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"http://wordpress.org/plugins/browse/popular/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"WordPress Plugins » View: Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 07 Sep 2014 18:01:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://bbpress.org/?v=1.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Contact Form 7\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"http://wordpress.org/plugins/contact-form-7/#post-2141\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Aug 2007 12:45:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"2141@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Just another contact form plugin. Simple but flexible.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Takayuki Miyoshi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Akismet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"http://wordpress.org/plugins/akismet/#post-15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:11:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"15@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"Akismet checks your comments against the Akismet Web service to see if they look like spam or not.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Google XML Sitemaps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://wordpress.org/plugins/google-sitemap-generator/#post-132\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:31:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"132@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"This plugin will generate a special XML sitemap which will help search engines to better index your blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"arnee\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"WordPress SEO by Yoast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"http://wordpress.org/plugins/wordpress-seo/#post-8321\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 Jan 2009 20:34:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"8321@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:131:\"Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using Yoast&#039;s WordPress SEO plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"All in One SEO Pack\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"http://wordpress.org/plugins/all-in-one-seo-pack/#post-753\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Mar 2007 20:08:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"753@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:126:\"All in One SEO Pack is a WordPress SEO plugin to automatically optimize your WordPress blog for Search Engines such as Google.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"uberdose\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Wordfence Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"http://wordpress.org/plugins/wordfence/#post-29832\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 04 Sep 2011 03:13:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"29832@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:137:\"Wordfence Security is a free enterprise class security and performance plugin that makes your site up to 50 times faster and more secure.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Wordfence\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Jetpack by WordPress.com\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"http://wordpress.org/plugins/jetpack/#post-23862\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Jan 2011 02:21:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"23862@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"Supercharge your WordPress site with powerful features previously only available to WordPress.com users.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Tim Moore\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Google Analytics by Yoast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"http://wordpress.org/plugins/google-analytics-for-wordpress/#post-2316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2007 12:15:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"2316@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:124:\"Track your WordPress site easily with the latest tracking codes and lots added data for search result pages and error pages.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"MailPoet Newsletters\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/plugins/wysija-newsletters/#post-32629\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 02 Dec 2011 17:09:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"32629@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"Send newsletters, post notifications or autoresponders from WordPress easily, and beautifully.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"MailPoet Staff\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"TinyMCE Advanced\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://wordpress.org/plugins/tinymce-advanced/#post-2082\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Jun 2007 15:00:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"2082@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"Enables the advanced features of TinyMCE, the WordPress WYSIWYG editor.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Andrew Ozz\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WordPress Importer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/plugins/wordpress-importer/#post-18101\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 17:42:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"18101@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"Import posts, pages, comments, custom fields, categories, tags and more from a WordPress export file.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Brian Colinger\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"WPtouch Mobile Plugin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"http://wordpress.org/plugins/wptouch/#post-5468\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 May 2008 04:58:09 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"5468@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"Create a slick mobile WordPress website with just a few clicks.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"BraveNewCode Inc.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"WP-PageNavi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"http://wordpress.org/plugins/wp-pagenavi/#post-363\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 23:17:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"363@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"Adds a more advanced paging navigation interface.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Lester Chan\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"ManageWP Worker\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"http://wordpress.org/plugins/worker/#post-24528\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 18 Feb 2011 13:06:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"24528@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:93:\"ManageWP Worker plugin allows you to remotely manage your WordPress sites from one dashboard.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Vladimir Prelovac\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"NextGEN Gallery\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"http://wordpress.org/plugins/nextgen-gallery/#post-1169\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 23 Apr 2007 20:08:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"1169@http://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:121:\"The most popular WordPress gallery plugin and one of the most popular plugins of all time with over 10 million downloads.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Alex Rabe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:45:\"http://wordpress.org/plugins/rss/view/popular\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:8:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Sun, 07 Sep 2014 18:09:11 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:13:\"last-modified\";s:29:\"Thu, 02 Aug 2007 12:45:03 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 250\";}s:5:\"build\";s:14:\"20140611021551\";}','no'),(4871,'_transient_timeout_feed_mod_b9388c83948825c1edaef0d856b7b109','1410156551','no'),(4872,'_transient_feed_mod_b9388c83948825c1edaef0d856b7b109','1410113351','no'),(4873,'_transient_timeout_plugin_slugs','1410199751','no'),(4874,'_transient_plugin_slugs','a:9:{i:0;s:19:\"akismet/akismet.php\";i:1;s:26:\"custom-field-suite/cfs.php\";i:2;s:32:\"disqus-comment-system/disqus.php\";i:3;s:45:\"enable-media-replace/enable-media-replace.php\";i:4;s:9:\"hello.php\";i:5;s:37:\"post-types-order/post-types-order.php\";i:6;s:39:\"search-everything/search-everything.php\";i:7;s:39:\"syntaxhighlighter/syntaxhighlighter.php\";i:8;s:53:\"velvet-blues-update-urls/velvet-blues-update-urls.php\";}','no'),(4875,'_transient_timeout_dash_4077549d03da2e451c8b5f002294ff51','1410156551','no'),(4876,'_transient_dash_4077549d03da2e451c8b5f002294ff51','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'http://wordpress.org/news/2014/09/benny/\'>WordPress 4.0 “Benny”</a> <span class=\"rss-date\">September 4, 2014</span><div class=\"rssSummary\">Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader Benny Goodman, is available for download or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we’ve put a little extra polish into it. This release brings you a smoother writing and management experience […]</div></li></ul></div><div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'http://ma.tt/2014/09/top-bottomline/\' title=\'Somebody once told me, “Manage the top line, and the bottom line will follow.” What’s the top line? It’s things like, why are we doing this in the first place? What’s our strategy? What are customers saying? How responsive are we? Do we have the best products and the best people? Those are the kind of questions you have to focus on. — Steve Jobs\'>Matt: Top &amp; Bottom Line</a></li><li><a class=\'rsswidget\' href=\'http://wptavern.com/wordpress-theme-review-team-to-launch-mentoring-program\' title=\'The WordPress.org Theme Review Team put out a call for mentors this week. The team will be launching a mentoring program that will pair new reviewers with those who have experience. “We are looking for currently active reviewers who want to give back to the community, of course, and to teach the next generation of theme reviewers,” Jose Castaneda said in the\'>WPTavern: WordPress Theme Review Team to Launch Mentoring Program</a></li><li><a class=\'rsswidget\' href=\'http://wptavern.com/flywheel-hosting-secures-1-2m-in-funding\' title=\'At this time last year, Flywheel Hosting opened its doors to the public. Today, the company announced it has secured $1.2M in seed funding. The round was led by Linseed Capital, with participation from the Nebraska Angels, Ludlow Ventures out of Detroit, Lightbank and Hyde Park Venture Partners out of Chicago, and Rose Paul Ventures out of NYC. Flywheel will\'>WPTavern: Flywheel Hosting Secures $1.2M In Funding</a></li></ul></div><div class=\"rss-widget\"><ul><li class=\'dashboard-news-plugin\'><span>Popular Plugin:</span> <a href=\'http://wordpress.org/plugins/worker/\' class=\'dashboard-news-plugin-link\'>ManageWP Worker</a>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=worker&amp;_wpnonce=1e29bb3beb&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'ManageWP Worker\'>Install</a>)</span></li></ul></div>','no'),(4883,'_site_transient_timeout_theme_roots','1410115333','yes'),(4884,'_site_transient_theme_roots','a:4:{s:12:\"the_societea\";s:7:\"/themes\";s:14:\"twentyfourteen\";s:7:\"/themes\";s:14:\"twentythirteen\";s:7:\"/themes\";s:12:\"twentytwelve\";s:7:\"/themes\";}','yes');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=4807 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (2,4,'_edit_last','1'),(3,4,'_wp_page_template','home.php'),(4,4,'_edit_lock','1408455945:1'),(5,6,'_edit_last','1'),(6,6,'_edit_lock','1402031384:1'),(7,6,'_wp_page_template','about.php'),(8,8,'_edit_last','1'),(9,8,'_edit_lock','1402442057:1'),(10,8,'cfs_fields','a:2:{i:0;a:8:{s:2:\"id\";s:1:\"1\";s:4:\"name\";s:12:\"header_image\";s:5:\"label\";s:12:\"Header Image\";s:4:\"type\";s:4:\"file\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:0;s:7:\"options\";a:2:{s:12:\"return_value\";s:3:\"url\";s:8:\"required\";s:1:\"0\";}}i:1;a:8:{s:2:\"id\";s:2:\"16\";s:4:\"name\";s:9:\"post_type\";s:5:\"label\";s:9:\"Post Type\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:1;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}}'),(11,8,'cfs_rules','a:1:{s:14:\"page_templates\";a:2:{s:8:\"operator\";s:2:\"==\";s:6:\"values\";a:2:{i:0;s:9:\"posts.php\";i:1;s:10:\"skills.php\";}}}'),(12,8,'cfs_extras','a:3:{s:5:\"order\";s:1:\"0\";s:7:\"context\";s:6:\"normal\";s:11:\"hide_editor\";s:1:\"0\";}'),(13,9,'_wp_attached_file','2014/06/beer-header.jpg'),(14,9,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:400;s:4:\"file\";s:23:\"2014/06/beer-header.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:23:\"beer-header-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"beer-header-300x80.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:80;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:24:\"beer-header-1024x273.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:273;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(16,10,'_edit_last','1'),(17,10,'_wp_page_template','default'),(18,10,'_edit_lock','1402464867:1'),(19,13,'_edit_last','1'),(20,13,'_wp_page_template','skills.php'),(21,13,'_edit_lock','1408407333:1'),(24,16,'_edit_last','1'),(25,16,'_wp_page_template','posts.php'),(26,16,'_edit_lock','1406558153:1'),(27,18,'_menu_item_type','post_type'),(28,18,'_menu_item_menu_item_parent','0'),(29,18,'_menu_item_object_id','4'),(30,18,'_menu_item_object','page'),(31,18,'_menu_item_target',''),(32,18,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(33,18,'_menu_item_xfn',''),(34,18,'_menu_item_url',''),(35,18,'_menu_item_orphaned','1401770143'),(36,19,'_menu_item_type','post_type'),(37,19,'_menu_item_menu_item_parent','0'),(38,19,'_menu_item_object_id','6'),(39,19,'_menu_item_object','page'),(40,19,'_menu_item_target',''),(41,19,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(42,19,'_menu_item_xfn',''),(43,19,'_menu_item_url',''),(44,19,'_menu_item_orphaned','1401770143'),(45,20,'_menu_item_type','post_type'),(46,20,'_menu_item_menu_item_parent','0'),(47,20,'_menu_item_object_id','16'),(48,20,'_menu_item_object','page'),(49,20,'_menu_item_target',''),(50,20,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(51,20,'_menu_item_xfn',''),(52,20,'_menu_item_url',''),(53,20,'_menu_item_orphaned','1401770143'),(54,21,'_menu_item_type','post_type'),(55,21,'_menu_item_menu_item_parent','0'),(56,21,'_menu_item_object_id','13'),(57,21,'_menu_item_object','page'),(58,21,'_menu_item_target',''),(59,21,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(60,21,'_menu_item_xfn',''),(61,21,'_menu_item_url',''),(62,21,'_menu_item_orphaned','1401770143'),(63,22,'_menu_item_type','post_type'),(64,22,'_menu_item_menu_item_parent','0'),(65,22,'_menu_item_object_id','4'),(66,22,'_menu_item_object','page'),(67,22,'_menu_item_target',''),(68,22,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(69,22,'_menu_item_xfn',''),(70,22,'_menu_item_url',''),(71,22,'_menu_item_orphaned','1401770143'),(72,23,'_menu_item_type','post_type'),(73,23,'_menu_item_menu_item_parent','0'),(74,23,'_menu_item_object_id','10'),(75,23,'_menu_item_object','page'),(76,23,'_menu_item_target',''),(77,23,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(78,23,'_menu_item_xfn',''),(79,23,'_menu_item_url',''),(80,23,'_menu_item_orphaned','1401770143'),(81,24,'_menu_item_type','post_type'),(82,24,'_menu_item_menu_item_parent','0'),(83,24,'_menu_item_object_id','4'),(84,24,'_menu_item_object','page'),(85,24,'_menu_item_target',''),(86,24,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(87,24,'_menu_item_xfn',''),(88,24,'_menu_item_url',''),(89,24,'_menu_item_orphaned','1401770285'),(90,25,'_menu_item_type','post_type'),(91,25,'_menu_item_menu_item_parent','0'),(92,25,'_menu_item_object_id','6'),(93,25,'_menu_item_object','page'),(94,25,'_menu_item_target',''),(95,25,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(96,25,'_menu_item_xfn',''),(97,25,'_menu_item_url',''),(99,26,'_menu_item_type','post_type'),(100,26,'_menu_item_menu_item_parent','0'),(101,26,'_menu_item_object_id','16'),(102,26,'_menu_item_object','page'),(103,26,'_menu_item_target',''),(104,26,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(105,26,'_menu_item_xfn',''),(106,26,'_menu_item_url',''),(108,27,'_menu_item_type','post_type'),(109,27,'_menu_item_menu_item_parent','0'),(110,27,'_menu_item_object_id','13'),(111,27,'_menu_item_object','page'),(112,27,'_menu_item_target',''),(113,27,'_menu_item_classes','a:1:{i:0;s:15:\"nav-call-action\";}'),(114,27,'_menu_item_xfn',''),(115,27,'_menu_item_url',''),(117,28,'_menu_item_type','post_type'),(118,28,'_menu_item_menu_item_parent','0'),(119,28,'_menu_item_object_id','4'),(120,28,'_menu_item_object','page'),(121,28,'_menu_item_target',''),(122,28,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(123,28,'_menu_item_xfn',''),(124,28,'_menu_item_url',''),(125,28,'_menu_item_orphaned','1401770285'),(135,30,'_edit_last','1'),(136,30,'_edit_lock','1405377117:1'),(137,30,'_wp_page_template','posts.php'),(138,32,'_menu_item_type','post_type'),(139,32,'_menu_item_menu_item_parent','0'),(140,32,'_menu_item_object_id','30'),(141,32,'_menu_item_object','page'),(142,32,'_menu_item_target',''),(143,32,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(144,32,'_menu_item_xfn',''),(145,32,'_menu_item_url',''),(148,6,'header_image','9'),(149,35,'_wp_attached_file','2014/06/stockvault-atlantic-sunset135250.jpg'),(150,35,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:1000;s:4:\"file\";s:44:\"2014/06/stockvault-atlantic-sunset135250.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"stockvault-atlantic-sunset135250-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"stockvault-atlantic-sunset135250-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:45:\"stockvault-atlantic-sunset135250-1024x682.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:682;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";d:22;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:12:\"Canon EOS 7D\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:2:\"12\";s:3:\"iso\";s:3:\"100\";s:13:\"shutter_speed\";s:3:\"0.5\";s:5:\"title\";s:0:\"\";}}'),(153,37,'_edit_last','1'),(154,37,'_edit_lock','1402367051:1'),(155,37,'cfs_fields','a:10:{i:0;a:8:{s:2:\"id\";s:1:\"7\";s:4:\"name\";s:12:\"project_type\";s:5:\"label\";s:12:\"Project Type\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:0;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:1;a:8:{s:2:\"id\";s:1:\"6\";s:4:\"name\";s:9:\"languages\";s:5:\"label\";s:9:\"Languages\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:1;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:2;a:8:{s:2:\"id\";s:1:\"8\";s:4:\"name\";s:4:\"role\";s:5:\"label\";s:4:\"Role\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:2;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:3;a:8:{s:2:\"id\";s:1:\"9\";s:4:\"name\";s:4:\"link\";s:5:\"label\";s:4:\"Link\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:3;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:4;a:8:{s:2:\"id\";i:10;s:4:\"name\";s:7:\"company\";s:5:\"label\";s:7:\"Company\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:4;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:5;a:8:{s:2:\"id\";i:11;s:4:\"name\";s:12:\"company_link\";s:5:\"label\";s:12:\"Company Link\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:5;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:6;a:8:{s:2:\"id\";s:1:\"2\";s:4:\"name\";s:11:\"screenshots\";s:5:\"label\";s:11:\"Screenshots\";s:4:\"type\";s:4:\"loop\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:6;s:7:\"options\";a:3:{s:11:\"row_display\";s:1:\"0\";s:9:\"row_label\";s:22:\"Screenshot - {caption}\";s:12:\"button_label\";s:7:\"Add Row\";}}i:7;a:8:{s:2:\"id\";s:1:\"3\";s:4:\"name\";s:9:\"thumbnail\";s:5:\"label\";s:9:\"Thumbnail\";s:4:\"type\";s:4:\"file\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:2;s:6:\"weight\";i:7;s:7:\"options\";a:2:{s:12:\"return_value\";s:3:\"url\";s:8:\"required\";s:1:\"0\";}}i:8;a:8:{s:2:\"id\";s:1:\"4\";s:4:\"name\";s:5:\"image\";s:5:\"label\";s:5:\"Image\";s:4:\"type\";s:4:\"file\";s:5:\"notes\";s:10:\"Real Image\";s:9:\"parent_id\";i:2;s:6:\"weight\";i:8;s:7:\"options\";a:2:{s:12:\"return_value\";s:3:\"url\";s:8:\"required\";s:1:\"0\";}}i:9;a:8:{s:2:\"id\";s:1:\"5\";s:4:\"name\";s:7:\"caption\";s:5:\"label\";s:7:\"Caption\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:2;s:6:\"weight\";i:9;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}}'),(156,37,'cfs_rules','a:1:{s:10:\"post_types\";a:2:{s:8:\"operator\";s:2:\"==\";s:6:\"values\";a:1:{i:0;s:7:\"project\";}}}'),(157,37,'cfs_extras','a:3:{s:5:\"order\";s:1:\"0\";s:7:\"context\";s:6:\"normal\";s:11:\"hide_editor\";s:1:\"0\";}'),(158,38,'_edit_last','1'),(159,38,'_edit_lock','1408399762:1'),(160,39,'_wp_attached_file','2014/06/th-77nrg.png'),(161,39,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:447;s:4:\"file\";s:20:\"2014/06/th-77nrg.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-77nrg-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-77nrg-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(162,40,'_wp_attached_file','2014/06/th-baton.png'),(163,40,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:450;s:4:\"file\";s:20:\"2014/06/th-baton.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-baton-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-baton-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(164,41,'_wp_attached_file','2014/06/th-carnegie-chart.png'),(165,41,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:451;s:6:\"height\";i:451;s:4:\"file\";s:29:\"2014/06/th-carnegie-chart.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"th-carnegie-chart-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"th-carnegie-chart-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(166,42,'_wp_attached_file','2014/06/th-enviro.png'),(167,42,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:448;s:4:\"file\";s:21:\"2014/06/th-enviro.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-enviro-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-enviro-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(168,43,'_wp_attached_file','2014/06/th-soundingboard.png'),(169,43,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:447;s:4:\"file\";s:28:\"2014/06/th-soundingboard.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-soundingboard-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-soundingboard-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(170,44,'_wp_attached_file','2014/06/th-tea-chart.png'),(171,44,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:448;s:4:\"file\";s:24:\"2014/06/th-tea-chart.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:24:\"th-tea-chart-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:24:\"th-tea-chart-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(172,45,'_wp_attached_file','2014/06/th-tea-timers.png'),(173,45,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:451;s:6:\"height\";i:449;s:4:\"file\";s:25:\"2014/06/th-tea-timers.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:25:\"th-tea-timers-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:25:\"th-tea-timers-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(174,46,'_wp_attached_file','2014/06/th-tle.png'),(175,46,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:452;s:4:\"file\";s:18:\"2014/06/th-tle.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:18:\"th-tle-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:18:\"th-tle-298x300.png\";s:5:\"width\";i:298;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(200,47,'_wp_attached_file','2014/06/big-77-1.jpg'),(201,47,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:663;s:4:\"file\";s:20:\"2014/06/big-77-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-1-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-1-1024x565.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:565;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(202,48,'_wp_attached_file','2014/06/big-77-2.jpg'),(203,48,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:662;s:4:\"file\";s:20:\"2014/06/big-77-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-2-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-2-1024x564.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:564;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(204,49,'_wp_attached_file','2014/06/big-77-3.jpg'),(205,49,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:662;s:4:\"file\";s:20:\"2014/06/big-77-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-3-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-3-1024x564.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:564;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(206,50,'_wp_attached_file','2014/06/big-77-4.jpg'),(207,50,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:664;s:4:\"file\";s:20:\"2014/06/big-77-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-4-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-4-1024x566.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:566;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(208,51,'_wp_attached_file','2014/06/big-tle-1.jpg'),(209,51,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:760;s:4:\"file\";s:21:\"2014/06/big-tle-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"big-tle-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-tle-1-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:22:\"big-tle-1-1024x648.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:648;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(210,52,'_wp_attached_file','2014/06/big-tle-2.jpg'),(211,52,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:759;s:4:\"file\";s:21:\"2014/06/big-tle-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"big-tle-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-tle-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:22:\"big-tle-2-1024x647.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:647;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(212,53,'_wp_attached_file','2014/06/big-tle-3.jpg'),(213,53,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:756;s:4:\"file\";s:21:\"2014/06/big-tle-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"big-tle-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-tle-3-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:22:\"big-tle-3-1024x645.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:645;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(214,54,'_wp_attached_file','2014/06/big-tle-4.jpg'),(215,54,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:756;s:4:\"file\";s:21:\"2014/06/big-tle-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"big-tle-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-tle-4-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:22:\"big-tle-4-1024x645.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:645;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(216,55,'_wp_attached_file','2014/06/th-77-1.jpg'),(217,55,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:221;s:4:\"file\";s:19:\"2014/06/th-77-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-1-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(218,56,'_wp_attached_file','2014/06/th-77-2.jpg'),(219,56,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:221;s:4:\"file\";s:19:\"2014/06/th-77-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-2-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(220,57,'_wp_attached_file','2014/06/th-77-3.jpg'),(221,57,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:221;s:4:\"file\";s:19:\"2014/06/th-77-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-3-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(222,58,'_wp_attached_file','2014/06/th-77-4.jpg'),(223,58,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:221;s:4:\"file\";s:19:\"2014/06/th-77-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-4-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(226,60,'_wp_attached_file','2014/06/th-tle-2.jpg'),(227,60,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:20:\"2014/06/th-tle-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-tle-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-tle-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(228,61,'_wp_attached_file','2014/06/th-tle-3.jpg'),(229,61,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:252;s:4:\"file\";s:20:\"2014/06/th-tle-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-tle-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-tle-3-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(230,62,'_wp_attached_file','2014/06/th-tle-4.jpg'),(231,62,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:252;s:4:\"file\";s:20:\"2014/06/th-tle-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-tle-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-tle-4-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(244,63,'_edit_last','1'),(245,63,'_edit_lock','1408399696:1'),(403,64,'_edit_last','1'),(404,64,'_edit_lock','1408399706:1'),(429,65,'_edit_last','1'),(430,65,'_edit_lock','1408399721:1'),(437,66,'_edit_last','1'),(438,66,'_edit_lock','1402207887:1'),(445,67,'_edit_last','1'),(446,67,'_edit_lock','1408400264:1'),(465,68,'_edit_last','1'),(466,68,'_edit_lock','1408399747:1'),(473,69,'_edit_last','1'),(474,69,'_edit_lock','1408400342:1'),(481,70,'_edit_last','1'),(482,70,'_edit_lock','1408400531:1'),(489,71,'_edit_last','1'),(490,71,'_edit_lock','1408400324:1'),(497,72,'_wp_attached_file','2014/06/big-77-responsive.jpg'),(498,72,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:770;s:6:\"height\";i:1372;s:4:\"file\";s:29:\"2014/06/big-77-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-77-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-77-responsive-168x300.jpg\";s:5:\"width\";i:168;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:30:\"big-77-responsive-574x1024.jpg\";s:5:\"width\";i:574;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(499,73,'_wp_attached_file','2014/06/big-es-responsive.jpg'),(500,73,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:628;s:4:\"file\";s:29:\"2014/06/big-es-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-es-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-es-responsive-191x300.jpg\";s:5:\"width\";i:191;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(501,74,'_wp_attached_file','2014/06/th-77-responsive.jpg'),(502,74,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:649;s:4:\"file\";s:28:\"2014/06/th-77-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-77-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-77-responsive-184x300.jpg\";s:5:\"width\";i:184;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(523,76,'_wp_attached_file','2014/06/big-tle-responsive.jpg'),(524,76,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:763;s:6:\"height\";i:1200;s:4:\"file\";s:30:\"2014/06/big-tle-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:30:\"big-tle-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:30:\"big-tle-responsive-190x300.jpg\";s:5:\"width\";i:190;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:31:\"big-tle-responsive-651x1024.jpg\";s:5:\"width\";i:651;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(545,78,'_wp_attached_file','2014/06/big-bt-1.jpg'),(546,78,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:860;s:4:\"file\";s:20:\"2014/06/big-bt-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-bt-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-bt-1-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-bt-1-1024x733.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:733;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(547,79,'_wp_attached_file','2014/06/big-bt-2.jpg'),(548,79,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:860;s:4:\"file\";s:20:\"2014/06/big-bt-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-bt-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-bt-2-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-bt-2-1024x733.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:733;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(549,80,'_wp_attached_file','2014/06/big-bt-3.jpg'),(550,80,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:863;s:4:\"file\";s:20:\"2014/06/big-bt-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-bt-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-bt-3-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-bt-3-1024x736.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:736;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(551,81,'_wp_attached_file','2014/06/big-bt-4.jpg'),(552,81,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:661;s:4:\"file\";s:20:\"2014/06/big-bt-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-bt-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-bt-4-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-bt-4-1024x564.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:564;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(553,82,'_wp_attached_file','2014/06/big-cc-1.jpg'),(554,82,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:887;s:4:\"file\";s:20:\"2014/06/big-cc-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-cc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-cc-1-300x221.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:221;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-cc-1-1024x756.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:756;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(555,83,'_wp_attached_file','2014/06/big-cc-2.jpg'),(556,83,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:887;s:4:\"file\";s:20:\"2014/06/big-cc-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-cc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-cc-2-300x221.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:221;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-cc-2-1024x756.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:756;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(557,84,'_wp_attached_file','2014/06/big-cc-3.jpg'),(558,84,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:889;s:4:\"file\";s:20:\"2014/06/big-cc-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-cc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-cc-3-300x222.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:222;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-cc-3-1024x758.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:758;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(559,85,'_wp_attached_file','2014/06/big-cc-responsive.jpg'),(560,85,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:534;s:6:\"height\";i:1000;s:4:\"file\";s:29:\"2014/06/big-cc-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-cc-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-cc-responsive-160x300.jpg\";s:5:\"width\";i:160;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(561,86,'_wp_attached_file','2014/06/big-es-1.jpg'),(562,86,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:865;s:4:\"file\";s:20:\"2014/06/big-es-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-es-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-es-1-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-es-1-1024x738.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:738;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(563,87,'_wp_attached_file','2014/06/big-es-2.jpg'),(564,87,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:866;s:4:\"file\";s:20:\"2014/06/big-es-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-es-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-es-2-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-es-2-1024x738.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:738;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(565,88,'_wp_attached_file','2014/06/big-es-3.jpg'),(566,88,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:866;s:4:\"file\";s:20:\"2014/06/big-es-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-es-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-es-3-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-es-3-1024x738.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:738;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(567,89,'_wp_attached_file','2014/06/th-baton1.png'),(568,89,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:450;s:4:\"file\";s:21:\"2014/06/th-baton1.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-baton1-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-baton1-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(569,90,'_wp_attached_file','2014/06/th-bt-1.jpg'),(570,90,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:287;s:4:\"file\";s:19:\"2014/06/th-bt-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-bt-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-bt-1-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(571,91,'_wp_attached_file','2014/06/th-bt-2.jpg'),(572,91,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:287;s:4:\"file\";s:19:\"2014/06/th-bt-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-bt-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-bt-2-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(573,92,'_wp_attached_file','2014/06/th-bt-3.jpg'),(574,92,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:288;s:4:\"file\";s:19:\"2014/06/th-bt-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-bt-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-bt-3-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(575,93,'_wp_attached_file','2014/06/th-bt-4.jpg'),(576,93,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:220;s:4:\"file\";s:19:\"2014/06/th-bt-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-bt-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-bt-4-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(577,94,'_wp_attached_file','2014/06/th-cc-1.jpg'),(578,94,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:296;s:4:\"file\";s:19:\"2014/06/th-cc-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-cc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-cc-1-300x222.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:222;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(579,95,'_wp_attached_file','2014/06/th-cc-2.jpg'),(580,95,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:296;s:4:\"file\";s:19:\"2014/06/th-cc-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-cc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-cc-2-300x222.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:222;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(581,96,'_wp_attached_file','2014/06/th-cc-3.jpg'),(582,96,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:296;s:4:\"file\";s:19:\"2014/06/th-cc-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-cc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-cc-3-300x222.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:222;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(585,98,'_wp_attached_file','2014/06/th-es-1.jpg'),(586,98,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:288;s:4:\"file\";s:19:\"2014/06/th-es-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-es-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-es-1-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(587,99,'_wp_attached_file','2014/06/th-es-2.jpg'),(588,99,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:289;s:4:\"file\";s:19:\"2014/06/th-es-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-es-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-es-2-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(589,100,'_wp_attached_file','2014/06/th-es-3.jpg'),(590,100,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:289;s:4:\"file\";s:19:\"2014/06/th-es-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-es-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-es-3-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(627,66,'project_type','Web Application'),(628,66,'languages','Ruby on Rails, Javascript, PostgreSQL'),(629,66,'role','Developer'),(630,66,'link','https://batonapp.com/'),(631,66,'company','Brightbit'),(632,66,'company_link','http://brightbit.com/'),(633,66,'thumbnail','90'),(634,66,'image','78'),(635,66,'caption','Home Page (No Icons)'),(636,66,'thumbnail','91'),(637,66,'image','79'),(638,66,'caption','Index View (No Icons)'),(639,66,'thumbnail','92'),(640,66,'image','80'),(641,66,'caption','Show View (No Icons)'),(642,66,'thumbnail','93'),(643,66,'image','81'),(644,66,'caption','Edit View (No Icons)'),(663,101,'_wp_attached_file','2014/06/big-kk-1.jpg'),(664,101,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:863;s:4:\"file\";s:20:\"2014/06/big-kk-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-kk-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-kk-1-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-kk-1-1024x736.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:736;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(665,102,'_wp_attached_file','2014/06/big-kk-2.jpg'),(666,102,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:759;s:4:\"file\";s:20:\"2014/06/big-kk-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-kk-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-kk-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-kk-2-1024x647.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:647;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(667,103,'_wp_attached_file','2014/06/big-kk-3.jpg'),(668,103,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:353;s:4:\"file\";s:20:\"2014/06/big-kk-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-kk-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"big-kk-3-300x88.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:88;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-kk-3-1024x301.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:301;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(669,104,'_wp_attached_file','2014/06/big-kk-4.jpg'),(670,104,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:483;s:4:\"file\";s:20:\"2014/06/big-kk-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-kk-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-kk-4-300x120.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:120;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-kk-4-1024x412.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:412;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(671,105,'_wp_attached_file','2014/06/big-mc-1.jpg'),(672,105,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:545;s:4:\"file\";s:20:\"2014/06/big-mc-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-mc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-mc-1-300x136.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:136;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-mc-1-1024x465.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:465;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(673,106,'_wp_attached_file','2014/06/big-mc-2.jpg'),(674,106,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:443;s:4:\"file\";s:20:\"2014/06/big-mc-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-mc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-mc-2-300x110.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:110;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-mc-2-1024x378.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:378;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(675,107,'_wp_attached_file','2014/06/big-sb-1.jpg'),(676,107,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:760;s:4:\"file\";s:20:\"2014/06/big-sb-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-sb-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-sb-1-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-sb-1-1024x648.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:648;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(677,108,'_wp_attached_file','2014/06/big-sb-2.jpg'),(678,108,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:764;s:4:\"file\";s:20:\"2014/06/big-sb-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-sb-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-sb-2-300x191.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:191;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-sb-2-1024x651.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:651;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(679,109,'_wp_attached_file','2014/06/big-sb-3.jpg'),(680,109,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:762;s:4:\"file\";s:20:\"2014/06/big-sb-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-sb-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-sb-3-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-sb-3-1024x650.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:650;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(681,110,'_wp_attached_file','2014/06/big-tc-1.jpg'),(682,110,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:823;s:4:\"file\";s:20:\"2014/06/big-tc-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tc-1-300x205.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:205;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tc-1-1024x702.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:702;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(683,111,'_wp_attached_file','2014/06/big-tc-2.jpg'),(684,111,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:819;s:4:\"file\";s:20:\"2014/06/big-tc-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tc-2-300x204.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:204;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tc-2-1024x698.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:698;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(685,112,'_wp_attached_file','2014/06/big-tc-3.jpg'),(686,112,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:822;s:4:\"file\";s:20:\"2014/06/big-tc-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tc-3-300x205.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:205;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tc-3-1024x701.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:701;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(687,113,'_wp_attached_file','2014/06/big-tc-responsive.jpg'),(688,113,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1090;s:6:\"height\";i:1484;s:4:\"file\";s:29:\"2014/06/big-tc-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-tc-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-tc-responsive-220x300.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:30:\"big-tc-responsive-752x1024.jpg\";s:5:\"width\";i:752;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(689,114,'_wp_attached_file','2014/06/big-tt-1.jpg'),(690,114,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:760;s:4:\"file\";s:20:\"2014/06/big-tt-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tt-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tt-1-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tt-1-1024x648.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:648;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(691,115,'_wp_attached_file','2014/06/big-tt-2.jpg'),(692,115,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:758;s:4:\"file\";s:20:\"2014/06/big-tt-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tt-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tt-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tt-2-1024x646.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:646;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(693,116,'_wp_attached_file','2014/06/big-tt-3.jpg'),(694,116,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:755;s:4:\"file\";s:20:\"2014/06/big-tt-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tt-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tt-3-300x188.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:188;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tt-3-1024x644.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:644;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(695,117,'_wp_attached_file','2014/06/big-tt-responsive.jpg'),(696,117,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:790;s:6:\"height\";i:1478;s:4:\"file\";s:29:\"2014/06/big-tt-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-tt-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-tt-responsive-160x300.jpg\";s:5:\"width\";i:160;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:30:\"big-tt-responsive-547x1024.jpg\";s:5:\"width\";i:547;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(697,118,'_wp_attached_file','2014/06/th-kk-1.jpg'),(698,118,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:288;s:4:\"file\";s:19:\"2014/06/th-kk-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-kk-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-kk-1-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(699,119,'_wp_attached_file','2014/06/th-kk-2.jpg'),(700,119,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:19:\"2014/06/th-kk-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-kk-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-kk-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(701,120,'_wp_attached_file','2014/06/th-kk-3.jpg'),(702,120,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:118;s:4:\"file\";s:19:\"2014/06/th-kk-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-kk-3-150x118.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:118;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:18:\"th-kk-3-300x88.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:88;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(703,121,'_wp_attached_file','2014/06/th-kk-4.jpg'),(704,121,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:161;s:4:\"file\";s:19:\"2014/06/th-kk-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-kk-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-kk-4-300x120.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:120;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(705,122,'_wp_attached_file','2014/06/th-mc-1.jpg'),(706,122,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:182;s:4:\"file\";s:19:\"2014/06/th-mc-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-mc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-mc-1-300x136.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:136;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(707,123,'_wp_attached_file','2014/06/th-mc-2.jpg'),(708,123,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:148;s:4:\"file\";s:19:\"2014/06/th-mc-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-mc-2-150x148.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:148;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-mc-2-300x111.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:111;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(709,124,'_wp_attached_file','2014/06/th-sb-1.jpg'),(710,124,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:19:\"2014/06/th-sb-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-sb-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-sb-1-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(711,125,'_wp_attached_file','2014/06/th-sb-2.jpg'),(712,125,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:255;s:4:\"file\";s:19:\"2014/06/th-sb-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-sb-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-sb-2-300x191.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:191;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(713,126,'_wp_attached_file','2014/06/th-sb-3.jpg'),(714,126,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:254;s:4:\"file\";s:19:\"2014/06/th-sb-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-sb-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-sb-3-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(715,127,'_wp_attached_file','2014/06/th-tc-1.jpg'),(716,127,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:274;s:4:\"file\";s:19:\"2014/06/th-tc-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tc-1-300x205.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:205;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(717,128,'_wp_attached_file','2014/06/th-tc-2.jpg'),(718,128,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:273;s:4:\"file\";s:19:\"2014/06/th-tc-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tc-2-300x204.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:204;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(719,129,'_wp_attached_file','2014/06/th-tc-3.jpg'),(720,129,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:274;s:4:\"file\";s:19:\"2014/06/th-tc-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tc-3-300x205.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:205;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(721,130,'_wp_attached_file','2014/06/th-tc-responsive.jpg'),(722,130,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:545;s:4:\"file\";s:28:\"2014/06/th-tc-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-tc-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-tc-responsive-220x300.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(723,131,'_wp_attached_file','2014/06/th-tt-1.jpg'),(724,131,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:19:\"2014/06/th-tt-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tt-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tt-1-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(725,132,'_wp_attached_file','2014/06/th-tt-2.jpg'),(726,132,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:19:\"2014/06/th-tt-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tt-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tt-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(727,133,'_wp_attached_file','2014/06/th-tt-3.jpg'),(728,133,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:252;s:4:\"file\";s:19:\"2014/06/th-tt-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tt-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tt-3-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(729,134,'_wp_attached_file','2014/06/th-tt-responsive.jpg'),(730,134,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:748;s:4:\"file\";s:28:\"2014/06/th-tt-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-tt-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-tt-responsive-160x300.jpg\";s:5:\"width\";i:160;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(839,135,'_wp_attached_file','2014/06/th-cc-responsive.jpg'),(840,135,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:350;s:6:\"height\";i:655;s:4:\"file\";s:28:\"2014/06/th-cc-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-cc-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-cc-responsive-160x300.jpg\";s:5:\"width\";i:160;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(841,136,'_wp_attached_file','2014/06/th-es-responsive.jpg'),(842,136,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:350;s:6:\"height\";i:549;s:4:\"file\";s:28:\"2014/06/th-es-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-es-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-es-responsive-191x300.jpg\";s:5:\"width\";i:191;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(843,137,'_wp_attached_file','2014/06/th-tle-1.jpg'),(844,137,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:20:\"2014/06/th-tle-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-tle-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-tle-1-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(845,138,'_wp_attached_file','2014/06/th-tle-responsive.jpg'),(846,138,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:350;s:6:\"height\";i:550;s:4:\"file\";s:29:\"2014/06/th-tle-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"th-tle-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"th-tle-responsive-190x300.jpg\";s:5:\"width\";i:190;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(901,139,'_edit_last','1'),(902,139,'_edit_lock','1402276997:1'),(903,139,'cfs_fields','a:4:{i:0;a:8:{s:2:\"id\";s:2:\"12\";s:4:\"name\";s:8:\"projects\";s:5:\"label\";s:8:\"Projects\";s:4:\"type\";s:4:\"loop\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:0;s:7:\"options\";a:3:{s:11:\"row_display\";s:1:\"0\";s:9:\"row_label\";s:17:\"Project - {label}\";s:12:\"button_label\";s:7:\"Add Row\";}}i:1;a:8:{s:2:\"id\";s:2:\"13\";s:4:\"name\";s:9:\"thumbnail\";s:5:\"label\";s:9:\"Thumbnail\";s:4:\"type\";s:4:\"file\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:12;s:6:\"weight\";i:1;s:7:\"options\";a:2:{s:12:\"return_value\";s:3:\"url\";s:8:\"required\";s:1:\"0\";}}i:2;a:8:{s:2:\"id\";s:2:\"14\";s:4:\"name\";s:5:\"label\";s:5:\"label\";s:5:\"Label\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:12;s:6:\"weight\";i:2;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:3;a:8:{s:2:\"id\";s:2:\"15\";s:4:\"name\";s:3:\"url\";s:5:\"label\";s:3:\"URL\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:12;s:6:\"weight\";i:3;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}}'),(904,139,'cfs_rules','a:1:{s:14:\"page_templates\";a:2:{s:8:\"operator\";s:2:\"==\";s:6:\"values\";a:1:{i:0;s:8:\"home.php\";}}}'),(905,139,'cfs_extras','a:3:{s:5:\"order\";s:1:\"0\";s:7:\"context\";s:6:\"normal\";s:11:\"hide_editor\";s:1:\"0\";}'),(936,140,'_wp_attached_file','2014/06/stockvault-dramatic-landscape106482.jpg'),(937,140,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:1000;s:4:\"file\";s:47:\"2014/06/stockvault-dramatic-landscape106482.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:47:\"stockvault-dramatic-landscape106482-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"stockvault-dramatic-landscape106482-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:48:\"stockvault-dramatic-landscape106482-1024x682.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:682;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";d:4.9000000000000004;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:5:\"E5600\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:4:\"5.69\";s:3:\"iso\";s:2:\"50\";s:13:\"shutter_speed\";s:18:\"0.0022805017103763\";s:5:\"title\";s:0:\"\";}}'),(940,141,'_wp_attached_file','2014/06/stockvault-path-in-nature124348.jpg'),(941,141,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:800;s:4:\"file\";s:43:\"2014/06/stockvault-path-in-nature124348.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:43:\"stockvault-path-in-nature124348-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:43:\"stockvault-path-in-nature124348-300x160.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:160;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:44:\"stockvault-path-in-nature124348-1024x546.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:546;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(946,142,'_edit_last','1'),(947,142,'_edit_lock','1402366993:1'),(954,30,'header_image','35'),(955,30,'post_type','project'),(956,145,'_wp_attached_file','2014/06/stockvault-cabot-trail-hdr133670.jpg'),(957,145,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:800;s:4:\"file\";s:44:\"2014/06/stockvault-cabot-trail-hdr133670.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"stockvault-cabot-trail-hdr133670-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"stockvault-cabot-trail-hdr133670-300x160.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:160;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:45:\"stockvault-cabot-trail-hdr133670-1024x546.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:546;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(966,150,'_edit_last','1'),(967,150,'_edit_lock','1402369491:1'),(968,150,'cfs_fields','a:6:{i:0;a:8:{s:2:\"id\";s:2:\"17\";s:4:\"name\";s:10:\"categories\";s:5:\"label\";s:10:\"Categories\";s:4:\"type\";s:4:\"loop\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:0;s:7:\"options\";a:3:{s:11:\"row_display\";s:1:\"0\";s:9:\"row_label\";s:24:\"Skill - {category_title}\";s:12:\"button_label\";s:12:\"Add Category\";}}i:1;a:8:{s:2:\"id\";s:2:\"18\";s:4:\"name\";s:14:\"category_title\";s:5:\"label\";s:14:\"Category Title\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:17;s:6:\"weight\";i:1;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:2;a:8:{s:2:\"id\";s:2:\"22\";s:4:\"name\";s:5:\"color\";s:5:\"label\";s:5:\"Color\";s:4:\"type\";s:5:\"color\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:17;s:6:\"weight\";i:2;s:7:\"options\";a:1:{s:8:\"required\";s:1:\"0\";}}i:3;a:8:{s:2:\"id\";s:2:\"19\";s:4:\"name\";s:6:\"skills\";s:5:\"label\";s:6:\"Skills\";s:4:\"type\";s:4:\"loop\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:17;s:6:\"weight\";i:3;s:7:\"options\";a:3:{s:11:\"row_display\";s:1:\"0\";s:9:\"row_label\";s:31:\"Skill - {skill} - {percentage}%\";s:12:\"button_label\";s:9:\"Add Skill\";}}i:4;a:8:{s:2:\"id\";s:2:\"20\";s:4:\"name\";s:5:\"skill\";s:5:\"label\";s:5:\"Skill\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:19;s:6:\"weight\";i:4;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:5;a:8:{s:2:\"id\";s:2:\"21\";s:4:\"name\";s:10:\"percentage\";s:5:\"label\";s:10:\"Percentage\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:19;s:6:\"weight\";i:5;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}}'),(969,150,'cfs_rules','a:1:{s:14:\"page_templates\";a:2:{s:8:\"operator\";s:2:\"==\";s:6:\"values\";a:1:{i:0;s:10:\"skills.php\";}}}'),(970,150,'cfs_extras','a:3:{s:5:\"order\";s:1:\"0\";s:7:\"context\";s:6:\"normal\";s:11:\"hide_editor\";s:1:\"0\";}'),(1271,151,'_menu_item_type','custom'),(1272,151,'_menu_item_menu_item_parent','0'),(1273,151,'_menu_item_object_id','151'),(1274,151,'_menu_item_object','custom'),(1275,151,'_menu_item_target',''),(1276,151,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(1277,151,'_menu_item_xfn',''),(1278,151,'_menu_item_url','http://thesocietea.org/resume'),(1821,154,'_edit_last','1'),(1822,154,'_edit_lock','1409319062:1'),(1957,158,'_edit_last','1'),(1958,158,'_edit_lock','1403184805:1'),(1963,167,'_edit_last','1'),(1964,167,'_edit_lock','1404151981:1'),(2385,172,'_edit_last','1'),(2386,172,'_edit_lock','1409793896:1'),(2387,172,'_syntaxhighlighter_encoded','1'),(2774,74,'_edit_lock','1405377184:1'),(2775,206,'_wp_attached_file','2014/07/big-json-1.jpg'),(2776,206,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:720;s:6:\"height\";i:276;s:4:\"file\";s:22:\"2014/07/big-json-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-json-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-json-1-300x115.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:115;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2777,207,'_wp_attached_file','2014/07/big-json-2.jpg'),(2778,207,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:870;s:6:\"height\";i:212;s:4:\"file\";s:22:\"2014/07/big-json-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-json-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-json-2-300x73.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:73;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2779,208,'_wp_attached_file','2014/07/big-json-3.jpg'),(2780,208,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:334;s:4:\"file\";s:22:\"2014/07/big-json-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-json-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-json-3-300x83.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:83;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-json-3-1024x285.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:285;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2781,209,'_wp_attached_file','2014/07/big-json-4.jpg'),(2782,209,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:770;s:6:\"height\";i:808;s:4:\"file\";s:22:\"2014/07/big-json-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-json-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-json-4-285x300.jpg\";s:5:\"width\";i:285;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2783,210,'_wp_attached_file','2014/07/th-json-1.jpg'),(2784,210,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:153;s:4:\"file\";s:21:\"2014/07/th-json-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-json-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-json-1-300x114.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:114;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2785,211,'_wp_attached_file','2014/07/th-json-2.jpg'),(2786,211,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:657;s:6:\"height\";i:160;s:4:\"file\";s:21:\"2014/07/th-json-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-json-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-json-2-300x73.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:73;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2787,212,'_wp_attached_file','2014/07/th-json-3.jpg'),(2788,212,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:575;s:6:\"height\";i:160;s:4:\"file\";s:21:\"2014/07/th-json-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-json-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-json-3-300x83.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:83;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2789,213,'_wp_attached_file','2014/07/th-json-4.jpg'),(2790,213,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:420;s:4:\"file\";s:21:\"2014/07/th-json-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-json-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-json-4-285x300.jpg\";s:5:\"width\";i:285;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2791,214,'_edit_last','1'),(2792,214,'_edit_lock','1408399735:1'),(2811,215,'_wp_attached_file','2014/07/big-77-1.jpg'),(2812,215,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:686;s:4:\"file\";s:20:\"2014/07/big-77-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-1-300x171.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:171;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-1-1024x585.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:585;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2813,216,'_wp_attached_file','2014/07/big-77-responsive.jpg'),(2814,216,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:794;s:6:\"height\";i:1288;s:4:\"file\";s:29:\"2014/07/big-77-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-77-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-77-responsive-184x300.jpg\";s:5:\"width\";i:184;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:30:\"big-77-responsive-631x1024.jpg\";s:5:\"width\";i:631;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2815,217,'_wp_attached_file','2014/07/th-77-1.jpg'),(2816,217,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:229;s:4:\"file\";s:19:\"2014/07/th-77-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-1-300x171.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:171;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2817,218,'_wp_attached_file','2014/07/th-77-responsive.jpg'),(2818,218,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:649;s:4:\"file\";s:28:\"2014/07/th-77-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-77-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-77-responsive-184x300.jpg\";s:5:\"width\";i:184;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2861,220,'_edit_last','1'),(2862,220,'_edit_lock','1408729445:1'),(2863,220,'_syntaxhighlighter_encoded','1'),(2864,226,'_wp_attached_file','2014/07/vim_tutor.jpg'),(2865,226,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:500;s:6:\"height\";i:393;s:4:\"file\";s:21:\"2014/07/vim_tutor.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"vim_tutor-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"vim_tutor-300x235.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:235;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2870,16,'header_image','141'),(2871,16,'post_type','post'),(2872,233,'_edit_last','1'),(2873,233,'_edit_lock','1408624829:1'),(2874,233,'_syntaxhighlighter_encoded','1'),(2878,233,'dsq_thread_id','2929367235'),(2881,172,'dsq_thread_id','2929382650'),(2893,220,'dsq_thread_id','2932682347'),(2894,154,'dsq_thread_id','2932682419'),(2903,167,'dsq_thread_id','2933729832'),(2904,158,'dsq_thread_id','2933729884'),(2907,142,'dsq_thread_id','2933750176'),(2911,73,'_edit_lock','1408301920:1'),(2988,252,'_edit_last','1'),(2989,252,'_edit_lock','1408399686:1'),(2996,253,'_wp_attached_file','2014/08/big-odoc-1.jpg'),(2997,253,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:692;s:4:\"file\";s:22:\"2014/08/big-odoc-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-odoc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-odoc-1-300x173.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:173;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-odoc-1-1024x590.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:590;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2998,254,'_wp_attached_file','2014/08/big-odoc-2.jpg'),(2999,254,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:691;s:4:\"file\";s:22:\"2014/08/big-odoc-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-odoc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-odoc-2-300x172.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:172;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-odoc-2-1024x589.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:589;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3000,255,'_wp_attached_file','2014/08/big-odoc-3.jpg'),(3001,255,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:693;s:4:\"file\";s:22:\"2014/08/big-odoc-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-odoc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-odoc-3-300x173.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:173;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-odoc-3-1024x591.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:591;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3002,256,'_wp_attached_file','2014/08/big-odoc-4.jpg'),(3003,256,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:600;s:6:\"height\";i:1047;s:4:\"file\";s:22:\"2014/08/big-odoc-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-odoc-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-odoc-4-171x300.jpg\";s:5:\"width\";i:171;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-odoc-4-586x1024.jpg\";s:5:\"width\";i:586;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3004,257,'_wp_attached_file','2014/08/th-odoc-1.jpg'),(3005,257,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:231;s:4:\"file\";s:21:\"2014/08/th-odoc-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-odoc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-odoc-1-300x173.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:173;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3006,258,'_wp_attached_file','2014/08/th-odoc-2.jpg'),(3007,258,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:230;s:4:\"file\";s:21:\"2014/08/th-odoc-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-odoc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-odoc-2-300x172.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:172;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3008,259,'_wp_attached_file','2014/08/th-odoc-3.jpg'),(3009,259,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:231;s:4:\"file\";s:21:\"2014/08/th-odoc-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-odoc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-odoc-3-300x173.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:173;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3010,260,'_wp_attached_file','2014/08/th-odoc-4.jpg'),(3011,260,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:300;s:6:\"height\";i:524;s:4:\"file\";s:21:\"2014/08/th-odoc-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-odoc-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-odoc-4-171x300.jpg\";s:5:\"width\";i:171;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3048,252,'project_type','Web Site'),(3049,252,'languages','HTML5, Sass, Javascript, PHP (Wordpress)'),(3050,252,'role','Full-Stack Developer'),(3051,252,'link','http://new.okcommerce.gov/'),(3052,252,'company','Staplegun'),(3053,252,'company_link','http://staplegun.us/'),(3054,252,'thumbnail','257'),(3055,252,'image','253'),(3056,252,'caption','Home Page'),(3057,252,'thumbnail','258'),(3058,252,'image','254'),(3059,252,'caption','Subpage'),(3060,252,'thumbnail','259'),(3061,252,'image','255'),(3062,252,'caption','Popup Form'),(3063,252,'thumbnail','260'),(3064,252,'image','256'),(3065,252,'caption','Responsive Design'),(3066,63,'project_type','Web Site'),(3067,63,'languages','HTML5, Sass, Javascript, PHP (Wordpress)'),(3068,63,'role','Full-Stack Developer'),(3069,63,'link','http://77nrg.staplegun.us/'),(3070,63,'company','Staplegun'),(3071,63,'company_link','http://staplegun.us/'),(3072,63,'thumbnail','217'),(3073,63,'image','215'),(3074,63,'caption','Home Page Top (Video Background)'),(3075,63,'thumbnail','56'),(3076,63,'image','48'),(3077,63,'caption','Home Page Bottom (Parallax Background)'),(3078,63,'thumbnail','57'),(3079,63,'image','49'),(3080,63,'caption','Subpage'),(3081,63,'thumbnail','218'),(3082,63,'image','216'),(3083,63,'caption','Responsive Design'),(3084,64,'project_type','Web Site'),(3085,64,'languages','HTML5, Sass, Javascript, PHP (Wordpress)'),(3086,64,'role','Full-Stack Developer'),(3087,64,'link','http://www.enviro-ok.com/'),(3088,64,'company','Staplegun'),(3089,64,'company_link','http://staplegun.us/'),(3090,64,'thumbnail','98'),(3091,64,'image','86'),(3092,64,'caption','Home Page'),(3093,64,'thumbnail','99'),(3094,64,'image','87'),(3095,64,'caption','Subpage with Interactive 3D Images'),(3096,64,'thumbnail','100'),(3097,64,'image','88'),(3098,64,'caption','Subpage with Multiple Job Openings'),(3099,64,'thumbnail','136'),(3100,64,'image','73'),(3101,64,'caption','Responsive Design'),(3102,65,'project_type','Web Application'),(3103,65,'languages','Ember.js, Handlebars, Ruby on Rails, APIs, FayeJS, PostgreSQL'),(3104,65,'role','Back-End Developer - Team'),(3105,65,'link',''),(3106,65,'company','Brightbit'),(3107,65,'company_link','http://brightbit.com/'),(3108,65,'thumbnail','118'),(3109,65,'image','101'),(3110,65,'caption','Chat Room View'),(3111,65,'thumbnail','102'),(3112,65,'image','102'),(3113,65,'caption','Edit User View'),(3114,65,'thumbnail','120'),(3115,65,'image','103'),(3116,65,'caption','Edit Messages Instantly'),(3117,65,'thumbnail','121'),(3118,65,'image','104'),(3119,65,'caption','Log In View'),(3120,214,'project_type','Web Application'),(3121,214,'languages','Node.js, Faye.js'),(3122,214,'role','Back-End Developer'),(3123,214,'link','https://github.com/Staplegun-US/json-api-websocket-wrapper'),(3124,214,'company','Staplegun'),(3125,214,'company_link','http://staplegun.us/'),(3126,214,'thumbnail','213'),(3127,214,'image','209'),(3128,214,'caption','Example Stock Ticker Using JSON API Websocket Wrapper'),(3129,214,'thumbnail','212'),(3130,214,'image','208'),(3131,214,'caption','HTML Interface'),(3132,214,'thumbnail','210'),(3133,214,'image','206'),(3134,214,'caption','Server Logs'),(3135,214,'thumbnail','211'),(3136,214,'image','207'),(3137,214,'caption','Sample Config File'),(3138,68,'project_type','Ruby Gem'),(3139,68,'languages','Ruby'),(3140,68,'role','Back-End Developer'),(3141,68,'link','https://github.com/brightbit/markdown_checkboxes'),(3142,68,'company','Brightbit'),(3143,68,'company_link','http://brightbit.com/'),(3144,68,'thumbnail','123'),(3145,68,'image','106'),(3146,68,'caption','Rendering Markdown Checkboxes'),(3147,68,'thumbnail','122'),(3148,68,'image','105'),(3149,68,'caption','Editing Markdown Checkboxes Text'),(3150,38,'project_type','Web Site'),(3151,38,'languages','HTML5, Sass, Javascript, PHP (ModX)'),(3152,38,'role','Full-Stack Developer'),(3153,38,'link','http://totalenvironmentinc.com/'),(3154,38,'company','Staplegun'),(3155,38,'company_link','http://staplegun.us/'),(3156,38,'thumbnail','137'),(3157,38,'image','51'),(3158,38,'caption','Home Page'),(3159,38,'thumbnail','61'),(3160,38,'image','53'),(3161,38,'caption','Contact Page'),(3162,38,'thumbnail','62'),(3163,38,'image','54'),(3164,38,'caption','Sub Page with Lightbox'),(3165,38,'thumbnail','138'),(3166,38,'image','76'),(3167,38,'caption','Responsive Design'),(3168,67,'project_type','Web Application'),(3169,67,'languages','Ruby on Rails, Javascript, PostgreSQL, E-Commerce (Stripe)'),(3170,67,'role','Back-End Developer - Team'),(3171,67,'link','https://soundingboard.tv/'),(3172,67,'company','Brightbit'),(3173,67,'company_link','http://brightbit.com/'),(3174,67,'thumbnail','124'),(3175,67,'image','107'),(3176,67,'caption','Home Page'),(3177,67,'thumbnail','125'),(3178,67,'image','108'),(3179,67,'caption','Timeslots Index View'),(3180,67,'thumbnail','126'),(3181,67,'image','109'),(3182,67,'caption','New Booking View - Payments Handled via Stripe API'),(3183,71,'project_type','Web Site'),(3184,71,'languages','HTML5, CSS (Foundation), Javascript'),(3185,71,'role','Full-Stack Developer'),(3186,71,'link','http://thesocietea.org/carnegie_chart/'),(3187,71,'company','Personal Project'),(3188,71,'company_link',''),(3189,71,'thumbnail','94'),(3190,71,'image','82'),(3191,71,'caption','Interactive Chart View'),(3192,71,'thumbnail','95'),(3193,71,'image','83'),(3194,71,'caption','Descriptions View'),(3195,71,'thumbnail','96'),(3196,71,'image','84'),(3197,71,'caption','About View'),(3198,71,'thumbnail','135'),(3199,71,'image','85'),(3200,71,'caption','Responsive Design'),(3201,69,'project_type','Web Application'),(3202,69,'languages','HTML5, CSS (Bootstrap), Javascript'),(3203,69,'role','Full-Stack Developer'),(3204,69,'link','http://thesocietea.org/tea_timer/'),(3205,69,'company','Personal Project'),(3206,69,'company_link',''),(3207,69,'thumbnail','131'),(3208,69,'image','114'),(3209,69,'caption','Initial Page Load'),(3210,69,'thumbnail','132'),(3211,69,'image','115'),(3212,69,'caption','Timer Started'),(3213,69,'thumbnail','133'),(3214,69,'image','116'),(3215,69,'caption','Validations and Message'),(3216,69,'thumbnail','134'),(3217,69,'image','117'),(3218,69,'caption','Responsive Design'),(3219,70,'project_type','Web Site'),(3220,70,'languages','HTML5, CSS (Bootstrap), PHP'),(3221,70,'role','Full-Stack Developer'),(3222,70,'link','http://thesocietea.org/tea_steep_chart/'),(3223,70,'company','Personal Project'),(3224,70,'company_link',''),(3225,70,'thumbnail','127'),(3226,70,'image','110'),(3227,70,'caption','Cool Colors Theme'),(3228,70,'thumbnail','128'),(3229,70,'image','111'),(3230,70,'caption','Warm Colors Theme'),(3231,70,'thumbnail','129'),(3232,70,'image','112'),(3233,70,'caption','Color Coded Theme'),(3234,70,'thumbnail','130'),(3235,70,'image','113'),(3236,70,'caption','Responsive Design'),(3237,13,'header_image','145'),(3238,13,'post_type',''),(3239,13,'category_title','Development'),(3240,13,'color','#00e7ad'),(3241,13,'skill','Ruby / Rails'),(3242,13,'percentage','98'),(3243,13,'skill','Ember.js'),(3244,13,'percentage','90'),(3245,13,'skill','PHP / CMS Development'),(3246,13,'percentage','90'),(3247,13,'skill','Node.js'),(3248,13,'percentage','84'),(3249,13,'skill','Relational Databases'),(3250,13,'percentage','90'),(3251,13,'skill','NoSQL Databases'),(3252,13,'percentage','86'),(3253,13,'skill','Java'),(3254,13,'percentage','70'),(3255,13,'skill','C / C++'),(3256,13,'percentage','70'),(3257,13,'skill','REST APIs'),(3258,13,'percentage','90'),(3259,13,'category_title','Design'),(3260,13,'color','#146fe7'),(3261,13,'skill','HTML5'),(3262,13,'percentage','98'),(3263,13,'skill','CSS / Sass'),(3264,13,'percentage','96'),(3265,13,'skill','Javascript / jQuery'),(3266,13,'percentage','94'),(3267,13,'skill','Responsive Design'),(3268,13,'percentage','90'),(3269,13,'skill','D3.js'),(3270,13,'percentage','80'),(3271,13,'skill','Zurb Foundation'),(3272,13,'percentage','85'),(3273,13,'skill','Page & Image Optimization'),(3274,13,'percentage','94'),(3275,13,'skill','Browser Support (IE8+)'),(3276,13,'percentage','88'),(3277,13,'skill','Gimp'),(3278,13,'percentage','83'),(3279,13,'skill','SEO'),(3280,13,'percentage','80'),(3281,13,'skill','Accessibility'),(3282,13,'percentage','90'),(3283,13,'category_title','Dev Tools'),(3284,13,'color','#ff5e00'),(3285,13,'skill','Git'),(3286,13,'percentage','100'),(3287,13,'skill','Vim'),(3288,13,'percentage','98'),(3289,13,'skill','Shell'),(3290,13,'percentage','94'),(3291,13,'skill','Tmux'),(3292,13,'percentage','90'),(3293,13,'skill','Grunt.js'),(3294,13,'percentage','95'),(3295,13,'skill','Sass'),(3296,13,'percentage','94'),(3297,13,'skill','Coffeescript'),(3298,13,'percentage','90'),(3299,13,'skill','Haml / Slim'),(3300,13,'percentage','87'),(3301,13,'skill','Gtk+'),(3302,13,'percentage','84'),(3303,13,'skill','DNS'),(3304,13,'percentage','85'),(3305,13,'skill','Heroku'),(3306,13,'percentage','85'),(3309,4,'thumbnail','257'),(3310,4,'label','OK Commerce'),(3311,4,'url','http://new.okcommerce.gov'),(3312,4,'thumbnail','137'),(3313,4,'label','Total Environment'),(3314,4,'url','http://totalenvironmentinc.com/'),(3315,4,'thumbnail','98'),(3316,4,'label','Enviro Systems'),(3317,4,'url','http://www.enviro-ok.com/'),(3318,4,'thumbnail','217'),(3319,4,'label','77 Energy'),(3320,4,'url','http://77nrg.com'),(3321,4,'thumbnail','90'),(3322,4,'label','Baton'),(3323,4,'url','https://batonapp.com/'),(3324,4,'thumbnail','131'),(3325,4,'label','Tea timers'),(3326,4,'url','http://thesocietea.org/tea_timer/'),(3327,4,'thumbnail','127'),(3328,4,'label','Tea Chart'),(3329,4,'url','http://thesocietea.org/tea_steep_chart/'),(3330,4,'thumbnail','94'),(3331,4,'label','Carnegie Chart'),(3332,4,'url','http://thesocietea.org/carnegie_chart/'),(3336,261,'_edit_last','1'),(3337,261,'_edit_lock','1409793418:1'),(3338,261,'_syntaxhighlighter_encoded','1'),(3351,261,'dsq_thread_id','2953640271'),(3363,282,'_edit_last','1'),(3364,282,'_edit_lock','1409920523:1'),(3365,282,'_syntaxhighlighter_encoded','1'),(3367,282,'dsq_thread_id','2966714576'),(3934,301,'_edit_last','1'),(3935,301,'_edit_lock','1409515623:1'),(4265,305,'_edit_last','1'),(4266,305,'_edit_lock','1409866484:1'),(4269,305,'_syntaxhighlighter_encoded','1'),(4359,305,'dsq_thread_id','2986163533');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=324 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (4,1,'2014-06-02 22:41:51','2014-06-02 22:41:51','','Home','','publish','open','open','','home','','','2014-08-19 13:47:23','2014-08-19 13:47:23','',0,'http://localhost:8000/?page_id=4',0,'page','',0),(5,1,'2014-06-02 22:41:51','2014-06-02 22:41:51','','Home','','inherit','open','open','','4-revision-v1','','','2014-06-02 22:41:51','2014-06-02 22:41:51','',4,'http://localhost:8000/?p=5',0,'revision','',0),(6,1,'2014-06-03 03:57:47','2014-06-03 03:57:47','','About','','publish','open','open','','about','','','2014-06-06 05:09:43','2014-06-06 05:09:43','',0,'http://localhost:8000/?page_id=6',0,'page','',1),(7,1,'2014-06-03 03:57:47','2014-06-03 03:57:47','','About','','inherit','open','open','','6-revision-v1','','','2014-06-03 03:57:47','2014-06-03 03:57:47','',6,'http://localhost:8000/?p=7',0,'revision','',0),(8,1,'2014-06-03 04:30:00','2014-06-03 04:30:00','','Subpage','','publish','closed','closed','','subpage','','','2014-06-10 23:14:17','2014-06-10 23:14:17','',0,'http://localhost:8000/?post_type=cfs&#038;p=8',0,'cfs','',0),(9,1,'2014-06-03 04:30:22','2014-06-03 04:30:22','','beer-header','','inherit','open','open','','beer-header','','','2014-06-03 04:30:22','2014-06-03 04:30:22','',6,'http://thesocietea.org/wp-content/uploads/2014/06/beer-header.jpg',0,'attachment','image/jpeg',0),(10,1,'2014-06-03 04:35:13','2014-06-03 04:35:13','','Resume','','publish','open','closed','','resume','','','2014-06-11 05:34:27','2014-06-11 05:34:27','',0,'http://localhost:8000/?page_id=10',0,'page','',0),(11,1,'2014-06-03 04:35:13','2014-06-03 04:35:13','','Blog','','inherit','open','open','','10-revision-v1','','','2014-06-03 04:35:13','2014-06-03 04:35:13','',10,'http://localhost:8000/?p=11',0,'revision','',0),(12,1,'2014-06-03 04:35:17','2014-06-03 04:35:17','','Resume','','inherit','open','open','','10-revision-v1','','','2014-06-03 04:35:17','2014-06-03 04:35:17','',10,'http://localhost:8000/?p=12',0,'revision','',0),(13,1,'2014-06-03 04:35:26','2014-06-03 04:35:26','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need. Feel free to <a href=\"mailto:alkrauss48@gmail.com\">shoot me an email</a> to learn more.\r\n\r\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools in the past, and currently give a <a title=\"Programming Speaking Outline\" href=\"/assets/documents/programming_speaking_outline.pdf\" target=\"_blank\">talk</a> that usually ranges from 30 - 40 minutes.','Hire Me','','publish','open','open','','hire-me','','','2014-08-19 00:17:56','2014-08-19 00:17:56','',0,'http://localhost:8000/?page_id=13',0,'page','',0),(14,1,'2014-06-03 04:35:26','2014-06-03 04:35:26','','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-03 04:35:26','2014-06-03 04:35:26','',13,'http://localhost:8000/?p=14',0,'revision','',0),(16,1,'2014-06-03 04:35:37','2014-06-03 04:35:37','Below you\'ll find my blog posts. You can also check out the <a title=\"RSS Feed\" href=\"http://thesocietea.org/feed/\">RSS feed</a> too.','Blog','','publish','open','closed','','blog','','','2014-07-28 01:55:02','2014-07-28 01:55:02','',0,'http://localhost:8000/?page_id=16',0,'page','',0),(17,1,'2014-06-03 04:35:37','2014-06-03 04:35:37','','Blog','','inherit','open','open','','16-revision-v1','','','2014-06-03 04:35:37','2014-06-03 04:35:37','',16,'http://localhost:8000/?p=17',0,'revision','',0),(18,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=18',1,'nav_menu_item','',0),(19,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=19',1,'nav_menu_item','',0),(20,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=20',1,'nav_menu_item','',0),(21,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=21',1,'nav_menu_item','',0),(22,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=22',1,'nav_menu_item','',0),(23,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=23',1,'nav_menu_item','',0),(24,1,'2014-06-03 04:38:05','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:38:05','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=24',1,'nav_menu_item','',0),(25,1,'2014-06-03 04:39:06','2014-06-03 04:39:06',' ','','','publish','open','open','','25','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=25',1,'nav_menu_item','',0),(26,1,'2014-06-03 04:39:06','2014-06-03 04:39:06',' ','','','publish','open','open','','26','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=26',2,'nav_menu_item','',0),(27,1,'2014-06-03 04:39:06','2014-06-03 04:39:06',' ','','','publish','open','open','','27','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=27',5,'nav_menu_item','',0),(28,1,'2014-06-03 04:38:05','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:38:05','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=28',1,'nav_menu_item','',0),(30,1,'2014-06-03 04:44:37','2014-06-03 04:44:37','Check out some of the projects I\'ve worked on recently:','Projects','','publish','open','open','','projects','','','2014-06-10 02:25:43','2014-06-10 02:25:43','',0,'http://localhost:8000/?page_id=30',0,'page','',0),(31,1,'2014-06-03 04:44:37','2014-06-03 04:44:37','','Projects','','inherit','open','open','','30-revision-v1','','','2014-06-03 04:44:37','2014-06-03 04:44:37','',30,'http://localhost:8000/?p=31',0,'revision','',0),(32,1,'2014-06-03 04:44:54','2014-06-03 04:44:54',' ','','','publish','open','open','','32','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=32',3,'nav_menu_item','',0),(33,1,'2014-06-03 04:46:17','2014-06-03 04:46:17','<p style=\"color: #000000;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus luctus libero vel laoreet ornare. Vestibulum non porttitor eros. Curabitur nulla nulla, eleifend in mi ac, accumsan sodales est. Nulla et orci nec massa rhoncus ultrices. Praesent quis arcu et diam euismod consectetur vitae sed sapien. Suspendisse pulvinar tempor gravida. Cras urna felis, viverra aliquam magna ac, imperdiet sodales leo. Proin cursus condimentum mi eu lacinia. Aenean quis dolor volutpat, vehicula ante in, malesuada augue. Nunc purus purus, vulputate vitae ornare vitae, pellentesque nec nisl. Duis eu accumsan lacus, eu lobortis leo. Donec vel mi lacus. Nunc risus risus, ullamcorper sed mi vel, sodales viverra leo. Pellentesque tincidunt at tellus id dictum. Vivamus euismod tempus magna a venenatis. Nunc at sagittis metus, eu mollis urna.</p>\r\n<p style=\"color: #000000;\">Proin scelerisque at odio vitae porttitor. Aenean purus lorem, consequat sit amet magna et, tristique condimentum augue. Ut convallis dapibus volutpat. Sed interdum, velit eu feugiat euismod, purus nulla tincidunt lorem, at molestie arcu libero ac leo. Nam ultricies mauris neque, et tincidunt magna tincidunt eu. Morbi id elementum massa. Donec iaculis magna purus, vel scelerisque sem molestie nec. Pellentesque ipsum purus, posuere pretium rhoncus ac, lacinia sed enim. Morbi non feugiat dolor. Fusce bibendum ullamcorper urna, non volutpat neque pharetra ac. Morbi ut ipsum non lacus pharetra luctus suscipit eu diam. Curabitur sodales vitae mi ac feugiat. Nulla egestas vel enim eu dictum.</p>\r\n<p style=\"color: #000000;\">Integer urna leo, dapibus elementum malesuada ut, commodo id risus. Donec sed sem sit amet libero gravida bibendum. Nullam a faucibus velit. In viverra eu ante id fringilla. Fusce vulputate suscipit leo rhoncus molestie. Pellentesque non libero id velit cursus placerat. Maecenas ac neque mauris. Etiam faucibus lectus ante. Nam adipiscing tristique fermentum. Aenean dolor dui, ultrices sed enim sed, pretium tempus purus. In luctus massa neque, et luctus metus accumsan a. Sed sed commodo ante. Vestibulum tempus cursus tincidunt. Suspendisse non lorem sit amet lectus interdum gravida.</p>','About','','inherit','open','open','','6-revision-v1','','','2014-06-03 04:46:17','2014-06-03 04:46:17','',6,'http://localhost:8000/?p=33',0,'revision','',0),(34,1,'2014-06-06 05:09:43','2014-06-06 05:09:43','','About','','inherit','open','open','','6-revision-v1','','','2014-06-06 05:09:43','2014-06-06 05:09:43','',6,'http://localhost:8000/?p=34',0,'revision','',0),(35,1,'2014-06-06 18:05:54','2014-06-06 18:05:54','','stockvault--atlantic-sunset135250','','inherit','open','open','','stockvault-atlantic-sunset135250','','','2014-06-06 18:05:54','2014-06-06 18:05:54','',30,'http://thesocietea.org/wp-content/uploads/2014/06/stockvault-atlantic-sunset135250.jpg',0,'attachment','image/jpeg',0),(36,1,'2014-06-06 18:11:31','2014-06-06 18:11:31','Check out some of the projects I\'ve worked on recently:','Projects','','inherit','open','open','','30-revision-v1','','','2014-06-06 18:11:31','2014-06-06 18:11:31','',30,'http://localhost:8000/?p=36',0,'revision','',0),(37,1,'2014-06-06 18:14:38','2014-06-06 18:14:38','','Project Fields','','publish','closed','closed','','project-screenshots','','','2014-06-06 21:53:44','2014-06-06 21:53:44','',0,'http://localhost:8000/?post_type=cfs&#038;p=37',0,'cfs','',0),(38,1,'2014-06-06 18:15:59','2014-06-06 18:15:59','This is Total Environment Inc.','Total Environment Inc.','','publish','closed','closed','','total-environment-inc','','','2014-08-18 22:11:45','2014-08-18 22:11:45','',0,'http://localhost:8000/?post_type=project&#038;p=38',6,'project','',0),(39,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-77nrg','','inherit','open','open','','th-77nrg','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-77nrg.png',0,'attachment','image/png',0),(40,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-baton','','inherit','open','open','','th-baton','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-baton.png',0,'attachment','image/png',0),(41,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-carnegie-chart','','inherit','open','open','','th-carnegie-chart','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-carnegie-chart.png',0,'attachment','image/png',0),(42,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-enviro','','inherit','open','open','','th-enviro','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-enviro.png',0,'attachment','image/png',0),(43,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-soundingboard','','inherit','open','open','','th-soundingboard','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-soundingboard.png',0,'attachment','image/png',0),(44,1,'2014-06-06 18:30:11','2014-06-06 18:30:11','','th-tea-chart','','inherit','open','open','','th-tea-chart','','','2014-06-06 18:30:11','2014-06-06 18:30:11','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-tea-chart.png',0,'attachment','image/png',0),(45,1,'2014-06-06 18:30:11','2014-06-06 18:30:11','','th-tea-timers','','inherit','open','open','','th-tea-timers','','','2014-06-06 18:30:11','2014-06-06 18:30:11','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-tea-timers.png',0,'attachment','image/png',0),(46,1,'2014-06-06 18:30:11','2014-06-06 18:30:11','','th-tle','','inherit','open','open','','th-tle','','','2014-06-06 18:30:11','2014-06-06 18:30:11','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle.png',0,'attachment','image/png',0),(47,1,'2014-06-06 21:03:45','2014-06-06 21:03:45','','big-77-1','','inherit','open','open','','big-77-1','','','2014-06-06 21:03:45','2014-06-06 21:03:45','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-1.jpg',0,'attachment','image/jpeg',0),(48,1,'2014-06-06 21:03:46','2014-06-06 21:03:46','','big-77-2','','inherit','open','open','','big-77-2','','','2014-06-06 21:03:46','2014-06-06 21:03:46','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-2.jpg',0,'attachment','image/jpeg',0),(49,1,'2014-06-06 21:03:46','2014-06-06 21:03:46','','big-77-3','','inherit','open','open','','big-77-3','','','2014-06-06 21:03:46','2014-06-06 21:03:46','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-3.jpg',0,'attachment','image/jpeg',0),(50,1,'2014-06-06 21:03:47','2014-06-06 21:03:47','','big-77-4','','inherit','open','open','','big-77-4','','','2014-06-06 21:03:47','2014-06-06 21:03:47','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-4.jpg',0,'attachment','image/jpeg',0),(51,1,'2014-06-06 21:03:47','2014-06-06 21:03:47','','big-tle-1','','inherit','open','open','','big-tle-1','','','2014-06-06 21:03:47','2014-06-06 21:03:47','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-1.jpg',0,'attachment','image/jpeg',0),(52,1,'2014-06-06 21:03:47','2014-06-06 21:03:47','','big-tle-2','','inherit','open','open','','big-tle-2','','','2014-06-06 21:03:47','2014-06-06 21:03:47','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-2.jpg',0,'attachment','image/jpeg',0),(53,1,'2014-06-06 21:03:48','2014-06-06 21:03:48','','big-tle-3','','inherit','open','open','','big-tle-3','','','2014-06-06 21:03:48','2014-06-06 21:03:48','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-3.jpg',0,'attachment','image/jpeg',0),(54,1,'2014-06-06 21:03:48','2014-06-06 21:03:48','','big-tle-4','','inherit','open','open','','big-tle-4','','','2014-06-06 21:03:48','2014-06-06 21:03:48','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-4.jpg',0,'attachment','image/jpeg',0),(55,1,'2014-06-06 21:04:04','2014-06-06 21:04:04','','th-77-1','','inherit','open','open','','th-77-1','','','2014-06-06 21:04:04','2014-06-06 21:04:04','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-1.jpg',0,'attachment','image/jpeg',0),(56,1,'2014-06-06 21:04:04','2014-06-06 21:04:04','','th-77-2','','inherit','open','open','','th-77-2','','','2014-06-06 21:04:04','2014-06-06 21:04:04','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-2.jpg',0,'attachment','image/jpeg',0),(57,1,'2014-06-06 21:04:04','2014-06-06 21:04:04','','th-77-3','','inherit','open','open','','th-77-3','','','2014-06-06 21:04:04','2014-06-06 21:04:04','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-3.jpg',0,'attachment','image/jpeg',0),(58,1,'2014-06-06 21:04:05','2014-06-06 21:04:05','','th-77-4','','inherit','open','open','','th-77-4','','','2014-06-06 21:04:05','2014-06-06 21:04:05','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-4.jpg',0,'attachment','image/jpeg',0),(60,1,'2014-06-06 21:04:05','2014-06-06 21:04:05','','th-tle-2','','inherit','open','open','','th-tle-2','','','2014-06-06 21:04:05','2014-06-06 21:04:05','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-2.jpg',0,'attachment','image/jpeg',0),(61,1,'2014-06-06 21:04:05','2014-06-06 21:04:05','','th-tle-3','','inherit','open','open','','th-tle-3','','','2014-06-06 21:04:05','2014-06-06 21:04:05','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-3.jpg',0,'attachment','image/jpeg',0),(62,1,'2014-06-06 21:04:06','2014-06-06 21:04:06','','th-tle-4','','inherit','open','open','','th-tle-4','','','2014-06-06 21:04:06','2014-06-06 21:04:06','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-4.jpg',0,'attachment','image/jpeg',0),(63,1,'2014-06-06 21:10:11','2014-06-06 21:10:11','This is 77 Energy','77 Energy','','publish','closed','closed','','77-energy','','','2014-08-18 22:10:40','2014-08-18 22:10:40','',0,'http://localhost:8000/?post_type=project&#038;p=63',0,'project','',0),(64,1,'2014-06-08 03:04:15','2014-06-08 03:04:15','','Enviro Systems','','publish','closed','closed','','enviro-systems','','','2014-08-18 22:10:49','2014-08-18 22:10:49','',0,'http://localhost:8000/?post_type=project&#038;p=64',1,'project','',0),(65,1,'2014-06-08 03:12:01','2014-06-08 03:12:01','','Kikuchat 2.0','','publish','closed','closed','','kikuchat-2-0','','','2014-08-18 22:11:05','2014-08-18 22:11:05','',0,'http://localhost:8000/?post_type=project&#038;p=65',2,'project','',0),(66,1,'2014-06-08 03:13:44','2014-06-08 03:13:44','','Baton','','publish','closed','closed','','baton','','','2014-06-08 06:13:48','2014-06-08 06:13:48','',0,'http://localhost:8000/?post_type=project&#038;p=66',5,'project','',0),(67,1,'2014-06-08 03:15:11','2014-06-08 03:15:11','','Soundingboard','','publish','closed','closed','','soundingboard','','','2014-08-18 22:20:08','2014-08-18 22:20:08','',0,'http://localhost:8000/?post_type=project&#038;p=67',7,'project','',0),(68,1,'2014-06-08 03:18:14','2014-06-08 03:18:14','','Markdown Checkboxes','','publish','closed','closed','','markdown-checkboxes','','','2014-08-18 22:11:30','2014-08-18 22:11:30','',0,'http://localhost:8000/?post_type=project&#038;p=68',4,'project','',0),(69,1,'2014-06-08 03:20:06','2014-06-08 03:20:06','','Tea Timers','','publish','closed','closed','','tea-timers','','','2014-08-18 22:21:25','2014-08-18 22:21:25','',0,'http://localhost:8000/?post_type=project&#038;p=69',9,'project','',0),(70,1,'2014-06-08 03:21:08','2014-06-08 03:21:08','','Tea Chart','','publish','closed','closed','','tea-chart','','','2014-08-18 22:21:39','2014-08-18 22:21:39','',0,'http://localhost:8000/?post_type=project&#038;p=70',10,'project','',0),(71,1,'2014-06-08 03:22:06','2014-06-08 03:22:06','','Dale Carnegie Chart','','publish','closed','closed','','dale-carnegie-chart','','','2014-08-18 22:21:08','2014-08-18 22:21:08','',0,'http://localhost:8000/?post_type=project&#038;p=71',8,'project','',0),(72,1,'2014-06-08 04:08:14','2014-06-08 04:08:14','','big-77-responsive','','inherit','open','open','','big-77-responsive','','','2014-06-08 04:08:14','2014-06-08 04:08:14','',63,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-responsive.jpg',0,'attachment','image/jpeg',0),(73,1,'2014-06-08 04:08:15','2014-06-08 04:08:15','','big-es-responsive','','inherit','open','open','','big-es-responsive','','','2014-06-08 04:08:15','2014-06-08 04:08:15','',63,'http://thesocietea.org/wp-content/uploads/2014/06/big-es-responsive.jpg',0,'attachment','image/jpeg',0),(74,1,'2014-06-08 04:08:15','2014-06-08 04:08:15','','th-77-responsive','','inherit','open','open','','th-77-responsive','','','2014-06-08 04:08:15','2014-06-08 04:08:15','',63,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-responsive.jpg',0,'attachment','image/jpeg',0),(76,1,'2014-06-08 05:59:32','2014-06-08 05:59:32','','big-tle-responsive','','inherit','open','open','','big-tle-responsive','','','2014-06-08 05:59:32','2014-06-08 05:59:32','',38,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-responsive.jpg',0,'attachment','image/jpeg',0),(78,1,'2014-06-08 06:09:38','2014-06-08 06:09:38','','big-bt-1','','inherit','open','open','','big-bt-1','','','2014-06-08 06:09:38','2014-06-08 06:09:38','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-bt-1.jpg',0,'attachment','image/jpeg',0),(79,1,'2014-06-08 06:09:39','2014-06-08 06:09:39','','big-bt-2','','inherit','open','open','','big-bt-2','','','2014-06-08 06:09:39','2014-06-08 06:09:39','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-bt-2.jpg',0,'attachment','image/jpeg',0),(80,1,'2014-06-08 06:09:39','2014-06-08 06:09:39','','big-bt-3','','inherit','open','open','','big-bt-3','','','2014-06-08 06:09:39','2014-06-08 06:09:39','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-bt-3.jpg',0,'attachment','image/jpeg',0),(81,1,'2014-06-08 06:09:39','2014-06-08 06:09:39','','big-bt-4','','inherit','open','open','','big-bt-4','','','2014-06-08 06:09:39','2014-06-08 06:09:39','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-bt-4.jpg',0,'attachment','image/jpeg',0),(82,1,'2014-06-08 06:09:39','2014-06-08 06:09:39','','big-cc-1','','inherit','open','open','','big-cc-1','','','2014-06-08 06:09:39','2014-06-08 06:09:39','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-cc-1.jpg',0,'attachment','image/jpeg',0),(83,1,'2014-06-08 06:09:40','2014-06-08 06:09:40','','big-cc-2','','inherit','open','open','','big-cc-2','','','2014-06-08 06:09:40','2014-06-08 06:09:40','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-cc-2.jpg',0,'attachment','image/jpeg',0),(84,1,'2014-06-08 06:09:40','2014-06-08 06:09:40','','big-cc-3','','inherit','open','open','','big-cc-3','','','2014-06-08 06:09:40','2014-06-08 06:09:40','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-cc-3.jpg',0,'attachment','image/jpeg',0),(85,1,'2014-06-08 06:09:40','2014-06-08 06:09:40','','big-cc-responsive','','inherit','open','open','','big-cc-responsive','','','2014-06-08 06:09:40','2014-06-08 06:09:40','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-cc-responsive.jpg',0,'attachment','image/jpeg',0),(86,1,'2014-06-08 06:09:40','2014-06-08 06:09:40','','big-es-1','','inherit','open','open','','big-es-1','','','2014-06-08 06:09:40','2014-06-08 06:09:40','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-es-1.jpg',0,'attachment','image/jpeg',0),(87,1,'2014-06-08 06:09:41','2014-06-08 06:09:41','','big-es-2','','inherit','open','open','','big-es-2','','','2014-06-08 06:09:41','2014-06-08 06:09:41','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-es-2.jpg',0,'attachment','image/jpeg',0),(88,1,'2014-06-08 06:09:41','2014-06-08 06:09:41','','big-es-3','','inherit','open','open','','big-es-3','','','2014-06-08 06:09:41','2014-06-08 06:09:41','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-es-3.jpg',0,'attachment','image/jpeg',0),(89,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-baton','','inherit','open','open','','th-baton-2','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-baton1.png',0,'attachment','image/png',0),(90,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-bt-1','','inherit','open','open','','th-bt-1','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-bt-1.jpg',0,'attachment','image/jpeg',0),(91,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-bt-2','','inherit','open','open','','th-bt-2','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-bt-2.jpg',0,'attachment','image/jpeg',0),(92,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-bt-3','','inherit','open','open','','th-bt-3','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-bt-3.jpg',0,'attachment','image/jpeg',0),(93,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-bt-4','','inherit','open','open','','th-bt-4','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-bt-4.jpg',0,'attachment','image/jpeg',0),(94,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-cc-1','','inherit','open','open','','th-cc-1','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-cc-1.jpg',0,'attachment','image/jpeg',0),(95,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-cc-2','','inherit','open','open','','th-cc-2','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-cc-2.jpg',0,'attachment','image/jpeg',0),(96,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-cc-3','','inherit','open','open','','th-cc-3','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-cc-3.jpg',0,'attachment','image/jpeg',0),(98,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-es-1','','inherit','open','open','','th-es-1','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-es-1.jpg',0,'attachment','image/jpeg',0),(99,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-es-2','','inherit','open','open','','th-es-2','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-es-2.jpg',0,'attachment','image/jpeg',0),(100,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-es-3','','inherit','open','open','','th-es-3','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-es-3.jpg',0,'attachment','image/jpeg',0),(101,1,'2014-06-09 00:32:37','2014-06-09 00:32:37','','big-kk-1','','inherit','open','open','','big-kk-1','','','2014-06-09 00:32:37','2014-06-09 00:32:37','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-kk-1.jpg',0,'attachment','image/jpeg',0),(102,1,'2014-06-09 00:32:37','2014-06-09 00:32:37','','big-kk-2','','inherit','open','open','','big-kk-2','','','2014-06-09 00:32:37','2014-06-09 00:32:37','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-kk-2.jpg',0,'attachment','image/jpeg',0),(103,1,'2014-06-09 00:32:37','2014-06-09 00:32:37','','big-kk-3','','inherit','open','open','','big-kk-3','','','2014-06-09 00:32:37','2014-06-09 00:32:37','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-kk-3.jpg',0,'attachment','image/jpeg',0),(104,1,'2014-06-09 00:32:37','2014-06-09 00:32:37','','big-kk-4','','inherit','open','open','','big-kk-4','','','2014-06-09 00:32:37','2014-06-09 00:32:37','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-kk-4.jpg',0,'attachment','image/jpeg',0),(105,1,'2014-06-09 00:32:38','2014-06-09 00:32:38','','big-mc-1','','inherit','open','open','','big-mc-1','','','2014-06-09 00:32:38','2014-06-09 00:32:38','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-mc-1.jpg',0,'attachment','image/jpeg',0),(106,1,'2014-06-09 00:32:38','2014-06-09 00:32:38','','big-mc-2','','inherit','open','open','','big-mc-2','','','2014-06-09 00:32:38','2014-06-09 00:32:38','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-mc-2.jpg',0,'attachment','image/jpeg',0),(107,1,'2014-06-09 00:32:38','2014-06-09 00:32:38','','big-sb-1','','inherit','open','open','','big-sb-1','','','2014-06-09 00:32:38','2014-06-09 00:32:38','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-sb-1.jpg',0,'attachment','image/jpeg',0),(108,1,'2014-06-09 00:32:38','2014-06-09 00:32:38','','big-sb-2','','inherit','open','open','','big-sb-2','','','2014-06-09 00:32:38','2014-06-09 00:32:38','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-sb-2.jpg',0,'attachment','image/jpeg',0),(109,1,'2014-06-09 00:32:39','2014-06-09 00:32:39','','big-sb-3','','inherit','open','open','','big-sb-3','','','2014-06-09 00:32:39','2014-06-09 00:32:39','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-sb-3.jpg',0,'attachment','image/jpeg',0),(110,1,'2014-06-09 00:32:39','2014-06-09 00:32:39','','big-tc-1','','inherit','open','open','','big-tc-1','','','2014-06-09 00:32:39','2014-06-09 00:32:39','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tc-1.jpg',0,'attachment','image/jpeg',0),(111,1,'2014-06-09 00:32:39','2014-06-09 00:32:39','','big-tc-2','','inherit','open','open','','big-tc-2','','','2014-06-09 00:32:39','2014-06-09 00:32:39','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tc-2.jpg',0,'attachment','image/jpeg',0),(112,1,'2014-06-09 00:32:39','2014-06-09 00:32:39','','big-tc-3','','inherit','open','open','','big-tc-3','','','2014-06-09 00:32:39','2014-06-09 00:32:39','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tc-3.jpg',0,'attachment','image/jpeg',0),(113,1,'2014-06-09 00:32:40','2014-06-09 00:32:40','','big-tc-responsive','','inherit','open','open','','big-tc-responsive','','','2014-06-09 00:32:40','2014-06-09 00:32:40','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tc-responsive.jpg',0,'attachment','image/jpeg',0),(114,1,'2014-06-09 00:32:40','2014-06-09 00:32:40','','big-tt-1','','inherit','open','open','','big-tt-1','','','2014-06-09 00:32:40','2014-06-09 00:32:40','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tt-1.jpg',0,'attachment','image/jpeg',0),(115,1,'2014-06-09 00:32:40','2014-06-09 00:32:40','','big-tt-2','','inherit','open','open','','big-tt-2','','','2014-06-09 00:32:40','2014-06-09 00:32:40','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tt-2.jpg',0,'attachment','image/jpeg',0),(116,1,'2014-06-09 00:32:41','2014-06-09 00:32:41','','big-tt-3','','inherit','open','open','','big-tt-3','','','2014-06-09 00:32:41','2014-06-09 00:32:41','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tt-3.jpg',0,'attachment','image/jpeg',0),(117,1,'2014-06-09 00:32:41','2014-06-09 00:32:41','','big-tt-responsive','','inherit','open','open','','big-tt-responsive','','','2014-06-09 00:32:41','2014-06-09 00:32:41','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tt-responsive.jpg',0,'attachment','image/jpeg',0),(118,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-kk-1','','inherit','open','open','','th-kk-1','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-kk-1.jpg',0,'attachment','image/jpeg',0),(119,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-kk-2','','inherit','open','open','','th-kk-2','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-kk-2.jpg',0,'attachment','image/jpeg',0),(120,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-kk-3','','inherit','open','open','','th-kk-3','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-kk-3.jpg',0,'attachment','image/jpeg',0),(121,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-kk-4','','inherit','open','open','','th-kk-4','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-kk-4.jpg',0,'attachment','image/jpeg',0),(122,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-mc-1','','inherit','open','open','','th-mc-1','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-mc-1.jpg',0,'attachment','image/jpeg',0),(123,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-mc-2','','inherit','open','open','','th-mc-2','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-mc-2.jpg',0,'attachment','image/jpeg',0),(124,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-sb-1','','inherit','open','open','','th-sb-1','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-sb-1.jpg',0,'attachment','image/jpeg',0),(125,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-sb-2','','inherit','open','open','','th-sb-2','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-sb-2.jpg',0,'attachment','image/jpeg',0),(126,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-sb-3','','inherit','open','open','','th-sb-3','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-sb-3.jpg',0,'attachment','image/jpeg',0),(127,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-tc-1','','inherit','open','open','','th-tc-1','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tc-1.jpg',0,'attachment','image/jpeg',0),(128,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-tc-2','','inherit','open','open','','th-tc-2','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tc-2.jpg',0,'attachment','image/jpeg',0),(129,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-tc-3','','inherit','open','open','','th-tc-3','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tc-3.jpg',0,'attachment','image/jpeg',0),(130,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-tc-responsive','','inherit','open','open','','th-tc-responsive','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tc-responsive.jpg',0,'attachment','image/jpeg',0),(131,1,'2014-06-09 00:33:24','2014-06-09 00:33:24','','th-tt-1','','inherit','open','open','','th-tt-1','','','2014-06-09 00:33:24','2014-06-09 00:33:24','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tt-1.jpg',0,'attachment','image/jpeg',0),(132,1,'2014-06-09 00:33:24','2014-06-09 00:33:24','','th-tt-2','','inherit','open','open','','th-tt-2','','','2014-06-09 00:33:24','2014-06-09 00:33:24','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tt-2.jpg',0,'attachment','image/jpeg',0),(133,1,'2014-06-09 00:33:24','2014-06-09 00:33:24','','th-tt-3','','inherit','open','open','','th-tt-3','','','2014-06-09 00:33:24','2014-06-09 00:33:24','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tt-3.jpg',0,'attachment','image/jpeg',0),(134,1,'2014-06-09 00:33:24','2014-06-09 00:33:24','','th-tt-responsive','','inherit','open','open','','th-tt-responsive','','','2014-06-09 00:33:24','2014-06-09 00:33:24','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tt-responsive.jpg',0,'attachment','image/jpeg',0),(135,1,'2014-06-09 00:59:45','2014-06-09 00:59:45','','th-cc-responsive','','inherit','open','open','','th-cc-responsive','','','2014-06-09 00:59:45','2014-06-09 00:59:45','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-cc-responsive.jpg',0,'attachment','image/jpeg',0),(136,1,'2014-06-09 00:59:45','2014-06-09 00:59:45','','th-es-responsive','','inherit','open','open','','th-es-responsive','','','2014-06-09 00:59:45','2014-06-09 00:59:45','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-es-responsive.jpg',0,'attachment','image/jpeg',0),(137,1,'2014-06-09 00:59:46','2014-06-09 00:59:46','','th-tle-1','','inherit','open','open','','th-tle-1','','','2014-06-09 00:59:46','2014-06-09 00:59:46','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-1.jpg',0,'attachment','image/jpeg',0),(138,1,'2014-06-09 00:59:46','2014-06-09 00:59:46','','th-tle-responsive','','inherit','open','open','','th-tle-responsive','','','2014-06-09 00:59:46','2014-06-09 00:59:46','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-responsive.jpg',0,'attachment','image/jpeg',0),(139,1,'2014-06-09 01:10:49','2014-06-09 01:10:49','','Home Page Projects','','publish','closed','closed','','home-page-projects','','','2014-06-09 01:25:41','2014-06-09 01:25:41','',0,'http://localhost:8000/?post_type=cfs&#038;p=139',0,'cfs','',0),(140,1,'2014-06-09 22:27:46','2014-06-09 22:27:46','','stockvault-dramatic-landscape106482','','inherit','open','open','','stockvault-dramatic-landscape106482','','','2014-06-09 22:27:46','2014-06-09 22:27:46','',16,'http://thesocietea.org/wp-content/uploads/2014/06/stockvault-dramatic-landscape106482.jpg',0,'attachment','image/jpeg',0),(141,1,'2014-06-09 22:32:04','2014-06-09 22:32:04','','stockvault-path-in-nature124348','','inherit','open','open','','stockvault-path-in-nature124348','','','2014-06-09 22:32:04','2014-06-09 22:32:04','',16,'http://thesocietea.org/wp-content/uploads/2014/06/stockvault-path-in-nature124348.jpg',0,'attachment','image/jpeg',0),(142,1,'2014-06-09 22:58:48','2014-06-09 22:58:48','I have been drinking tea for about 6 years now, and the quality of tea I have chosen to drink has risen throughout those years. I have moved from purchasing local grocery store tea bags to buying \"whole leaf\" tea that is still in tea bags, all the way to purchasing loose leaf teas by the ounce at local tea stores and Teavana (Amazon, too!)\r\n\r\nHowever, as I have done more research about teas, I have learned that certain teas are kept in storage better than others, and some teas are freshest only in the first year of their life. That means from the moment they\'re picked, they will only have that superior magnificence for a single year. Since the vast majority of teas (not tisanes) are produced in Asia, it typically takes a while before the new season\'s tea leaves are shipped in great quantity to the United States and other western nations.\r\n\r\nI have never actually seen a tea company, be it a commercial tea bag producer, quality loose-leaf tea retailer like Teavana, and other online tea shops, disclose when their teas were plucked and/or shipped to them. However, I have found one tea retailer that goes above and beyond their call of duty to truly try to acquire the freshest and highest quality of tea leaves, and fully disclose all information related to tea quality:\r\n\r\n<a href=\"http://www.teatrekker.com\">Tea Trekker</a>\r\n\r\nMary Lou and Robert Heiss are the owners of this Massachusetts tea shop, and have been in the tea business for decades. They have established personal relationships with tea farmers in Asia and frequently travel to see the new season\'s pluck, as well as create more relationships with new tea farmers. This enables them to source incredibly high-quality teas and have them shipped to the United States very soon after plucking, which allows tea enthusiasts like me to purchase and drink them while knowing <em>exactly</em> when and in what region the tea leaves were plucked. This is perfect and almost necessary knowledge when trying to plan how long each tea can be stored in order to brew them while they are in the freshest state.\r\n\r\nThe Heiss\' also have a wonderful book, which much of The Societea\'s tea data is based off of:\r\n\r\n<a href=\"http://www.amazon.com/The-Tea-Enthusiasts-Handbook-Enjoying/dp/158008804X/ref=sr_1_1?ie=UTF8&amp;qid=1364663260&amp;sr=8-1&amp;keywords=the+tea+enthusiast%27s+handbook\">The Tea Enthusiast\'s Handbook</a>\r\n\r\nI have read this book front-to-back at least twice, and use it often as a reference. If you currently drink tea and wish to learn more about it, and possibly purchase high quality tea as well, then I highly encourage you to check out this book. Beware though, this is a no-fluff book which contains rock solid facts and detail; make sure you\'re in a mental state that\'s ready to learn!\r\n\r\nSo for those of you who have purchased tea in the past and are curious as to where a high-quality tea seller is, look no further; <a href=\"http://teatrekker.com\">Tea Trekker</a> has got you covered.','Where I Buy Tea','','publish','open','open','','where-i-buy-tea','','','2014-06-10 02:01:14','2014-06-10 02:01:14','',0,'http://localhost:8000/?p=142',0,'post','',1),(143,1,'2014-06-09 22:58:48','2014-06-09 22:58:48','I have been drinking tea for about 6 years now, and the quality of tea I have chosen to drink has risen throughout those years. I have moved from purchasing local grocery store tea bags to buying \"whole leaf\" tea that is still in tea bags, all the way to purchasing loose leaf teas by the ounce at local tea stores and Teavana (Amazon, too!)\r\n\r\nHowever, as I have done more research about teas, I have learned that certain teas are kept in storage better than others, and some teas are freshest only in the first year of their life. That means from the moment they\'re picked, they will only have that superior magnificence for a single year. Since the vast majority of teas (not tisanes) are produced in Asia, it typically takes a while before the new season\'s tea leaves are shipped in great quantity to the United States and other western nations.\r\n\r\nI have never actually seen a tea company, be it a commercial tea bag producer, quality loose-leaf tea retailer like Teavana, and other online tea shops, disclose when their teas were plucked and/or shipped to them. However, I have found one tea retailer that goes above and beyond their call of duty to truly try to acquire the freshest and highest quality of tea leaves, and fully disclose all information related to tea quality:\r\n\r\n<a href=\"http://www.teatrekker.com\">Tea Trekker</a>\r\n\r\nMary Lou and Robert Heiss are the owners of this Massachusetts tea shop, and have been in the tea business for decades. They have established personal relationships with tea farmers in Asia and frequently travel to see the new season\'s pluck, as well as create more relationships with new tea farmers. This enables them to source incredibly high-quality teas and have them shipped to the United States very soon after plucking, which allows tea enthusiasts like me to purchase and drink them while knowing &lt;i&gt;exactly&lt;/i&gt; when and in what region the tea leaves were plucked. This is perfect and almost necessary knowledge when trying to plan how long each tea can be stored in order to brew them while they are in the freshest state.\r\n\r\nThe Heiss\' also have a wonderful book, which much of The Societea\'s tea data is based off of:\r\n\r\n<a href=\"http://www.amazon.com/The-Tea-Enthusiasts-Handbook-Enjoying/dp/158008804X/ref=sr_1_1?ie=UTF8&amp;qid=1364663260&amp;sr=8-1&amp;keywords=the+tea+enthusiast%27s+handbook\">The Tea Enthusiast\'s Handbook</a>\r\n\r\nI have read this book front-to-back at least twice, and use it often as a reference. If you currently drink tea and wish to learn more about it, and possibly purchase high quality tea as well, then I highly encourage you to check out this book. Beware though, this is a no-fluff book which contains rock solid facts and detail; make sure you\'re in a mental state that\'s ready to learn!\r\n\r\nSo for those of you who have purchased tea in the past and are curious as to where a high-quality tea seller is, look no further; <a href=\"http://teatrekker.com\">Tea Trekker</a> has got you covered.','Where I Buy Tea','','inherit','open','open','','142-revision-v1','','','2014-06-09 22:58:48','2014-06-09 22:58:48','',142,'http://localhost:8000/?p=143',0,'revision','',0),(144,1,'2014-06-10 01:59:45','2014-06-10 01:59:45','I have been drinking tea for about 6 years now, and the quality of tea I have chosen to drink has risen throughout those years. I have moved from purchasing local grocery store tea bags to buying \"whole leaf\" tea that is still in tea bags, all the way to purchasing loose leaf teas by the ounce at local tea stores and Teavana (Amazon, too!)\r\n\r\nHowever, as I have done more research about teas, I have learned that certain teas are kept in storage better than others, and some teas are freshest only in the first year of their life. That means from the moment they\'re picked, they will only have that superior magnificence for a single year. Since the vast majority of teas (not tisanes) are produced in Asia, it typically takes a while before the new season\'s tea leaves are shipped in great quantity to the United States and other western nations.\r\n\r\nI have never actually seen a tea company, be it a commercial tea bag producer, quality loose-leaf tea retailer like Teavana, and other online tea shops, disclose when their teas were plucked and/or shipped to them. However, I have found one tea retailer that goes above and beyond their call of duty to truly try to acquire the freshest and highest quality of tea leaves, and fully disclose all information related to tea quality:\r\n\r\n<a href=\"http://www.teatrekker.com\">Tea Trekker</a>\r\n\r\nMary Lou and Robert Heiss are the owners of this Massachusetts tea shop, and have been in the tea business for decades. They have established personal relationships with tea farmers in Asia and frequently travel to see the new season\'s pluck, as well as create more relationships with new tea farmers. This enables them to source incredibly high-quality teas and have them shipped to the United States very soon after plucking, which allows tea enthusiasts like me to purchase and drink them while knowing <em>exactly</em> when and in what region the tea leaves were plucked. This is perfect and almost necessary knowledge when trying to plan how long each tea can be stored in order to brew them while they are in the freshest state.\r\n\r\nThe Heiss\' also have a wonderful book, which much of The Societea\'s tea data is based off of:\r\n\r\n<a href=\"http://www.amazon.com/The-Tea-Enthusiasts-Handbook-Enjoying/dp/158008804X/ref=sr_1_1?ie=UTF8&amp;qid=1364663260&amp;sr=8-1&amp;keywords=the+tea+enthusiast%27s+handbook\">The Tea Enthusiast\'s Handbook</a>\r\n\r\nI have read this book front-to-back at least twice, and use it often as a reference. If you currently drink tea and wish to learn more about it, and possibly purchase high quality tea as well, then I highly encourage you to check out this book. Beware though, this is a no-fluff book which contains rock solid facts and detail; make sure you\'re in a mental state that\'s ready to learn!\r\n\r\nSo for those of you who have purchased tea in the past and are curious as to where a high-quality tea seller is, look no further; <a href=\"http://teatrekker.com\">Tea Trekker</a> has got you covered.','Where I Buy Tea','','inherit','open','open','','142-revision-v1','','','2014-06-10 01:59:45','2014-06-10 01:59:45','',142,'http://localhost:8000/?p=144',0,'revision','',0),(145,1,'2014-06-10 02:32:09','2014-06-10 02:32:09','','stockvault-cabot-trail---hdr133670','','inherit','open','open','','stockvault-cabot-trail-hdr133670','','','2014-06-10 02:32:09','2014-06-10 02:32:09','',13,'http://thesocietea.org/wp-content/uploads/2014/06/stockvault-cabot-trail-hdr133670.jpg',0,'attachment','image/jpeg',0),(146,1,'2014-06-10 02:41:57','2014-06-10 02:41:57','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need.\n\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools, and have a base outli','Hire Me','','inherit','open','open','','13-autosave-v1','','','2014-06-10 02:41:57','2014-06-10 02:41:57','',13,'http://localhost:8000/?p=146',0,'revision','',0),(147,1,'2014-06-10 02:34:57','2014-06-10 02:34:57','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then you\'ve found your guy.','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-10 02:34:57','2014-06-10 02:34:57','',13,'http://localhost:8000/?p=147',0,'revision','',0),(148,1,'2014-06-10 02:43:56','2014-06-10 02:43:56','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need. Feel free to <a href=\"mailto:alkrauss48@gmail.com\">shoot me an email</a> as well.\r\n\r\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools in the past, and currently give a <a href=\"#\">talk</a> that usually ranges from 30 - 40 minutes.','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-10 02:43:56','2014-06-10 02:43:56','',13,'http://localhost:8000/?p=148',0,'revision','',0),(149,1,'2014-06-10 02:47:46','2014-06-10 02:47:46','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need. Feel free to <a href=\"mailto:alkrauss48@gmail.com\">shoot me an email</a> to learn more.\r\n\r\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools in the past, and currently give a <a href=\"#\">talk</a> that usually ranges from 30 - 40 minutes.','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-10 02:47:46','2014-06-10 02:47:46','',13,'http://localhost:8000/?p=149',0,'revision','',0),(150,1,'2014-06-10 02:50:33','2014-06-10 02:50:33','','Skills','','publish','closed','closed','','skills','','','2014-06-10 03:07:12','2014-06-10 03:07:12','',0,'http://localhost:8000/?post_type=cfs&#038;p=150',0,'cfs','',0),(151,1,'2014-06-10 04:18:26','2014-06-10 04:18:26','','Resume','','publish','open','open','','resume','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=151',4,'nav_menu_item','',0),(154,1,'2014-06-11 18:12:41','2014-06-11 18:12:41','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that vim has different modes such as insert, visual, and normal mode. Due to these different modes, vim allows you to never have to use the mouse to interact - it\'s all keyboard (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','publish','open','open','','vim-as-your-editor','','\nhttp://thesocietea.org/2014/07/how-to-learn-vim/','2014-08-29 13:33:20','2014-08-29 13:33:20','',0,'http://thesocietea.org/?p=154',0,'post','',1),(155,1,'2014-06-11 18:12:41','2014-06-11 18:12:41','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that you don\'t use the mouse to interact (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the best ways to learn Vim (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-revision-v1','','','2014-06-11 18:12:41','2014-06-11 18:12:41','',154,'http://thesocietea.org/2014/06/154-revision-v1/',0,'revision','',0),(156,1,'2014-06-17 02:42:59','2014-06-17 02:42:59','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need. Feel free to <a href=\"mailto:alkrauss48@gmail.com\">shoot me an email</a> to learn more.\r\n\r\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools in the past, and currently give a <a title=\"Programming Speaking Outline\" href=\"/assets/documents/programming_speaking_outline.pdf\" target=\"_blank\">talk</a> that usually ranges from 30 - 40 minutes.','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-17 02:42:59','2014-06-17 02:42:59','',13,'http://thesocietea.org/2014/06/13-revision-v1/',0,'revision','',0),(158,1,'2014-06-19 03:07:34','2014-06-19 03:07:34','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h3>My Initial Planning</h3>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build tool like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build/rebuild out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phases of Wordpress acceptance:\r\n\r\n<strong>Phase 1</strong> - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n<strong>Phase 2</strong> - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n<strong>Phase 3</strong> - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS just to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h3>Cons of Using a CMS</h3>\r\nThere are some things that were very important to me that I can\'t reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Slower Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control Complexity</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','publish','open','open','','what-this-site-runs-on-part-1','','','2014-06-19 03:13:57','2014-06-19 03:13:57','',0,'http://thesocietea.org/?p=158',0,'post','',1),(159,1,'2014-06-18 23:20:28','2014-06-18 23:20:28','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h4>My Initial Planning</h4>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-18 23:20:28','2014-06-18 23:20:28','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(160,1,'2014-06-18 23:46:00','2014-06-18 23:46:00','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h4>My Initial Planning</h4>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phase of Wordpress acceptance:\r\n\r\n1 - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n2 - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n3 - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h4>Cons of Using a CMS</h4>\r\nThere are some things that were very important to me that I can\'t  reap the benefits of anymore due to using a CMS\r\n\r\n<strong>Slight speed boost</strong> - Since the site now interacts with a database, it\'s certainly not faster than a purely static page being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local du','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-18 23:46:00','2014-06-18 23:46:00','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(161,1,'2014-06-19 02:57:46','2014-06-19 02:57:46','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h4>My Initial Planning</h4>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phase of Wordpress acceptance:\r\n\r\n1 - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n2 - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n3 - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h4>Cons of Using a CMS</h4>\r\nThere are some things that were very important to me that I can\'t  reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Lightning Fast Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial on a new','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 02:57:46','2014-06-19 02:57:46','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(162,1,'2014-06-19 03:00:55','2014-06-19 03:00:55','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h4>My Initial Planning</h4>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phase of Wordpress acceptance:\r\n\r\n1 - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n2 - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n3 - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h4>Cons of Using a CMS</h4>\r\nThere are some things that were very important to me that I can\'t  reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Lightning Fast Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 03:00:55','2014-06-19 03:00:55','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(163,1,'2014-06-19 03:01:24','2014-06-19 03:01:24','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h3>My Initial Planning</h3>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phase of Wordpress acceptance:\r\n\r\n1 - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n2 - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n3 - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h3>Cons of Using a CMS</h3>\r\nThere are some things that were very important to me that I can\'t  reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Lightning Fast Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 03:01:24','2014-06-19 03:01:24','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(164,1,'2014-06-19 03:06:54','2014-06-19 03:06:54','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h3>My Initial Planning</h3>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build tool like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build/rebuild out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phases of Wordpress acceptance:\r\n\r\n<strong>Phase 1</strong> - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n<strong>Phase 2</strong> - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n<strong>Phase 3</strong> - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS just to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h3>Cons of Using a CMS</h3>\r\nThere are some things that were very important to me that I can\'t reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Lightning Fast Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 03:06:54','2014-06-19 03:06:54','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(165,1,'2014-06-19 03:13:57','2014-06-19 03:13:57','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h3>My Initial Planning</h3>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build tool like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build/rebuild out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phases of Wordpress acceptance:\r\n\r\n<strong>Phase 1</strong> - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n<strong>Phase 2</strong> - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n<strong>Phase 3</strong> - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS just to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h3>Cons of Using a CMS</h3>\r\nThere are some things that were very important to me that I can\'t reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Slower Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control Complexity</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 03:13:57','2014-06-19 03:13:57','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(167,1,'2014-06-30 18:11:26','2014-06-30 18:11:26','Now that we\'ve established that this site is running on Wordpress (wondering why I made that choice? <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\">Read about it</a>), I want to delve in further to talk about what else I\'m using, and the tools I used to build this site. We\'ll start off with languages, language plugins, and then general dev tools.\r\n<h2>Languages</h2>\r\nNo big surprises here:\r\n<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>Javascript</li>\r\n	<li>PHP</li>\r\n</ul>\r\n<h2>Language Plugins</h2>\r\n<a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> - I think this is a given.\r\n\r\n<a title=\"Sass\" href=\"http://sass-lang.com/\" target=\"_blank\">Sass</a> - Sass is a preprocessor for CSS which gives you a bunch of extra neat CSS enhancements such as modular mixins, functions, variables, style nesting, and even conditionals. It\'s ruby gem, so it integrates very well with Rails projects.\r\n\r\n<a title=\"Compass\" href=\"http://compass-style.org/\" target=\"_blank\">Compass</a> - Compass is a sass framework that gives you a lot of baseline modules for you to include in your CSS. I use it mostly so I don\'t have to write the same style 4 times when all that\'s changing are the prefix (incredibly handy for gradients).\r\n\r\n<a title=\"Susy\" href=\"http://susy.oddbird.net/\" target=\"_blank\">Susy</a> - Susy is a sass plugin that gives you grid control over your web page. No longer do you have to worry about floating and clearfixing things yourself, Susy will do that for you (and it makes for very, very easy responsive design).\r\n\r\n<a title=\"Skrollr\" href=\"https://github.com/Prinzhorn/skrollr\" target=\"_blank\">Skrollr</a> - Skrollr is a javascript parallax plugin. I use it largely on the <a title=\"About\" href=\"http://thesocietea.org/about/\" target=\"_blank\">about</a> page, but you can see it on every subpage header, and the home page. Very, very easy to use, given how powerful it is.\r\n\r\n<a title=\"Sidr\" href=\"http://www.berriart.com/sidr/\" target=\"_blank\">Sidr</a> - javascript plugin for the responsive nav. Don\'t know what I\'m talking about? View the site on a tablet, phone, or just shrink the screen down and see how the nav changes.\r\n\r\n<a title=\"Typed.js\" href=\"http://www.mattboldt.com/demos/typed-js/\" target=\"_blank\">Typed.js</a> - javascript plugin for the typing animation that you see at the top of the home page. It\'s a really cool effect, and the plugin is really simple to use.\r\n\r\n<a title=\"Magnific Popup\" href=\"http://dimsemenov.com/plugins/magnific-popup/\" target=\"_blank\">Magnific Popup</a> - javascript plugin for the lightbox functionality - you can see this on my <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page. Lightboxes allow you to show thumbnails on your page which are much smaller in size than the real image itself; this allows you to have a speedy page load and only load your images when the user shows they want to see them. It\'s responsive by default, and, yup you guessed it, very simple to use.\r\n<h2>Dev Tools</h2>\r\n<a title=\"Nginx\" href=\"http://nginx.com/\" target=\"_blank\">Nginx</a> - Lightning quick web server to serve up my pages. It\'s usually this or apache, and nginx always wins in my book.\r\n\r\n<a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">Grunt</a> - Grunt is a build automation tool which does so, so much for me. It automatically handles all of my SASS compilation and CSS minification, Coffeescript compilation and JS minification, image minification, and more. If you haven\'t looked into a build automation tool before, I highly recommend you look into Grunt. Your productivity will skyrocket.\r\n\r\nImage Minification - Not really a tool, but I specifically minified every single image on my site through Photoshop, and further through Grunt\'s <a title=\"Image Min\" href=\"https://github.com/gruntjs/grunt-contrib-imagemin\" target=\"_blank\">image min</a> plugin. Just as an example, my home page has over 10 images, and combined with the entire page load including CSS and JS, it\'s not even half a megabyte. Without image minification, that could easily top several megabytes. Check out the <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page too - it has almost 40 images and the whole page load is just barely over a megabyte!\r\n\r\n<a title=\"Real Favicon Generator\" href=\"http://realfavicongenerator.net/\" target=\"_blank\">Real Favicon Generator</a> - This favicon generator takes a square image that you have and builds out the 20+ favicons that your site needs to look good on every single device. It even gives you several tips and suggestions along the way.\r\n\r\n<a title=\"Vim\" href=\"http://www.vim.org/\" target=\"_blank\">Vim</a>, <a title=\"Zsh\" href=\"http://www.zsh.org/\" target=\"_blank\">Zsh</a>, and <a title=\"Tmux\" href=\"http://tmux.sourceforge.net/\" target=\"_blank\">Tmux</a> - I won\'t explain these since they\'re not related specifically to this site, but these 3 tools alone keep me incredibly productive.\r\n\r\nAnd that\'s it! Everything that my site currently runs on has been listed here and in the <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\" target=\"_blank\">previous blog post</a>. Hope you enjoyed reading about my tools, and let me know if you have anything else I should be checking out!','What This Site Runs On - Part 2','','publish','open','open','','what-this-site-runs-on-part-2','','http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\nhttp://thesocietea.org/about/','2014-06-30 18:15:25','2014-06-30 18:15:25','',0,'http://thesocietea.org/?p=167',0,'post','',0),(168,1,'2014-06-30 17:57:14','2014-06-30 17:57:14','Now that we\'ve established that this site is running on Wordpress (wondering why I made that choice? <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\">Read about it</a>), I want to delve in further to talk about what else I\'m using, and the tools I used to build this site. We\'ll start off with languages, language plugins, and then general dev tools.\r\n<h2>Languages</h2>\r\nNo big surprises here:\r\n<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>Javascript</li>\r\n	<li>PHP</li>\r\n</ul>\r\n<h2>Language Plugins</h2>\r\n<a title=\"Sass\" href=\"http://sass-lang.com/\" target=\"_blank\">Sass</a> - Sass is a preprocessor for CSS which gives you a bunch of extra neat CSS options such as modular mixins, functions, variables, style nesting, and even conditionals. It\'s ruby gem, so it integrates very well with Rails projects.\r\n\r\n<a title=\"Compass\" href=\"http://compass-style.org/\" target=\"_blank\">Compass</a> - Compass is a sass framework that gives you a lot of baseline modules for you to include in your CSS. I use it mostly so I don\'t have to write the same style 4 times when all that\'s changing are the prefix (incredibly handy for gradients).\r\n\r\n<a title=\"Susy\" href=\"http://susy.oddbird.net/\" target=\"_blank\">Susy</a> - Susy is a sass plugin that gives you grid control over your web page. No longer do you have to worry about floating and cleaffixing things yourself, Susy will do that for you (and it makes for very, very easy responsive design).\r\n\r\n<a title=\"Skrollr\" href=\"https://github.com/Prinzhorn/skrollr\" target=\"_blank\">Skrollr</a> - Skrollr is a javascript parallax plugin. I use it largely on the <a title=\"About\" href=\"http://thesocietea.org/about/\" target=\"_blank\">about</a> page, but you can see it on every subpage header, and the home page. Very, very easy to use, given how powerful it is.\r\n\r\n<a title=\"Sidr\" href=\"http://www.berriart.com/sidr/\" target=\"_blank\">Sidr</a> - javascript plugin for the responsive nav. Don\'t know what I\'m talking about? View the site on a tablet, phone, or just shrink the screen down and see how the nav changes.\r\n\r\n<a title=\"Typed.js\" href=\"http://www.mattboldt.com/demos/typed-js/\" target=\"_blank\">Typed.js</a> - javascript plugin for the typing animation that you see at the top of the home page. It\'s a really cool effect, and the plugin is really simple to use.\r\n\r\n<a title=\"Magnific Popup\" href=\"http://dimsemenov.com/plugins/magnific-popup/\" target=\"_blank\">Magnific Popup</a> - javascript plugin for the lightbox functionality - you can see this on my <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page. Lightboxes allow you to show thumbnails on your page which are much smaller in size than the real image itself; this allows you to have a speedy page load and only load your images when the user shows they want to see them. It\'s responsive by default, and, yup you guessed it, very simple to use.','What This Site Runs On - Part 2','','inherit','open','open','','167-revision-v1','','','2014-06-30 17:57:14','2014-06-30 17:57:14','',167,'http://thesocietea.org/2014/06/167-revision-v1/',0,'revision','',0),(169,1,'2014-06-30 18:11:26','2014-06-30 18:11:26','Now that we\'ve established that this site is running on Wordpress (wondering why I made that choice? <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\">Read about it</a>), I want to delve in further to talk about what else I\'m using, and the tools I used to build this site. We\'ll start off with languages, language plugins, and then general dev tools.\r\n<h2>Languages</h2>\r\nNo big surprises here:\r\n<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>Javascript</li>\r\n	<li>PHP</li>\r\n</ul>\r\n<h2>Language Plugins</h2>\r\n<a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> - I think this is a given.\r\n\r\n<a title=\"Sass\" href=\"http://sass-lang.com/\" target=\"_blank\">Sass</a> - Sass is a preprocessor for CSS which gives you a bunch of extra neat CSS enhancements such as modular mixins, functions, variables, style nesting, and even conditionals. It\'s ruby gem, so it integrates very well with Rails projects.\r\n\r\n<a title=\"Compass\" href=\"http://compass-style.org/\" target=\"_blank\">Compass</a> - Compass is a sass framework that gives you a lot of baseline modules for you to include in your CSS. I use it mostly so I don\'t have to write the same style 4 times when all that\'s changing are the prefix (incredibly handy for gradients).\r\n\r\n<a title=\"Susy\" href=\"http://susy.oddbird.net/\" target=\"_blank\">Susy</a> - Susy is a sass plugin that gives you grid control over your web page. No longer do you have to worry about floating and clearfixing things yourself, Susy will do that for you (and it makes for very, very easy responsive design).\r\n\r\n<a title=\"Skrollr\" href=\"https://github.com/Prinzhorn/skrollr\" target=\"_blank\">Skrollr</a> - Skrollr is a javascript parallax plugin. I use it largely on the <a title=\"About\" href=\"http://thesocietea.org/about/\" target=\"_blank\">about</a> page, but you can see it on every subpage header, and the home page. Very, very easy to use, given how powerful it is.\r\n\r\n<a title=\"Sidr\" href=\"http://www.berriart.com/sidr/\" target=\"_blank\">Sidr</a> - javascript plugin for the responsive nav. Don\'t know what I\'m talking about? View the site on a tablet, phone, or just shrink the screen down and see how the nav changes.\r\n\r\n<a title=\"Typed.js\" href=\"http://www.mattboldt.com/demos/typed-js/\" target=\"_blank\">Typed.js</a> - javascript plugin for the typing animation that you see at the top of the home page. It\'s a really cool effect, and the plugin is really simple to use.\r\n\r\n<a title=\"Magnific Popup\" href=\"http://dimsemenov.com/plugins/magnific-popup/\" target=\"_blank\">Magnific Popup</a> - javascript plugin for the lightbox functionality - you can see this on my <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page. Lightboxes allow you to show thumbnails on your page which are much smaller in size than the real image itself; this allows you to have a speedy page load and only load your images when the user shows they want to see them. It\'s responsive by default, and, yup you guessed it, very simple to use.\r\n<h2>Dev Tools</h2>\r\n<a title=\"Nginx\" href=\"http://nginx.com/\" target=\"_blank\">Nginx</a> - Lightning quick web server to serve up my pages. It\'s usually this or apache, and nginx always wins in my book.\r\n\r\n<a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">Grunt</a> - Grunt is a build automation tool which does so, so much for me. It automatically handles all of my SASS compilation and CSS minification, Coffeescript compilation and JS minification, image minification, and more. If you haven\'t looked into a build automation tool before, I highly recommend you look into Grunt. Your productivity will skyrocket.\r\n\r\nImage Minification - Not really a tool, but I specifically minified every single image on my site through Photoshop, and further through Grunt\'s <a title=\"Image Min\" href=\"https://github.com/gruntjs/grunt-contrib-imagemin\" target=\"_blank\">image min</a> plugin. Just as an example, my home page has over 10 images, and combined with the entire page load including CSS and JS, it\'s not even half a megabyte. Without image minification, that could easily top several megabytes. Check out the <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page too - it has almost 40 images and the whole page load is just barely over a megabyte!\r\n\r\n<a title=\"Real Favicon Generator\" href=\"http://realfavicongenerator.net/\" target=\"_blank\">Real Favicon Generator</a> - This favicon generator takes a square image that you have and builds out the 20+ favicons that your site needs to look good on every single device. It even gives you several tips and suggestions along the way.\r\n\r\n<a title=\"Vim\" href=\"http://www.vim.org/\" target=\"_blank\">Vim</a>, <a title=\"Zsh\" href=\"http://www.zsh.org/\" target=\"_blank\">Zsh</a>, and <a title=\"Tmux\" href=\"http://tmux.sourceforge.net/\" target=\"_blank\">Tmux</a> - I won\'t explain these since they\'re not related to specifically to this site, but these 3 tools alone keep me incredibly productive.\r\n\r\nAnd that\'s it! Everything that my site currently runs on has been listed here and in the <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\" target=\"_blank\">previous blog post</a>. Hope you enjoyed reading about my tools, and let me know if you have anything else I should be checking out!','What This Site Runs On - Part 2','','inherit','open','open','','167-revision-v1','','','2014-06-30 18:11:26','2014-06-30 18:11:26','',167,'http://thesocietea.org/2014/06/167-revision-v1/',0,'revision','',0),(170,1,'2014-06-30 18:15:25','2014-06-30 18:15:25','Now that we\'ve established that this site is running on Wordpress (wondering why I made that choice? <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\">Read about it</a>), I want to delve in further to talk about what else I\'m using, and the tools I used to build this site. We\'ll start off with languages, language plugins, and then general dev tools.\r\n<h2>Languages</h2>\r\nNo big surprises here:\r\n<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>Javascript</li>\r\n	<li>PHP</li>\r\n</ul>\r\n<h2>Language Plugins</h2>\r\n<a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> - I think this is a given.\r\n\r\n<a title=\"Sass\" href=\"http://sass-lang.com/\" target=\"_blank\">Sass</a> - Sass is a preprocessor for CSS which gives you a bunch of extra neat CSS enhancements such as modular mixins, functions, variables, style nesting, and even conditionals. It\'s ruby gem, so it integrates very well with Rails projects.\r\n\r\n<a title=\"Compass\" href=\"http://compass-style.org/\" target=\"_blank\">Compass</a> - Compass is a sass framework that gives you a lot of baseline modules for you to include in your CSS. I use it mostly so I don\'t have to write the same style 4 times when all that\'s changing are the prefix (incredibly handy for gradients).\r\n\r\n<a title=\"Susy\" href=\"http://susy.oddbird.net/\" target=\"_blank\">Susy</a> - Susy is a sass plugin that gives you grid control over your web page. No longer do you have to worry about floating and clearfixing things yourself, Susy will do that for you (and it makes for very, very easy responsive design).\r\n\r\n<a title=\"Skrollr\" href=\"https://github.com/Prinzhorn/skrollr\" target=\"_blank\">Skrollr</a> - Skrollr is a javascript parallax plugin. I use it largely on the <a title=\"About\" href=\"http://thesocietea.org/about/\" target=\"_blank\">about</a> page, but you can see it on every subpage header, and the home page. Very, very easy to use, given how powerful it is.\r\n\r\n<a title=\"Sidr\" href=\"http://www.berriart.com/sidr/\" target=\"_blank\">Sidr</a> - javascript plugin for the responsive nav. Don\'t know what I\'m talking about? View the site on a tablet, phone, or just shrink the screen down and see how the nav changes.\r\n\r\n<a title=\"Typed.js\" href=\"http://www.mattboldt.com/demos/typed-js/\" target=\"_blank\">Typed.js</a> - javascript plugin for the typing animation that you see at the top of the home page. It\'s a really cool effect, and the plugin is really simple to use.\r\n\r\n<a title=\"Magnific Popup\" href=\"http://dimsemenov.com/plugins/magnific-popup/\" target=\"_blank\">Magnific Popup</a> - javascript plugin for the lightbox functionality - you can see this on my <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page. Lightboxes allow you to show thumbnails on your page which are much smaller in size than the real image itself; this allows you to have a speedy page load and only load your images when the user shows they want to see them. It\'s responsive by default, and, yup you guessed it, very simple to use.\r\n<h2>Dev Tools</h2>\r\n<a title=\"Nginx\" href=\"http://nginx.com/\" target=\"_blank\">Nginx</a> - Lightning quick web server to serve up my pages. It\'s usually this or apache, and nginx always wins in my book.\r\n\r\n<a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">Grunt</a> - Grunt is a build automation tool which does so, so much for me. It automatically handles all of my SASS compilation and CSS minification, Coffeescript compilation and JS minification, image minification, and more. If you haven\'t looked into a build automation tool before, I highly recommend you look into Grunt. Your productivity will skyrocket.\r\n\r\nImage Minification - Not really a tool, but I specifically minified every single image on my site through Photoshop, and further through Grunt\'s <a title=\"Image Min\" href=\"https://github.com/gruntjs/grunt-contrib-imagemin\" target=\"_blank\">image min</a> plugin. Just as an example, my home page has over 10 images, and combined with the entire page load including CSS and JS, it\'s not even half a megabyte. Without image minification, that could easily top several megabytes. Check out the <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page too - it has almost 40 images and the whole page load is just barely over a megabyte!\r\n\r\n<a title=\"Real Favicon Generator\" href=\"http://realfavicongenerator.net/\" target=\"_blank\">Real Favicon Generator</a> - This favicon generator takes a square image that you have and builds out the 20+ favicons that your site needs to look good on every single device. It even gives you several tips and suggestions along the way.\r\n\r\n<a title=\"Vim\" href=\"http://www.vim.org/\" target=\"_blank\">Vim</a>, <a title=\"Zsh\" href=\"http://www.zsh.org/\" target=\"_blank\">Zsh</a>, and <a title=\"Tmux\" href=\"http://tmux.sourceforge.net/\" target=\"_blank\">Tmux</a> - I won\'t explain these since they\'re not related specifically to this site, but these 3 tools alone keep me incredibly productive.\r\n\r\nAnd that\'s it! Everything that my site currently runs on has been listed here and in the <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\" target=\"_blank\">previous blog post</a>. Hope you enjoyed reading about my tools, and let me know if you have anything else I should be checking out!','What This Site Runs On - Part 2','','inherit','open','open','','167-revision-v1','','','2014-06-30 18:15:25','2014-06-30 18:15:25','',167,'http://thesocietea.org/2014/06/167-revision-v1/',0,'revision','',0),(172,1,'2014-07-11 02:03:02','2014-07-11 02:03:02','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible site means ensuring that all users - whether disabled in some way or not - can not only access your site but also interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind deficiencies, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s get into the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Use Semantic HTML5 Elements</h2>\r\nHTML5 added some new descriptive container elements that you should learn about if you don\'t know them already. These include nav, section, header, footer, article, and aside. Each of them function just like a div, but have different semantic meanings. For example, <em>nav</em> should be used for your page\'s navigation, <em>aside</em> should be used for non-relavant content, <em>section</em> is a large container which can contain a <em>header, footer, </em>and multiple <em>articles</em>, etc.\r\n\r\nWhile an average user won\'t usually see the difference, it makes for better design architecture, enhances your browser\'s understanding of the content inside of these containers, and allows for more rich screen reading.\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when a link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine are structured like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranomoly, which means they have difficulties seeing green. To learn more about the different types (Protanomoly, Deuteranomoly, Tritanomoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments. I have been using this extensively to test color issues on my web pages, and it\'s been incredibly insightful to see what real colorblind users see.\r\n\r\n<hr class=\"short\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed anything huge in this post.','Developing for Accessibility','','publish','open','open','','developing-for-accessibility','','\nhttp://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/','2014-07-11 21:37:10','2014-07-11 21:37:10','',0,'http://thesocietea.org/?p=172',0,'post','',0),(173,1,'2014-07-11 01:42:00','2014-07-11 01:42:00','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"color: #444444;\">[code language=\"html\"]</span><br style=\"color: #444444;\" />&lt;img src=\"some-source\" alt=\"A cool image of a penguin. Just chillin.\" /&gt;<br style=\"color: #444444;\" /><span style=\"color: #444444;\">[/code]</span>','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:42:00','2014-07-11 01:42:00','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(174,1,'2014-07-11 01:51:21','2014-07-11 01:51:21','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[code language=\"html\"]&lt;/span&gt;&lt;br style=&quot;color: #444444;&quot; /&gt;&amp;lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&amp;gt;&lt;br style=&quot;color: #444444;&quot; /&gt;&lt;span style=&quot;color: #444444;&quot;&gt;[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:51:21','2014-07-11 01:51:21','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(175,1,'2014-07-11 01:51:52','2014-07-11 01:51:52','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:51:52','2014-07-11 01:51:52','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(176,1,'2014-07-11 01:54:15','2014-07-11 01:54:15','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[php]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/php]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:54:15','2014-07-11 01:54:15','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(177,1,'2014-07-11 01:55:01','2014-07-11 01:55:01','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n\r\n[html]\r\n&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;\r\n[/html]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:55:01','2014-07-11 01:55:01','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(178,1,'2014-07-11 01:55:23','2014-07-11 01:55:23','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]\r\n&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;&lt;/pre&gt;\r\n&lt;pre&gt;&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;&lt;/pre&gt;\r\n&lt;pre&gt;&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;&lt;/pre&gt;\r\n&lt;pre&gt;\r\n[/html]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:55:23','2014-07-11 01:55:23','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(179,1,'2014-07-11 01:57:09','2014-07-11 01:57:09','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]\r\n&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;\r\n[/html]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:57:09','2014-07-11 01:57:09','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(180,1,'2014-07-11 02:02:38','2014-07-11 02:02:38','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n\r\n[code lang=\"js\"]your code here[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:02:38','2014-07-11 02:02:38','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(181,1,'2014-07-11 02:02:53','2014-07-11 02:02:53','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n\r\n[code lang=\"js\"]var test;[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:02:53','2014-07-11 02:02:53','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(182,1,'2014-07-11 02:03:42','2014-07-11 02:03:42','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[code lang=\"js\"]var test;[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:03:42','2014-07-11 02:03:42','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(183,1,'2014-07-11 02:07:34','2014-07-11 02:07:34','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n<pre>```javascript\r\nvar test;\r\n```</pre>','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:07:34','2014-07-11 02:07:34','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(184,1,'2014-07-11 02:07:49','2014-07-11 02:07:49','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[code lang=\"js\"]`\r\nvar test;[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:07:49','2014-07-11 02:07:49','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(185,1,'2014-07-11 02:09:52','2014-07-11 02:09:52','<p>Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:</p>\n\n<h3>Image and Link Attributes If there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:</h3>\n\n<pre>```javascript\nvar test;\n```</pre>\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:09:52','2014-07-11 02:09:52','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(186,1,'2014-07-11 02:10:12','2014-07-11 02:10:12','<p>Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:</p>\n\n<h3>Image and Link Attributes</h3>\n\n<p>If there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:</p>\n\n<p><code>javascript\nvar test;</code></p>\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:10:12','2014-07-11 02:10:12','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(187,1,'2014-07-11 02:10:24','2014-07-11 02:10:24','<p>Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:</p>\n\n<h3>Image and Link Attributes</h3>\n\n<p>If there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:</p>\n\n<p><code>var test;</code></p>\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:10:24','2014-07-11 02:10:24','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(188,1,'2014-07-11 02:11:36','2014-07-11 02:11:36','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<code>var test;</code>','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:11:36','2014-07-11 02:11:36','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(189,1,'2014-07-11 18:14:59','2014-07-11 18:14:59','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n[css autolinks=\"false\" classname=\"myclass\" collapse=\"false\" firstline=\"1\" gutter=\"true\" highlight=\"1-3,6,9\" htmlscript=\"false\" light=\"false\" padlinenumbers=\"false\" smarttabs=\"true\" tabsize=\"4\" toolbar=\"true\" title=\"example-filename.php\"]your code here[/css]\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:14:59','2014-07-11 18:14:59','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(190,1,'2014-07-11 18:22:54','2014-07-11 18:22:54','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\"> </span>\r\n\r\n[css autolinks=\"false\" classname=\"myclass\" collapse=\"false\" firstline=\"1\" gutter=\"true\" highlight=\"1-3,6,9\" htmlscript=\"false\" light=\"false\" padlinenumbers=\"false\" smarttabs=\"true\" tabsize=\"4\" toolbar=\"true\" title=\"example-filename.php\"]your code here[/css]\r\n\r\n\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:22:54','2014-07-11 18:22:54','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(191,1,'2014-07-11 18:23:55','2014-07-11 18:23:55','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\"> </span>\r\n\r\n[css autolinks=\"false\" classname=\"myclass\" collapse=\"false\" firstline=\"1\" gutter=\"true\" highlight=\"1-3,6,9\" htmlscript=\"false\" light=\"false\" padlinenumbers=\"false\" smarttabs=\"true\" tabsize=\"4\" toolbar=\"true\" title=\"example-filename.php\"]your code here[/css]\r\n\r\n\r\n\r\n[html 1=\"&lt;pre&gt;padlinenumbers=&quot;true&quot;&lt;/pre&gt;\" 2=\"&lt;pre&gt;\" language=\"&lt;/pre&gt;\"]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:23:55','2014-07-11 18:23:55','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(192,1,'2014-07-11 18:24:15','2014-07-11 18:24:15','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\"> </span>\r\n\r\n[css autolinks=\"false\" classname=\"myclass\" collapse=\"false\" firstline=\"1\" gutter=\"true\" highlight=\"1-3,6,9\" htmlscript=\"false\" light=\"false\" padlinenumbers=\"false\" smarttabs=\"true\" tabsize=\"4\" toolbar=\"true\"]your code here[/css]\r\n\r\n\r\n\r\n[html 1=\"&lt;pre&gt;padlinenumbers=&quot;true&quot;&lt;/pre&gt;\" 2=\"&lt;pre&gt;\" language=\"&lt;/pre&gt;\"]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:24:15','2014-07-11 18:24:15','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(193,1,'2014-07-11 18:25:09','2014-07-11 18:25:09','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n&nbsp;\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:25:09','2014-07-11 18:25:09','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(194,1,'2014-07-11 18:27:45','2014-07-11 18:27:45','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:27:45','2014-07-11 18:27:45','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(195,1,'2014-07-11 20:58:21','2014-07-11 20:58:21','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h3>Noticeable Focus Status for Links</h3>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]&lt;/pre&gt;\r\n&lt;pre&gt;&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 20:58:21','2014-07-11 20:58:21','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(196,1,'2014-07-11 20:59:13','2014-07-11 20:59:13','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h3>Noticeable Focus Status for Links</h3>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 20:59:13','2014-07-11 20:59:13','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(197,1,'2014-07-11 20:59:48','2014-07-11 20:59:48','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 20:59:48','2014-07-11 20:59:48','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(198,1,'2014-07-11 21:19:01','2014-07-11 21:19:01','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:19:01','2014-07-11 21:19:01','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(199,1,'2014-07-11 21:21:26','2014-07-11 21:21:26','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:21:26','2014-07-11 21:21:26','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(200,1,'2014-07-11 21:21:46','2014-07-11 21:21:46','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:21:46','2014-07-11 21:21:46','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(201,1,'2014-07-11 21:22:12','2014-07-11 21:22:12','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to in the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:22:12','2014-07-11 21:22:12','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(202,1,'2014-07-11 21:22:26','2014-07-11 21:22:26','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:22:26','2014-07-11 21:22:26','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(203,1,'2014-07-11 21:28:37','2014-07-11 21:28:37','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible site means ensuring that all users - whether disabled in some way or not - can not only access your site but also interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Use Semantic HTML5 Elements</h2>\r\nHTML5 added some new descriptive container elements that you should learn about if you don\'t know them already. These include nav, section, header, footer, article, and aside. Each of them function just like a div, but have different semantic meanings. For example, <em>nav</em> should be used for your page\'s navigation, <em>aside</em> should be used for non-relavant content, <em>section</em> is a large container which can contain a <em>header, footer, </em>and multiple <em>articles</em>, etc.\r\n\r\nWhile an average user won\'t usually see the difference, it makes for better design architecture, enhances your browser\'s understanding for the content inside of these containers, and allows for more rich screen reading.\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:28:37','2014-07-11 21:28:37','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(204,1,'2014-07-11 21:34:50','2014-07-11 21:34:50','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible site means ensuring that all users - whether disabled in some way or not - can not only access your site but also interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind deficiencies, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s get into the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Use Semantic HTML5 Elements</h2>\r\nHTML5 added some new descriptive container elements that you should learn about if you don\'t know them already. These include nav, section, header, footer, article, and aside. Each of them function just like a div, but have different semantic meanings. For example, <em>nav</em> should be used for your page\'s navigation, <em>aside</em> should be used for non-relavant content, <em>section</em> is a large container which can contain a <em>header, footer, </em>and multiple <em>articles</em>, etc.\r\n\r\nWhile an average user won\'t usually see the difference, it makes for better design architecture, enhances your browser\'s understanding of the content inside of these containers, and allows for more rich screen reading.\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when a link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine are structured like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranomoly, which means they have difficulties seeing green. To learn more about the different types (Protanomoly, Deuteranomoly, Tritanomoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments. I have been using this extensively to test color issues on my web pages, and it\'s been incredibly insightful to see what real colorblind users see.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed anything huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:34:50','2014-07-11 21:34:50','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(205,1,'2014-07-11 21:35:37','2014-07-11 21:35:37','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible site means ensuring that all users - whether disabled in some way or not - can not only access your site but also interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind deficiencies, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s get into the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Use Semantic HTML5 Elements</h2>\r\nHTML5 added some new descriptive container elements that you should learn about if you don\'t know them already. These include nav, section, header, footer, article, and aside. Each of them function just like a div, but have different semantic meanings. For example, <em>nav</em> should be used for your page\'s navigation, <em>aside</em> should be used for non-relavant content, <em>section</em> is a large container which can contain a <em>header, footer, </em>and multiple <em>articles</em>, etc.\r\n\r\nWhile an average user won\'t usually see the difference, it makes for better design architecture, enhances your browser\'s understanding of the content inside of these containers, and allows for more rich screen reading.\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when a link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine are structured like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranomoly, which means they have difficulties seeing green. To learn more about the different types (Protanomoly, Deuteranomoly, Tritanomoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments. I have been using this extensively to test color issues on my web pages, and it\'s been incredibly insightful to see what real colorblind users see.\r\n\r\n<hr class=\"short\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed anything huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:35:37','2014-07-11 21:35:37','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(206,1,'2014-07-14 22:27:34','2014-07-14 22:27:34','','big-json-1','','inherit','open','open','','big-json-1','','','2014-07-14 22:27:34','2014-07-14 22:27:34','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-json-1.jpg',0,'attachment','image/jpeg',0),(207,1,'2014-07-14 22:27:34','2014-07-14 22:27:34','','big-json-2','','inherit','open','open','','big-json-2','','','2014-07-14 22:27:34','2014-07-14 22:27:34','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-json-2.jpg',0,'attachment','image/jpeg',0),(208,1,'2014-07-14 22:27:35','2014-07-14 22:27:35','','big-json-3','','inherit','open','open','','big-json-3','','','2014-07-14 22:27:35','2014-07-14 22:27:35','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-json-3.jpg',0,'attachment','image/jpeg',0),(209,1,'2014-07-14 22:27:35','2014-07-14 22:27:35','','big-json-4','','inherit','open','open','','big-json-4','','','2014-07-14 22:27:35','2014-07-14 22:27:35','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-json-4.jpg',0,'attachment','image/jpeg',0),(210,1,'2014-07-14 22:27:45','2014-07-14 22:27:45','','th-json-1','','inherit','open','open','','th-json-1','','','2014-07-14 22:27:45','2014-07-14 22:27:45','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-json-1.jpg',0,'attachment','image/jpeg',0),(211,1,'2014-07-14 22:27:45','2014-07-14 22:27:45','','th-json-2','','inherit','open','open','','th-json-2','','','2014-07-14 22:27:45','2014-07-14 22:27:45','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-json-2.jpg',0,'attachment','image/jpeg',0),(212,1,'2014-07-14 22:27:46','2014-07-14 22:27:46','','th-json-3','','inherit','open','open','','th-json-3','','','2014-07-14 22:27:46','2014-07-14 22:27:46','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-json-3.jpg',0,'attachment','image/jpeg',0),(213,1,'2014-07-14 22:27:46','2014-07-14 22:27:46','','th-json-4','','inherit','open','open','','th-json-4','','','2014-07-14 22:27:46','2014-07-14 22:27:46','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-json-4.jpg',0,'attachment','image/jpeg',0),(214,1,'2014-07-14 22:30:01','2014-07-14 22:30:01','','JSON API Websocket Wrapper','','publish','closed','closed','','json-api-websocket-wrapper','','','2014-08-18 22:11:18','2014-08-18 22:11:18','',0,'http://thesocietea.org/?post_type=project&#038;p=214',3,'project','',0),(215,1,'2014-07-14 22:36:58','2014-07-14 22:36:58','','big-77-1','','inherit','open','open','','big-77-1-2','','','2014-07-14 22:36:58','2014-07-14 22:36:58','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-77-1.jpg',0,'attachment','image/jpeg',0),(216,1,'2014-07-14 22:36:59','2014-07-14 22:36:59','','big-77-responsive','','inherit','open','open','','big-77-responsive-2','','','2014-07-14 22:36:59','2014-07-14 22:36:59','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-77-responsive.jpg',0,'attachment','image/jpeg',0),(217,1,'2014-07-14 22:36:59','2014-07-14 22:36:59','','th-77-1','','inherit','open','open','','th-77-1-2','','','2014-07-14 22:36:59','2014-07-14 22:36:59','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-77-1.jpg',0,'attachment','image/jpeg',0),(218,1,'2014-07-14 22:37:00','2014-07-14 22:37:00','','th-77-responsive','','inherit','open','open','','th-77-responsive-2','','','2014-07-14 22:37:00','2014-07-14 22:37:00','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-77-responsive.jpg',0,'attachment','image/jpeg',0),(220,1,'2014-07-24 18:18:14','2014-07-24 18:18:14','Finally, 7 months later, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning vim (which would be <em>awesome</em>), or you just came here of your own random volition. Either works for me, but if you have heard of vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\n<strong>Prerequisite</strong>: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<img class=\"alignnone wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" />\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn vim, and if so, then continue using it to get familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and is a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it as your editor.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a section of code for pasting), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe vim community is very, very active and is completely focused on productivity. You can find vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','publish','open','open','','how-to-learn-vim','','\nhttp://thesocietea.org/2014/06/vim-as-your-editor/','2014-08-22 17:46:28','2014-08-22 17:46:28','',0,'http://thesocietea.org/?p=220',0,'post','',0),(221,1,'2014-07-24 17:40:24','2014-07-24 17:40:24','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n\r\n[shell]vimtutor[/shell]\r\n','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 17:40:24','2014-07-24 17:40:24','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(222,1,'2014-07-24 17:45:13','2014-07-24 17:45:13','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n\r\n[shell]vimtutor[/shell]\r\n\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 17:45:13','2014-07-24 17:45:13','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(223,1,'2014-07-24 17:54:44','2014-07-24 17:54:44','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n<h2>Plugins</h2>\r\nThe Vim community is very, very active and is completely focused on productivity.','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 17:54:44','2014-07-24 17:54:44','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(224,1,'2014-07-24 18:00:17','2014-07-24 18:00:17','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe Vim community is very, very active and is completely focused on productivity. You can find Vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base Vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, Git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (Very similar to a ruby Gemfile).','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:00:17','2014-07-24 18:00:17','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(225,1,'2014-07-24 18:08:45','2014-07-24 18:08:45','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe Vim community is very, very active and is completely focused on productivity. You can find Vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base Vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, Git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (Very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:08:45','2014-07-24 18:08:45','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(226,1,'2014-07-24 18:11:37','2014-07-24 18:11:37','','vim_tutor','','inherit','open','open','','vim_tutor','','','2014-07-24 18:11:37','2014-07-24 18:11:37','',220,'http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg',0,'attachment','image/jpeg',0),(227,1,'2014-07-24 18:11:51','2014-07-24 18:11:51','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<a href=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\"><img class=\"alignright wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" /></a>\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe Vim community is very, very active and is completely focused on productivity. You can find Vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base Vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, Git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (Very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:11:51','2014-07-24 18:11:51','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(228,1,'2014-07-24 18:12:24','2014-07-24 18:12:24','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<a href=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\"><img class=\"alignnone wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" /></a>\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe Vim community is very, very active and is completely focused on productivity. You can find Vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base Vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, Git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (Very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:12:24','2014-07-24 18:12:24','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(229,1,'2014-07-24 18:18:14','2014-07-24 18:18:14','Finally, 7 months later, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning vim (which would be <em>awesome</em>), or you just came here of your own random volition. Either works for me, but if you have heard of vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\n<strong>Prerequisite</strong>: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<a href=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\"><img class=\"alignnone wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" /></a>\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn vim, and if so, then continue using it to get familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and is a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it as your editor.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a section of code for pasting), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe vim community is very, very active and is completely focused on productivity. You can find vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:18:14','2014-07-24 18:18:14','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(230,1,'2014-07-28 01:53:58','2014-07-28 01:53:58','Below you\'ll find my blog posts. You can also check out the <a title=\"RSS Feed\" href=\"http://thesocietea.org/feed/\">RSS feed</a> too.','Blog','','inherit','open','open','','16-autosave-v1','','','2014-07-28 01:53:58','2014-07-28 01:53:58','',16,'http://thesocietea.org/2014/07/16-autosave-v1/',0,'revision','',0),(231,1,'2014-07-28 01:55:02','2014-07-28 01:55:02','Below you\'ll find my blog posts. You can also check out the <a title=\"RSS Feed\" href=\"http://thesocietea.org/feed/\">RSS feed</a> too.','Blog','','inherit','open','open','','16-revision-v1','','','2014-07-28 01:55:02','2014-07-28 01:55:02','',16,'http://thesocietea.org/2014/07/16-revision-v1/',0,'revision','',0),(233,1,'2014-08-15 03:00:44','2014-08-15 03:00:44','Lately I\'ve been getting into build automation quite a bit and trying to maximize my workflow productivity without having to worry about the not-fun things like ensuring that I\'m including all my files, concatenating scripts together, and manually running build tasks. I\'ve been using <a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt</a> for a while now, which has been key for speeding up my workflow when I\'m working with new web projects, but I knew there was more out there to explore. I had heard <strong>bower</strong> and <strong>browserify</strong> thrown around on Twitter and at local dev meetings, and I knew that my fellow developers were making use of these tools, so I decided to check them out. Man ... I\'m glad I did, because these are tools that every full-stack developer should know about.\r\n\r\nWhile bower and browserify aren\'t necessarily related, I use them together quite a bit because they\'re both geared specifically towards client-side development, and it\'s this bond which makes them such a powerful combo. Let\'s start off with a bio of what they both are:\r\n<h2>Bower</h2>\r\n<a title=\"Bower\" href=\"bower.io\" target=\"_blank\">Bower</a> is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to fetch.  It gathers<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a <strong>bower_components</strong> directory at the root of where you run the install command. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Normalize-SCSS. Notice how there\'s both javascript and sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that bower retrieves are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nSo what makes bower any better than the other common package managers like NPM and RubyGems? Well, none of them are necessarily <em>better</em> than the other - they all handle specific types of packages. All three of these package managers allow you to list out your dependencies and versions, and will ensure that the full dependency tree is met. However, NPM and RubyGems are more geared towards server-side development and also allow the installation of global executable commands. Bower is much simpler in that it is only meant to find the front-end packages that you need, and dish them out for you.\r\n\r\nNow that we\'ve discussed how to gather our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter browserify.\r\n<h2>Browserify</h2>\r\n<a title=\"Browserify\" href=\"http://browserify.org/\" target=\"_blank\">Browserify</a> is a tool which, just like bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify is honestly really simple; it only does two things for you:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together and compile them down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jQuery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I\'m using. By setting jQuery to a variable, I am able to use the standard <strong>$</strong> operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can access their source files directly with the help of browserify. This is similar to using the @import function in sass, but because browserify accounts for modularity, these files will only be accessible in the scope that you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\nThis will run through our main.js file, gather all of the required files, and build it all into a file called bundle.js. This would be the file that you include in your html, and it will be written in browser-compatible javascript. That\'s how you do node - the browser way.\r\n\r\n<hr class=\"short\" />\r\n\r\nSo at this point, we\'ve established a good footing on bower and browserify, both of which are tools geared towards making your front-end workflow as efficient and clean as possible. We also discussed how you can install vendor packages with bower and then include them directly into your javascript using browserify, allowing you to write modular front-end code. Now this is a big improvement over manually finding and downloading vendor packages from the internet and muddying up your html by including multiple libraries (not to mention ignoring the concept of scope altogether), but we can still improve on this workflow. After all, we\'re having to manually run the browserify command every time we want to rebundle our files - and we don\'t enjoy manual labor like that.\r\n\r\nSo what can we do? Well, I mentioned I\'ve been getting into build automation lately, so I bet we can standardize this workflow and give instructions to a tool like grunt to do all the work for us. We covered our basics here, so next time we can get into maximizing our javascript building by incorporating a task runner (as well as a few other tricks I\'ll show you).\r\n\r\nStay tuned for the next post: Building Javascript with Grunt, Bower, Browserify.','Getting Familiar with Bower and Browserify','','publish','open','open','','getting-familiar-with-bower-and-browserify','','','2014-08-15 03:00:44','2014-08-15 03:00:44','',0,'http://thesocietea.org/?p=233',0,'post','',0),(234,1,'2014-08-14 22:47:24','2014-08-14 22:47:24','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple \r\n[code]bower install &lt;package&gt;[/code]\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:47:24','2014-08-14 22:47:24','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(235,1,'2014-08-14 22:47:28','2014-08-14 22:47:28','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[code]bower install &lt;package&gt;[/code]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:47:28','2014-08-14 22:47:28','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(236,1,'2014-08-14 22:52:44','2014-08-14 22:52:44','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n<pre>[<span style=\"color: #444444;\">sourcecode language=\"plain\"</span>]bower install &lt;package&gt;[/sourcecode]</pre>\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:52:44','2014-08-14 22:52:44','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(237,1,'2014-08-14 22:52:58','2014-08-14 22:52:58','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[code 1=\"style=&quot;color:\" 2=\"#444444;&quot;&gt;\" 3=\"language=&quot;plain&quot;&lt;/span&gt;\" language=\"&lt;span\"]bower install &lt;package&gt;[/code]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:52:58','2014-08-14 22:52:58','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(238,1,'2014-08-14 22:53:11','2014-08-14 22:53:11','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[code 1=\"style=&quot;color:\" 2=\"#444444;&quot;&gt;\" 3=\"language=&quot;bash&quot;&lt;/span&gt;\" language=\"&lt;span\"]bower install &lt;package&gt;[/code]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:53:11','2014-08-14 22:53:11','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(239,1,'2014-08-14 22:53:17','2014-08-14 22:53:17','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[code 1=\"style=&quot;color:\" 2=\"#444444;&quot;&gt;\" 3=\"language=&quot;php&quot;&lt;/span&gt;\" language=\"&lt;span\"]bower install &lt;package&gt;[/code]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:53:17','2014-08-14 22:53:17','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(240,1,'2014-08-14 22:53:33','2014-08-14 22:53:33','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:53:33','2014-08-14 22:53:33','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(241,1,'2014-08-14 23:00:23','2014-08-14 23:00:23','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[shell]&lt;/pre&gt;\r\n&lt;pre style=&quot;color: #000000;&quot;&gt;{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}&lt;/pre&gt;\r\n&lt;pre&gt;[/shell]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:00:23','2014-08-14 23:00:23','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(242,1,'2014-08-14 23:00:41','2014-08-14 23:00:41','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[shell]{&lt;/pre&gt;\r\n&lt;pre style=&quot;color: #000000;&quot;&gt;  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/shell]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:00:41','2014-08-14 23:00:41','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(243,1,'2014-08-14 23:01:06','2014-08-14 23:01:06','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[shell]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/shell]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:01:06','2014-08-14 23:01:06','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(244,1,'2014-08-14 23:01:54','2014-08-14 23:01:54','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n\r\n[shell]bower install[/shell]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:01:54','2014-08-14 23:01:54','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(245,1,'2014-08-14 23:09:52','2014-08-14 23:09:52','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n\r\n[shell]bower install[/shell]\r\n\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. This tool seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while writing purely front-end code','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:09:52','2014-08-14 23:09:52','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(246,1,'2014-08-14 23:15:46','2014-08-14 23:15:46','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll write and eventually compile with browserify:\r\n\r\n[javascript]&lt;/pre&gt;\r\n&lt;pre style=&quot;color: #000000;&quot;&gt;var $ = require(\'./jquery.min.js\');\r\n\r\n// External Libs\r\nrequire(\'./lib/console-support.js\');\r\nrequire(\'./lib/outbound.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});&lt;/pre&gt;\r\n&lt;pre&gt;[/javascript]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:15:46','2014-08-14 23:15:46','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(247,1,'2014-08-14 23:16:32','2014-08-14 23:16:32','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll write and eventually compile with browserify:\r\n\r\n[javascript]\r\nvar $ = require(\'./jquery.min.js\');\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./lib/console-support.js\');\r\nrequire(\'./lib/outbound.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:16:32','2014-08-14 23:16:32','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(248,1,'2014-08-14 23:26:12','2014-08-14 23:26:12','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll write and eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jquery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I am using. By setting jquery to a variable, I am able to use the standard $ operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can modularly access their source files directly with the help of browserify. This is similar to using the @import function in sass, but browserify accounts for modularity, so these files will only be accessible in the scope in which you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\n\r\nThis will run through our main.js file, gather all of the requirements, and build it all into the file bundle.js. This would be the file that you include in your html, and it will be fully built as browser-compatible javascript. That\'s how you do Node - the browser way.\r\n\r\n<hr class=\"short\"/>\r\n\r\n&nbsp;','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:26:12','2014-08-14 23:26:12','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(249,1,'2014-08-14 23:31:41','2014-08-14 23:31:41','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll write and eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jquery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I am using. By setting jquery to a variable, I am able to use the standard $ operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can modularly access their source files directly with the help of browserify. This is similar to using the @import function in sass, but browserify accounts for modularity, so these files will only be accessible in the scope in which you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\nThis will run through our main.js file, gather all of the requirements, and build it all into the file bundle.js. This would be the file that you include in your html, and it will be fully built as browser-compatible javascript. That\'s how you do Node - the browser way.\r\n\r\n<hr class=\"short\" />\r\n\r\nSo at this point, we\'ve established a good footing on bower and browserify, both of which are tools geared towards making your front-end workflow as efficient and clean as possible. We also showed how you can install vendor packages with bower and then include them into your files using browserify, all while writing modular javascript. Now this is a big improvement over manually finding and downloading vendor packages from the internet, and muddying up your html by including multiple unminimized libraries (not to mention ignoring the concept of scope altogether), but we can still improve on this method. After all, we\'re having to manually run the browserify command every time we want to rebundle our files - and we don\'t like manual labor like that.\r\n\r\nSo stay tuned, we\'ve got our basics covered here, and next time we can get into maximizing your javascript building by incorporating build automation (as well as a few other tricks I\'ll show you).','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:31:41','2014-08-14 23:31:41','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(250,1,'2014-08-15 02:46:25','2014-08-15 02:46:25','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about the not-fun things like ensuring I\'m including all my files, concatenating scripts together, and manually running build tasks. I\'ve been into grunt for a while now, which has been key for speeding up my workflow when I\'m working with new web projects, but I knew there was more out there to explore. I had heard \'bower\' and \'browserify\' thrown around a on Twitter and at local dev meetings, and I knew that my fellow developers were making use of these tools, so I decided to check them out. Man ... I\'m glad I did, because these are tools that every full-stack developer should know about.\r\n\r\nWhile bower and browserify aren\'t necessarily related, I use them together quite a bit because they\'re both geared specifically towards client-side development, and it\'s this bond which makes them such a powerful combo. Let\'s start off with a bio of what they both are:\r\n<h2>Bower</h2>\r\n<a title=\"Bower\" href=\"bower.io\" target=\"_blank\">Bower</a> is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to fetch.  It gathers<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a \'bower_components\' directory at the root of where you run your command. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both javascript and sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nSo what makes Bower any better than the other common package managers like NPM and RubyGems? Well, none of them are necessarily <em>better</em> than the other - they all handle specific types of packages. All three of these package managers allow you to list out your dependencies and versions, and will ensure that the full dependency tree is met. However, NPM and RubyGems are more geared towards server-side development and also allow the installation of global executable commands. Bower is much simpler in that it is only meant to find the front-end packages that you need, and dish them out for you.\r\n\r\nNow that we\'ve discussed how to gather our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\n<a title=\"Browserify\" href=\"http://browserify.org/\" target=\"_blank\">Browserify</a> is a tool which, just like bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify is simple; only does two things for you:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile them down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jquery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I am using. By setting jquery to a variable, I am able to use the standard <strong>$</strong> operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can modularly access their source files directly with the help of browserify. This is similar to using the @import function in sass, but because browserify accounts for modularity, these files will only be accessible in the scope that you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\nThis will run through our main.js file, gather all of the requirements, and build it all into a file called bundle.js. This would be the file that you include in your html, and it will be written in browser-compatible javascript. That\'s how you do node - the browser way.\r\n\r\n<hr class=\"short\" />\r\n\r\nSo at this point, we\'ve established a good footing on bower and browserify, both of which are tools geared towards making your front-end workflow as efficient and clean as possible. We also discussed how you can install vendor packages with bower and then include them directly into your javascript using browserify, allowing you to write modular front-end code. Now this is a big improvement over manually finding and downloading vendor packages from the internet and muddying up your html by including multiple unminimized libraries (not to mention ignoring the concept of scope altogether), but we can still improve on this workflow. After all, we\'re having to manually run the browserify command every time we want to rebundle our files - and we don\'t enjoy manual labor like that.\r\n\r\nSo what can we do? Well, I mentioned I\'ve been getting into build automation lately, so I bet we can standardize this workflow and give instructions to a tool like Grunt to do all the work for us. We covered our basics here, so next time we can get into maximizing our javascript building by incorporating build automation (as well as a few other tricks I\'ll show you).\r\n\r\nStay tuned for the next post: Building Javascript with Grunt, Bower, Browserify.','Getting Familiar with Bower and Browserify','','inherit','open','open','','233-revision-v1','','','2014-08-15 02:46:25','2014-08-15 02:46:25','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(251,1,'2014-08-15 03:00:44','2014-08-15 03:00:44','Lately I\'ve been getting into build automation quite a bit and trying to maximize my workflow productivity without having to worry about the not-fun things like ensuring that I\'m including all my files, concatenating scripts together, and manually running build tasks. I\'ve been using <a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt</a> for a while now, which has been key for speeding up my workflow when I\'m working with new web projects, but I knew there was more out there to explore. I had heard <strong>bower</strong> and <strong>browserify</strong> thrown around on Twitter and at local dev meetings, and I knew that my fellow developers were making use of these tools, so I decided to check them out. Man ... I\'m glad I did, because these are tools that every full-stack developer should know about.\r\n\r\nWhile bower and browserify aren\'t necessarily related, I use them together quite a bit because they\'re both geared specifically towards client-side development, and it\'s this bond which makes them such a powerful combo. Let\'s start off with a bio of what they both are:\r\n<h2>Bower</h2>\r\n<a title=\"Bower\" href=\"bower.io\" target=\"_blank\">Bower</a> is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to fetch.  It gathers<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a <strong>bower_components</strong> directory at the root of where you run the install command. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Normalize-SCSS. Notice how there\'s both javascript and sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that bower retrieves are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nSo what makes bower any better than the other common package managers like NPM and RubyGems? Well, none of them are necessarily <em>better</em> than the other - they all handle specific types of packages. All three of these package managers allow you to list out your dependencies and versions, and will ensure that the full dependency tree is met. However, NPM and RubyGems are more geared towards server-side development and also allow the installation of global executable commands. Bower is much simpler in that it is only meant to find the front-end packages that you need, and dish them out for you.\r\n\r\nNow that we\'ve discussed how to gather our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter browserify.\r\n<h2>Browserify</h2>\r\n<a title=\"Browserify\" href=\"http://browserify.org/\" target=\"_blank\">Browserify</a> is a tool which, just like bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify is honestly really simple; it only does two things for you:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together and compile them down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jQuery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I\'m using. By setting jQuery to a variable, I am able to use the standard <strong>$</strong> operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can access their source files directly with the help of browserify. This is similar to using the @import function in sass, but because browserify accounts for modularity, these files will only be accessible in the scope that you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\nThis will run through our main.js file, gather all of the required files, and build it all into a file called bundle.js. This would be the file that you include in your html, and it will be written in browser-compatible javascript. That\'s how you do node - the browser way.\r\n\r\n<hr class=\"short\" />\r\n\r\nSo at this point, we\'ve established a good footing on bower and browserify, both of which are tools geared towards making your front-end workflow as efficient and clean as possible. We also discussed how you can install vendor packages with bower and then include them directly into your javascript using browserify, allowing you to write modular front-end code. Now this is a big improvement over manually finding and downloading vendor packages from the internet and muddying up your html by including multiple libraries (not to mention ignoring the concept of scope altogether), but we can still improve on this workflow. After all, we\'re having to manually run the browserify command every time we want to rebundle our files - and we don\'t enjoy manual labor like that.\r\n\r\nSo what can we do? Well, I mentioned I\'ve been getting into build automation lately, so I bet we can standardize this workflow and give instructions to a tool like grunt to do all the work for us. We covered our basics here, so next time we can get into maximizing our javascript building by incorporating a task runner (as well as a few other tricks I\'ll show you).\r\n\r\nStay tuned for the next post: Building Javascript with Grunt, Bower, Browserify.','Getting Familiar with Bower and Browserify','','inherit','open','open','','233-revision-v1','','','2014-08-15 03:00:44','2014-08-15 03:00:44','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(252,1,'2014-08-18 21:57:29','2014-08-18 21:57:29','','Oklahoma Department of Commerce','','publish','closed','closed','','oklahoma-department-of-commerce','','','2014-08-18 22:10:29','2014-08-18 22:10:29','',0,'http://thesocietea.org/?post_type=project&#038;p=252',0,'project','',0),(253,1,'2014-08-18 21:55:25','2014-08-18 21:55:25','','big-odoc-1','','inherit','open','open','','big-odoc-1','','','2014-08-18 21:55:25','2014-08-18 21:55:25','',252,'http://thesocietea.org/wp-content/uploads/2014/08/big-odoc-1.jpg',0,'attachment','image/jpeg',0),(254,1,'2014-08-18 21:55:26','2014-08-18 21:55:26','','big-odoc-2','','inherit','open','open','','big-odoc-2','','','2014-08-18 21:55:26','2014-08-18 21:55:26','',252,'http://thesocietea.org/wp-content/uploads/2014/08/big-odoc-2.jpg',0,'attachment','image/jpeg',0),(255,1,'2014-08-18 21:55:26','2014-08-18 21:55:26','','big-odoc-3','','inherit','open','open','','big-odoc-3','','','2014-08-18 21:55:26','2014-08-18 21:55:26','',252,'http://thesocietea.org/wp-content/uploads/2014/08/big-odoc-3.jpg',0,'attachment','image/jpeg',0),(256,1,'2014-08-18 21:55:27','2014-08-18 21:55:27','','big-odoc-4','','inherit','open','open','','big-odoc-4','','','2014-08-18 21:55:27','2014-08-18 21:55:27','',252,'http://thesocietea.org/wp-content/uploads/2014/08/big-odoc-4.jpg',0,'attachment','image/jpeg',0),(257,1,'2014-08-18 21:55:28','2014-08-18 21:55:28','','th-odoc-1','','inherit','open','open','','th-odoc-1','','','2014-08-18 21:55:28','2014-08-18 21:55:28','',252,'http://thesocietea.org/wp-content/uploads/2014/08/th-odoc-1.jpg',0,'attachment','image/jpeg',0),(258,1,'2014-08-18 21:55:28','2014-08-18 21:55:28','','th-odoc-2','','inherit','open','open','','th-odoc-2','','','2014-08-18 21:55:28','2014-08-18 21:55:28','',252,'http://thesocietea.org/wp-content/uploads/2014/08/th-odoc-2.jpg',0,'attachment','image/jpeg',0),(259,1,'2014-08-18 21:55:28','2014-08-18 21:55:28','','th-odoc-3','','inherit','open','open','','th-odoc-3','','','2014-08-18 21:55:28','2014-08-18 21:55:28','',252,'http://thesocietea.org/wp-content/uploads/2014/08/th-odoc-3.jpg',0,'attachment','image/jpeg',0),(260,1,'2014-08-18 21:55:29','2014-08-18 21:55:29','','th-odoc-4','','inherit','open','open','','th-odoc-4','','','2014-08-18 21:55:29','2014-08-18 21:55:29','',252,'http://thesocietea.org/wp-content/uploads/2014/08/th-odoc-4.jpg',0,'attachment','image/jpeg',0),(261,1,'2014-08-28 14:00:39','2014-08-28 14:00:39','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re ready to get our hands dirty with them both by using them with grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am choosing to stick with grunt as it currently still has a larger plugin community.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~5.10.1&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"bower.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\nNow that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is to create a bundle from a file like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ol>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ol>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to look for (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to using: $ and Modernizr. Lastly, we tell browserify to run browserify-shim prior to building out the files, which is what allows all of this to happen.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will this javascript work?\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nYup, 100% as long as we\'re using grunt to build our javascript.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using <strong>bower</strong> to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using <strong>browserify-shim</strong> to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using <strong>browserify</strong> to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through <strong>grunt</strong> to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do the work for us, another thing to consider is that now we can really true modular code. That\'s a best practice in every language, and having that at our disposal allows us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','publish','open','open','','building-javascript-with-grunt-bower-browserify','','\nhttp://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/','2014-09-04 01:16:58','2014-09-04 01:16:58','',0,'http://thesocietea.org/?p=261',0,'post','',0),(262,1,'2014-08-21 12:52:15','2014-08-21 12:52:15','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\n\r\nNow that we have the grunt CLI installed,','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 12:52:15','2014-08-21 12:52:15','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(263,1,'2014-08-21 12:58:12','2014-08-21 12:58:12','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n<pre>[json]\r\n\"devDependencies\": {\r\n  \"grunt-bower-task\": \"0.4.0\",\r\n  \"grunt-browserify\": \"2.1.4\",\r\n  \"grunt-pagespeed\": \"0.3.0\",\r\n  \"grunt-concurrent\": \"0.5.0\",\r\n  \"browserify\": \"~4.2.3\"\r\n}\r\n[\\json]</pre>','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 12:58:12','2014-08-21 12:58:12','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(264,1,'2014-08-21 12:58:32','2014-08-21 12:58:32','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n<pre>[javascript][/javascript]\r\n\"devDependencies\": {\r\n  \"grunt-bower-task\": \"0.4.0\",\r\n  \"grunt-browserify\": \"2.1.4\",\r\n  \"grunt-pagespeed\": \"0.3.0\",\r\n  \"grunt-concurrent\": \"0.5.0\",\r\n  \"browserify\": \"~4.2.3\"\r\n}\r\n[\\javascript]</pre>','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 12:58:32','2014-08-21 12:58:32','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(265,1,'2014-08-21 12:58:42','2014-08-21 12:58:42','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[javascript][/javascript]\r\n\r\n\"devDependencies\": { \"grunt-bower-task\": \"0.4.0\", \"grunt-browserify\": \"2.1.4\", \"grunt-pagespeed\": \"0.3.0\", \"grunt-concurrent\": \"0.5.0\", \"browserify\": \"~4.2.3\" } [\\javascript]','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 12:58:42','2014-08-21 12:58:42','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(266,1,'2014-08-21 13:00:09','2014-08-21 13:00:09','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code]\r\n&quot;devDependencies&quot;: {\r\n  &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n  &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n  &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n}\r\n[/code]\r\n\r\n','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:00:09','2014-08-21 13:00:09','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(267,1,'2014-08-21 13:00:28','2014-08-21 13:00:28','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n&quot;devDependencies&quot;: {\r\n  &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n  &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n  &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n}\r\n[/code]\r\n','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:00:28','2014-08-21 13:00:28','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(268,1,'2014-08-21 13:10:37','2014-08-21 13:10:37','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. <strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions.\r\n\r\nTo install:\r\n\r\n[shell]npm install[/shell]\r\n\r\nNow that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNothing exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:10:37','2014-08-21 13:10:37','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(269,1,'2014-08-21 13:16:25','2014-08-21 13:16:25','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions.Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNothing exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:16:25','2014-08-21 13:16:25','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(270,1,'2014-08-21 13:29:16','2014-08-21 13:29:16','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping as many vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files\r\n\r\n&nbsp;','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:29:16','2014-08-21 13:29:16','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(271,1,'2014-08-21 13:37:18','2014-08-21 13:37:18','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping as many vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\n&nbsp;','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:37:18','2014-08-21 13:37:18','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(272,1,'2014-08-21 13:37:41','2014-08-21 13:37:41','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping as many vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\n.\r\n.\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n.\r\n.\r\n[/javascript]\r\n\r\n&nbsp;','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:37:41','2014-08-21 13:37:41','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(273,1,'2014-08-21 13:38:00','2014-08-21 13:38:00','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping as many vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\n&nbsp;','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:38:00','2014-08-21 13:38:00','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(274,1,'2014-08-22 17:46:28','2014-08-22 17:46:28','Finally, 7 months later, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning vim (which would be <em>awesome</em>), or you just came here of your own random volition. Either works for me, but if you have heard of vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\n<strong>Prerequisite</strong>: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<img class=\"alignnone wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" />\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn vim, and if so, then continue using it to get familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and is a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it as your editor.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a section of code for pasting), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe vim community is very, very active and is completely focused on productivity. You can find vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-08-22 17:46:28','2014-08-22 17:46:28','',220,'http://thesocietea.org/2014/08/220-revision-v1/',0,'revision','',0),(276,1,'2014-08-24 00:12:48','2014-08-24 00:12:48','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is something like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ul>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require Common-JS style scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ul>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own Common-JS style scripts? No, absolutely not! We can fix this with an awesome browserify plugin called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\nBrowserify-shim','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-24 00:12:48','2014-08-24 00:12:48','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(277,1,'2014-08-24 00:34:39','2014-08-24 00:34:39','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is something like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ul>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ul>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, here browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to use (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to: $ and Modernizr. Lastly, we tell browserify to implement the browserify-shim transformation prior to building out the files.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will our javascript file above work? Yup, 100%.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using bower to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using browserify-shim to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using browserify to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through a task-runner to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do a lot of work for us, another thing to consider is that now we can really write modular code. That\'s a best practice in every language, and having that at our disposal will allow us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-24 00:34:39','2014-08-24 00:34:39','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(278,1,'2014-08-24 00:35:49','2014-08-24 00:35:49','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re ready to get our hands dirty with them both by using them with grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is something like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ul>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ul>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, here browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to use (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to: $ and Modernizr. Lastly, we tell browserify to implement the browserify-shim transformation prior to building out the files.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will our javascript file above work? Yup, 100%.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using bower to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using browserify-shim to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using browserify to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through a task-runner to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do a lot of work for us, another thing to consider is that now we can really write modular code. That\'s a best practice in every language, and having that at our disposal will allow us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-24 00:35:49','2014-08-24 00:35:49','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(279,1,'2014-08-24 00:50:36','2014-08-24 00:50:36','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re ready to get our hands dirty with them both by using them with grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am choosing to stick with grunt as it currently still has a larger plugin community.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"bower.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\nNow that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is to create a bundle from a file like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ol>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ol>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to look for (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to using: $ and Modernizr. Lastly, we tell browserify to run browserify-shim prior to building out the files, which is what allows all of this to happen.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will this javascript work?\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nYup, 100% as long as we\'re using grunt to build our javascript.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using <strong>bower</strong> to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using <strong>browserify-shim</strong> to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using <strong>browserify</strong> to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through <strong>grunt</strong> to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do the work for us, another thing to consider is that now we can really true modular code. That\'s a best practice in every language, and having that at our disposal allows us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-24 00:50:36','2014-08-24 00:50:36','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(281,1,'2014-08-25 12:19:06','2014-08-25 12:19:06','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re ready to get our hands dirty with them both by using them with grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am choosing to stick with grunt as it currently still has a larger plugin community.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~5.10.1&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"bower.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\nNow that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is to create a bundle from a file like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ol>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ol>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to look for (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to using: $ and Modernizr. Lastly, we tell browserify to run browserify-shim prior to building out the files, which is what allows all of this to happen.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will this javascript work?\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nYup, 100% as long as we\'re using grunt to build our javascript.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using <strong>bower</strong> to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using <strong>browserify-shim</strong> to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using <strong>browserify</strong> to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through <strong>grunt</strong> to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do the work for us, another thing to consider is that now we can really true modular code. That\'s a best practice in every language, and having that at our disposal allows us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-25 12:19:06','2014-08-25 12:19:06','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(282,1,'2014-09-11 14:00:37','2014-09-11 14:00:37','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/labs/tree/master/geojson-demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','future','open','open','','using-geojson-files-with-google-maps-api','','','2014-09-05 12:33:20','2014-09-05 12:33:20','',0,'http://thesocietea.org/?p=282',0,'post','',0),(283,1,'2014-08-27 18:09:28','2014-08-27 18:09:28','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n\r\n[html]\r\n\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n// Set basic map attributes\r\nvar map, polys = [];\r\nvar mapOptions = {\r\nzoom: 5,\r\ncenter: new google.maps.LatLng(39.16,-100.72)\r\n\r\n};\r\n\r\nmap = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n\r\n[/html]\r\n\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n\r\n&nbsp;','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:09:28','2014-08-27 18:09:28','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(284,1,'2014-08-27 18:10:18','2014-08-27 18:10:18','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n\r\n&nbsp;','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:10:18','2014-08-27 18:10:18','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(285,1,'2014-08-27 18:20:26','2014-08-27 18:20:26','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are .geo.json files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n\r\n[json title=\"arkansas.geo.json\r\n{\r\n\"type\":\"FeatureCollection\",\r\n\"features\":[\r\n{\r\n\"type\":\"Feature\",\r\n\"id\":\"USA-AR\",\r\n\"properties\":{\"fips\":\"05\",\"name\":\"Arkansas\"},\r\n\"geometry\":{\r\n\"type\":\"Polygon\",\r\n\"coordinates\":[[[-94.473842,36.501861],[-90.152536,36.496384],[-90.064905,36.304691],...\r\n}\r\n[/json]','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:20:26','2014-08-27 18:20:26','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(286,1,'2014-08-27 18:22:41','2014-08-27 18:22:41','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are .geo.json files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n<pre>[json title=\"arkansas.geo.json]\r\n{\r\n  \"type\":\"FeatureCollection\",\r\n  \"features\":[\r\n    {\r\n      \"type\":\"Feature\",\r\n      \"id\":\"USA-AR\",\r\n      \"properties\":{\"fips\":\"05\",\"name\":\"Arkansas\"},\r\n      \"geometry\":{\r\n        \"type\":\"Polygon\",\r\n        \"coordinates\":[[[-94.473842,36.501861],[-90.152536,36.496384],[-90.064905,36.304691],...\r\n      }\r\n    } \r\n  ] \r\n}\r\n[/json]</pre>','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:22:41','2014-08-27 18:22:41','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(287,1,'2014-08-27 18:23:14','2014-08-27 18:23:14','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are .geo.json files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n<pre>[code language=\"title=&quot;arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],...\r\n      }\r\n    } \r\n  ] \r\n}\r\n[/code]</pre>','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:23:14','2014-08-27 18:23:14','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(288,1,'2014-08-27 18:24:34','2014-08-27 18:24:34','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are .geo.json files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],...\r\n      }\r\n    } \r\n  ] \r\n}\r\n[/code]\r\n','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:24:34','2014-08-27 18:24:34','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(289,1,'2014-08-27 18:25:51','2014-08-27 18:25:51','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:25:51','2014-08-27 18:25:51','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(290,1,'2014-08-28 12:36:57','2014-08-28 12:36:57','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 12:36:57','2014-08-28 12:36:57','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(291,1,'2014-08-28 13:05:30','2014-08-28 13:05:30','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the outline of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" Well, you\'re in luck. While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you see fit. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or honestly whatever we want! Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any styles. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\nThese files are what I used to build a small demo app:\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:05:30','2014-08-28 13:05:30','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(292,1,'2014-08-28 13:06:33','2014-08-28 13:06:33','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we have a rendering Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the outline of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" Well, you\'re in luck. While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you see fit. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or honestly whatever we want! Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any styles. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\nThese files are what I used to build a small demo app:\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:06:33','2014-08-28 13:06:33','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(293,1,'2014-08-28 13:10:05','2014-08-28 13:10:05','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we have a rendering Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the outline of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\nThese files are what I used to build a small demo app:\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:10:05','2014-08-28 13:10:05','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(294,1,'2014-08-28 13:15:12','2014-08-28 13:15:12','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the outline of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\nThese files are what I used to build a small demo app:\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API if you want to see what we discussed here in action.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:15:12','2014-08-28 13:15:12','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(295,1,'2014-08-28 13:20:19','2014-08-28 13:20:19','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"mini\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:20:19','2014-08-28 13:20:19','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(296,1,'2014-08-28 13:20:37','2014-08-28 13:20:37','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:20:37','2014-08-28 13:20:37','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(297,1,'2014-08-29 00:02:31','2014-08-29 00:02:31','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that you don\'t use the mouse to interact (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-revision-v1','','','2014-08-29 00:02:31','2014-08-29 00:02:31','',154,'http://thesocietea.org/2014/08/154-revision-v1/',0,'revision','',0),(298,1,'2014-08-29 13:30:34','2014-08-29 13:30:34','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\n\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that vim has different modes such as insert, visual, and normal mode. Due to these different modes, this largely comes off as meaning you don\'t have use the mouse to interact (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\n<ul>\n	<li>Vim makes you lightning fast</li>\n</ul>\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\n<ul>\n	<li>Vim is super customizable</li>\n</ul>\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\n<ul>\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\n</ul>\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\n<ul>\n	<li>Vim is absolutely free</li>\n</ul>\nNo Gimmicks. Nuff\' said here.\n<ul>\n	<li>Vim is used in the terminal itself</li>\n</ul>\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\n\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-autosave-v1','','','2014-08-29 13:30:34','2014-08-29 13:30:34','',154,'http://thesocietea.org/2014/08/154-autosave-v1/',0,'revision','',0),(299,1,'2014-08-29 13:31:15','2014-08-29 13:31:15','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that vim has different modes such as insert, visual, and normal mode. Due to these different modes, vim allows you to never have use the mouse to interact - it\'s all keyboard (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-revision-v1','','','2014-08-29 13:31:15','2014-08-29 13:31:15','',154,'http://thesocietea.org/2014/08/154-revision-v1/',0,'revision','',0),(300,1,'2014-08-29 13:33:20','2014-08-29 13:33:20','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that vim has different modes such as insert, visual, and normal mode. Due to these different modes, vim allows you to never have to use the mouse to interact - it\'s all keyboard (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-revision-v1','','','2014-08-29 13:33:20','2014-08-29 13:33:20','',154,'http://thesocietea.org/2014/08/154-revision-v1/',0,'revision','',0),(301,1,'2014-08-31 20:09:23','0000-00-00 00:00:00','Being a developer, we often throw around a lot of words that sound like nonsense to other people. When I say something like \"So I\'ll just make a POST request from the client-side to a server-side API, and that will return the JSON necessary for me to create a client-side object,\" I may be talking in a language that a lot of developers understand, but let\'s not pretend we\'re magic - there\'s still a lot of terminology that we don\'t know.\r\n\r\nI\'d like to take a step back from the stuff we\'re used to, and really dig into some key terms and concepts that we probably hear a lot, but may be a little unfamiliar with; I specifically want to hone in on topics that are at the core of modern-day programming that we don\'t necessarily have to deal with or know (but it always make us better developers to know more).\r\n\r\nAs we continue to use more advanced programming languages, we\'re able to get some seriously powerful development done with significantly less code that does increasingly more awesome stuff, but that comes at a price. Since we don\'t deal as often with low-level computation and processing anymore, it\'s only normal that we don\'t have understanding about topics like what the stack is versus the heap, or how compilation really works, or what static vs dynamic typing is, or type introspection, or garbage collection, etc. Now I\'m not saying every developer is ignorant of these, as most of us certainly aren\'t, but I do feel like it\'s worth revisiting some of the <em>old-school</em> important topics that we may miss out on these days.\r\n\r\nThis may easily turn into a series, as right now I\'m only focusing on one topic: <strong>the</strong> <strong>stack vs. the heap</strong>.\r\n\r\n&nbsp;','Stack vs Heap: What Are They?','','draft','open','open','','','','','2014-08-31 20:09:23','2014-08-31 20:09:23','',0,'http://thesocietea.org/?p=301',0,'post','',0),(302,1,'2014-08-31 06:04:37','2014-08-31 06:04:37','Being a developer, we often throw around a lot of words that sounds like nonsense to other people. When I say something like \"So I\'ll just make a POST request from the client-side to a server-side API, and that will return the JSON necessary for me to create a client-side object,\" I may be talking in a language that a lot of developers understand, but let\'s not pretend like we\'re magic - there\'s still a lot of terminology that we don\'t know.\r\n\r\nI\'d like to take a step back from the stuff we\'re used to, and really dig into some key terms and concepts that we probably hear a lot, but may be unfamiliar about everything that it entails; I specifically want to hone in on topics that are at the core of modern-day programming that we don\'t necessarily have to deal with or know (but it always make us better developers to know more)\r\n\r\nAs we continue to use more advanced programming languages, we\'re able to get some seriously powerful development done with significantly less code that does increasingly more awesome stuff, but that comes at a price. Since we don\'t deal as often with low-level computation and processing anymore, it\'s only normal that we don\'t have understanding about topics like what the stack is versus the heap, or how compilation really works, or what static vs dynamic typing is, or type introspection, or garbage collection, etc. Now I\'m not saying every developer is ignorant of these, as most of us certainly aren\'t, but I do feel like it\'s worth revisiting some of the \'old-school\' topics that we may miss out on these days, but are very important.\r\n\r\nThis will probably turn into a series, as today I\'m only focusing on one topic: <strong>the</strong> <strong>stack vs. the heap</strong>.\r\n\r\n&nbsp;','Stack vs Heap: What Are They?','','inherit','open','open','','301-revision-v1','','','2014-08-31 06:04:37','2014-08-31 06:04:37','',301,'http://thesocietea.org/2014/08/301-revision-v1/',0,'revision','',0),(303,1,'2014-08-31 16:13:56','2014-08-31 16:13:56','Being a developer, we often throw around a lot of words that sound like nonsense to other people. When I say something like \"So I\'ll just make a POST request from the client-side to a server-side API, and that will return the JSON necessary for me to create a client-side object,\" I may be talking in a language that a lot of developers understand, but let\'s not pretend we\'re magic - there\'s still a lot of terminology that we don\'t know.\r\n\r\nI\'d like to take a step back from the stuff we\'re used to, and really dig into some key terms and concepts that we probably hear a lot, but may be a little unfamiliar with; I specifically want to hone in on topics that are at the core of modern-day programming that we don\'t necessarily have to deal with or know (but it always make us better developers to know more).\r\n\r\nAs we continue to use more advanced programming languages, we\'re able to get some seriously powerful development done with significantly less code that does increasingly more awesome stuff, but that comes at a price. Since we don\'t deal as often with low-level computation and processing anymore, it\'s only normal that we don\'t have understanding about topics like what the stack is versus the heap, or how compilation really works, or what static vs dynamic typing is, or type introspection, or garbage collection, etc. Now I\'m not saying every developer is ignorant of these, as most of us certainly aren\'t, but I do feel like it\'s worth revisiting some of the <em>old-school</em> important topics that we may miss out on these days.\r\n\r\nThis may easily turn into a series, as right now I\'m only focusing on one topic: <strong>the</strong> <strong>stack vs. the heap</strong>.\r\n\r\n&nbsp;','Stack vs Heap: What Are They?','','inherit','open','open','','301-revision-v1','','','2014-08-31 16:13:56','2014-08-31 16:13:56','',301,'http://thesocietea.org/2014/08/301-revision-v1/',0,'revision','',0),(304,1,'2014-09-02 16:48:42','0000-00-00 00:00:00','','Auto Draft','','auto-draft','open','open','','','','','2014-09-02 16:48:42','0000-00-00 00:00:00','',0,'http://thesocietea.org/?p=304',0,'post','',0),(305,1,'2014-09-04 14:00:19','2014-09-04 14:00:19','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -0 -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <b>-0</b> option forces xargs to be line-oriented, and therefore it will accept arguments based on a full new line (this is <strong>very</strong> important; you probably don\'t want xargs breaking up args based on spaces in the same line). The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -0 -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -0 -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','publish','open','open','','power-tools-using-grep-xargs-and-sed','','','2014-09-04 19:50:49','2014-09-04 19:50:49','',0,'http://thesocietea.org/?p=305',0,'post','',1),(306,1,'2014-09-02 16:58:11','2014-09-02 16:58:11','I was recently inspired to write this post after I came across a situation where I needed to do a change to multiple files where all I was doing was changing all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a good deal of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\n&nbsp;\r\n<h2>Xargs</h2>\r\n<h2>Sed</h2>\r\n<h2>Combining Them</h2>','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-02 16:58:11','2014-09-02 16:58:11','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(307,1,'2014-09-02 17:13:00','2014-09-02 17:13:00','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the -G flag:\r\n\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\n<h2>Sed</h2>\r\n<h2>Combining Them</h2>','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-02 17:13:00','2014-09-02 17:13:00','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(308,1,'2014-09-02 17:40:13','2014-09-02 17:40:13','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\n<h2>Combining Them</h2>','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-02 17:40:13','2014-09-02 17:40:13','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(309,1,'2014-09-03 19:25:14','2014-09-03 19:25:14','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>.\r\n<h2>Combining Them</h2>\r\nBy combining these three base commands that are common across all *nix systems, we can do','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-03 19:25:14','2014-09-03 19:25:14','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(310,1,'2014-09-04 00:44:41','2014-09-04 00:44:41','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three base commands that are common across all *nix systems, we can do','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:44:41','2014-09-04 00:44:41','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(311,1,'2014-09-04 00:54:05','2014-09-04 00:54:05','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:54:05','2014-09-04 00:54:05','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(312,1,'2014-09-04 00:56:08','2014-09-04 00:56:08','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the\r\n\r\nbase shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:56:08','2014-09-04 00:56:08','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(313,1,'2014-09-04 00:56:17','2014-09-04 00:56:17','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:56:17','2014-09-04 00:56:17','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(314,1,'2014-09-04 00:58:15','2014-09-04 00:58:15','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:58:15','2014-09-04 00:58:15','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(315,1,'2014-09-04 01:00:37','2014-09-04 01:00:37','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 01:00:37','2014-09-04 01:00:37','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(316,1,'2014-09-04 01:01:52','2014-09-04 01:01:52','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and just print out the filenames. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 01:01:52','2014-09-04 01:01:52','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(317,1,'2014-09-04 01:13:30','2014-09-04 01:13:30','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored seeing as how you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 01:13:30','2014-09-04 01:13:30','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(318,1,'2014-09-04 01:16:47','2014-09-04 01:16:47','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 01:16:47','2014-09-04 01:16:47','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(319,1,'2014-09-04 19:48:33','2014-09-04 19:48:33','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\n\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\n\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\n\n<hr class=\"short\" />\n\n<h2>Grep</h2>\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\n\n[shell]cat index.html | grep footer[/shell]\n\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\n\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\n\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\n\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\n\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\n<h2>Xargs</h2>\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\n\nSound too wordy? An example is worth a thousand words:\n\n[shell]ls | xargs -0 -n 1 echo[/shell]\n\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <b>-0</b> option forces xargs to only accepThe <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\n\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\n\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\n\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\n\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\n<h2>Sed</h2>\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\n\n[shell]sed \'s/start/end/g\' ./*[/shell]\n\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\n\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\n\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\n<h2>Combining Them</h2>\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\n\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\n\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\n\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-autosave-v1','','','2014-09-04 19:48:33','2014-09-04 19:48:33','',305,'http://thesocietea.org/2014/09/305-autosave-v1/',0,'revision','',0),(320,1,'2014-09-04 19:49:50','2014-09-04 19:49:50','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -0 -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <b>-0</b> option forces xargs to be line-oriented, and therefore accept arguments based on a full line (this is very important; you probably don\'t want xargs breaking up args based on spaces). The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -0 -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -0 -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 19:49:50','2014-09-04 19:49:50','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(321,1,'2014-09-04 19:50:49','2014-09-04 19:50:49','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -0 -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <b>-0</b> option forces xargs to be line-oriented, and therefore it will accept arguments based on a full new line (this is <strong>very</strong> important; you probably don\'t want xargs breaking up args based on spaces in the same line). The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -0 -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -0 -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 19:50:49','2014-09-04 19:50:49','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(322,1,'2014-09-05 12:33:20','2014-09-05 12:33:20','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/labs/tree/master/geojson-demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-09-05 12:33:20','2014-09-05 12:33:20','',282,'http://thesocietea.org/2014/09/282-revision-v1/',0,'revision','',0),(323,1,'2014-09-05 12:33:24','2014-09-05 12:33:24','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/labs/tree/master/geojson-demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-autosave-v1','','','2014-09-05 12:33:24','2014-09-05 12:33:24','',282,'http://thesocietea.org/2014/09/282-autosave-v1/',0,'revision','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (25,2,0),(26,2,0),(27,2,0),(32,2,0),(142,1,0),(142,3,0),(151,2,0),(154,1,0),(158,1,0),(167,1,0),(172,1,0),(220,1,0),(233,1,0),(261,1,0),(282,1,0),(301,1,0),(305,1,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,9),(2,2,'nav_menu','',0,5),(3,3,'post_tag','',0,1);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'Uncategorized','uncategorized',0),(2,'Main Menu','main-menu',0),(3,'tea','tea',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'first_name',''),(2,1,'last_name',''),(3,1,'nickname','admin'),(4,1,'description',''),(5,1,'rich_editing','true'),(6,1,'comment_shortcuts','false'),(7,1,'admin_color','fresh'),(8,1,'use_ssl','0'),(9,1,'show_admin_bar_front','true'),(10,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(11,1,'wp_user_level','10'),(12,1,'dismissed_wp_pointers','wp350_media,wp360_revisions,wp360_locks,wp390_widgets,disqus_settings_pointer'),(13,1,'show_welcome_panel','1'),(14,1,'wp_user-settings','dfw_width=662&hidetb=1&editor=html&libraryContent=browse&wplink=1&widgets_access=off&imgsize=full&ed_size=503'),(15,1,'wp_user-settings-time','1409792164'),(16,1,'wp_dashboard_quick_press_last_post_id','304'),(17,1,'managenav-menuscolumnshidden','a:3:{i:0;s:11:\"link-target\";i:1;s:3:\"xfn\";i:2;s:11:\"description\";}'),(18,1,'metaboxhidden_nav-menus','a:3:{i:0;s:8:\"add-post\";i:1;s:12:\"add-post_tag\";i:2;s:15:\"add-post_format\";}'),(19,1,'nav_menu_recently_edited','2');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(64) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(60) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'admin','$P$BiQDTSRz.lb8w24WpGpM/cStQ1dtfy/','admin','alkrauss48@gmail.com','','2014-06-02 22:35:10','',0,'admin');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-09-07 14:12:29
