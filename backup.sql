-- MySQL dump 10.13  Distrib 5.5.38, for debian-linux-gnu (i686)
--
-- Host: localhost    Database: the_societea_2
-- ------------------------------------------------------
-- Server version	5.5.38-0ubuntu0.14.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_cfs_sessions`
--

DROP TABLE IF EXISTS `wp_cfs_sessions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_cfs_sessions` (
  `id` varchar(32) NOT NULL DEFAULT '',
  `data` text,
  `expires` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_cfs_sessions`
--

LOCK TABLES `wp_cfs_sessions` WRITE;
/*!40000 ALTER TABLE `wp_cfs_sessions` DISABLE KEYS */;
INSERT INTO `wp_cfs_sessions` VALUES ('14f2bd010bf09499474e0f6a8e38f3d4','a:7:{s:7:\"post_id\";i:13;s:9:\"post_type\";s:4:\"post\";s:11:\"post_status\";s:5:\"draft\";s:12:\"field_groups\";a:2:{i:0;i:8;i:1;i:150;}s:20:\"confirmation_message\";s:0:\"\";s:16:\"confirmation_url\";s:0:\"\";s:9:\"front_end\";b:0;}','1411018208'),('3ae3ce3ebb694b6bd9d22214d57e9cf0','a:7:{s:7:\"post_id\";i:13;s:9:\"post_type\";s:4:\"post\";s:11:\"post_status\";s:5:\"draft\";s:12:\"field_groups\";a:2:{i:0;i:8;i:1;i:150;}s:20:\"confirmation_message\";s:0:\"\";s:16:\"confirmation_url\";s:0:\"\";s:9:\"front_end\";b:0;}','1411017312'),('723fa5487996df4cfebe024ab3acc16a','a:7:{s:7:\"post_id\";i:13;s:9:\"post_type\";s:4:\"post\";s:11:\"post_status\";s:5:\"draft\";s:12:\"field_groups\";a:2:{i:0;i:8;i:1;i:150;}s:20:\"confirmation_message\";s:0:\"\";s:16:\"confirmation_url\";s:0:\"\";s:9:\"front_end\";b:0;}','1411018191'),('eef6c54224816d06f4cbcb53095c09ff','a:7:{s:7:\"post_id\";i:13;s:9:\"post_type\";s:4:\"post\";s:11:\"post_status\";s:5:\"draft\";s:12:\"field_groups\";a:2:{i:0;i:8;i:1;i:150;}s:20:\"confirmation_message\";s:0:\"\";s:16:\"confirmation_url\";s:0:\"\";s:9:\"front_end\";b:0;}','1411017373');
/*!40000 ALTER TABLE `wp_cfs_sessions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_cfs_values`
--

DROP TABLE IF EXISTS `wp_cfs_values`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_cfs_values` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(10) unsigned DEFAULT NULL,
  `meta_id` int(10) unsigned DEFAULT NULL,
  `post_id` int(10) unsigned DEFAULT NULL,
  `base_field_id` int(10) unsigned DEFAULT '0',
  `hierarchy` text,
  `depth` int(10) unsigned DEFAULT '0',
  `weight` int(10) unsigned DEFAULT '0',
  `sub_weight` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `field_id_idx` (`field_id`),
  KEY `post_id_idx` (`post_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2965 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_cfs_values`
--

LOCK TABLES `wp_cfs_values` WRITE;
/*!40000 ALTER TABLE `wp_cfs_values` DISABLE KEYS */;
INSERT INTO `wp_cfs_values` VALUES (3,1,148,6,0,'',0,0,0),(348,7,627,66,0,'',0,0,0),(349,6,628,66,0,'',0,0,0),(350,8,629,66,0,'',0,0,0),(351,9,630,66,0,'',0,0,0),(352,10,631,66,0,'',0,0,0),(353,11,632,66,0,'',0,0,0),(354,3,633,66,2,'2:0:3',1,0,0),(355,4,634,66,2,'2:0:4',1,0,0),(356,5,635,66,2,'2:0:5',1,0,0),(357,3,636,66,2,'2:1:3',1,1,0),(358,4,637,66,2,'2:1:4',1,1,0),(359,5,638,66,2,'2:1:5',1,1,0),(360,3,639,66,2,'2:2:3',1,2,0),(361,4,640,66,2,'2:2:4',1,2,0),(362,5,641,66,2,'2:2:5',1,2,0),(363,3,642,66,2,'2:3:3',1,3,0),(364,4,643,66,2,'2:3:4',1,3,0),(365,5,644,66,2,'2:3:5',1,3,0),(582,1,954,30,0,'',0,0,0),(583,16,955,30,0,'',0,0,0),(2422,1,2870,16,0,'',0,0,0),(2423,16,2871,16,0,'',0,0,0),(2538,7,3048,252,0,'',0,0,0),(2539,6,3049,252,0,'',0,0,0),(2540,8,3050,252,0,'',0,0,0),(2541,9,3051,252,0,'',0,0,0),(2542,10,3052,252,0,'',0,0,0),(2543,11,3053,252,0,'',0,0,0),(2544,3,3054,252,2,'2:0:3',1,0,0),(2545,4,3055,252,2,'2:0:4',1,0,0),(2546,5,3056,252,2,'2:0:5',1,0,0),(2547,3,3057,252,2,'2:1:3',1,1,0),(2548,4,3058,252,2,'2:1:4',1,1,0),(2549,5,3059,252,2,'2:1:5',1,1,0),(2550,3,3060,252,2,'2:2:3',1,2,0),(2551,4,3061,252,2,'2:2:4',1,2,0),(2552,5,3062,252,2,'2:2:5',1,2,0),(2553,3,3063,252,2,'2:3:3',1,3,0),(2554,4,3064,252,2,'2:3:4',1,3,0),(2555,5,3065,252,2,'2:3:5',1,3,0),(2556,7,3066,63,0,'',0,0,0),(2557,6,3067,63,0,'',0,0,0),(2558,8,3068,63,0,'',0,0,0),(2559,9,3069,63,0,'',0,0,0),(2560,10,3070,63,0,'',0,0,0),(2561,11,3071,63,0,'',0,0,0),(2562,3,3072,63,2,'2:0:3',1,0,0),(2563,4,3073,63,2,'2:0:4',1,0,0),(2564,5,3074,63,2,'2:0:5',1,0,0),(2565,3,3075,63,2,'2:1:3',1,1,0),(2566,4,3076,63,2,'2:1:4',1,1,0),(2567,5,3077,63,2,'2:1:5',1,1,0),(2568,3,3078,63,2,'2:2:3',1,2,0),(2569,4,3079,63,2,'2:2:4',1,2,0),(2570,5,3080,63,2,'2:2:5',1,2,0),(2571,3,3081,63,2,'2:3:3',1,3,0),(2572,4,3082,63,2,'2:3:4',1,3,0),(2573,5,3083,63,2,'2:3:5',1,3,0),(2574,7,3084,64,0,'',0,0,0),(2575,6,3085,64,0,'',0,0,0),(2576,8,3086,64,0,'',0,0,0),(2577,9,3087,64,0,'',0,0,0),(2578,10,3088,64,0,'',0,0,0),(2579,11,3089,64,0,'',0,0,0),(2580,3,3090,64,2,'2:0:3',1,0,0),(2581,4,3091,64,2,'2:0:4',1,0,0),(2582,5,3092,64,2,'2:0:5',1,0,0),(2583,3,3093,64,2,'2:1:3',1,1,0),(2584,4,3094,64,2,'2:1:4',1,1,0),(2585,5,3095,64,2,'2:1:5',1,1,0),(2586,3,3096,64,2,'2:2:3',1,2,0),(2587,4,3097,64,2,'2:2:4',1,2,0),(2588,5,3098,64,2,'2:2:5',1,2,0),(2589,3,3099,64,2,'2:3:3',1,3,0),(2590,4,3100,64,2,'2:3:4',1,3,0),(2591,5,3101,64,2,'2:3:5',1,3,0),(2592,7,3102,65,0,'',0,0,0),(2593,6,3103,65,0,'',0,0,0),(2594,8,3104,65,0,'',0,0,0),(2595,9,3105,65,0,'',0,0,0),(2596,10,3106,65,0,'',0,0,0),(2597,11,3107,65,0,'',0,0,0),(2598,3,3108,65,2,'2:0:3',1,0,0),(2599,4,3109,65,2,'2:0:4',1,0,0),(2600,5,3110,65,2,'2:0:5',1,0,0),(2601,3,3111,65,2,'2:1:3',1,1,0),(2602,4,3112,65,2,'2:1:4',1,1,0),(2603,5,3113,65,2,'2:1:5',1,1,0),(2604,3,3114,65,2,'2:2:3',1,2,0),(2605,4,3115,65,2,'2:2:4',1,2,0),(2606,5,3116,65,2,'2:2:5',1,2,0),(2607,3,3117,65,2,'2:3:3',1,3,0),(2608,4,3118,65,2,'2:3:4',1,3,0),(2609,5,3119,65,2,'2:3:5',1,3,0),(2610,7,3120,214,0,'',0,0,0),(2611,6,3121,214,0,'',0,0,0),(2612,8,3122,214,0,'',0,0,0),(2613,9,3123,214,0,'',0,0,0),(2614,10,3124,214,0,'',0,0,0),(2615,11,3125,214,0,'',0,0,0),(2616,3,3126,214,2,'2:0:3',1,0,0),(2617,4,3127,214,2,'2:0:4',1,0,0),(2618,5,3128,214,2,'2:0:5',1,0,0),(2619,3,3129,214,2,'2:1:3',1,1,0),(2620,4,3130,214,2,'2:1:4',1,1,0),(2621,5,3131,214,2,'2:1:5',1,1,0),(2622,3,3132,214,2,'2:2:3',1,2,0),(2623,4,3133,214,2,'2:2:4',1,2,0),(2624,5,3134,214,2,'2:2:5',1,2,0),(2625,3,3135,214,2,'2:3:3',1,3,0),(2626,4,3136,214,2,'2:3:4',1,3,0),(2627,5,3137,214,2,'2:3:5',1,3,0),(2628,7,3138,68,0,'',0,0,0),(2629,6,3139,68,0,'',0,0,0),(2630,8,3140,68,0,'',0,0,0),(2631,9,3141,68,0,'',0,0,0),(2632,10,3142,68,0,'',0,0,0),(2633,11,3143,68,0,'',0,0,0),(2634,3,3144,68,2,'2:0:3',1,0,0),(2635,4,3145,68,2,'2:0:4',1,0,0),(2636,5,3146,68,2,'2:0:5',1,0,0),(2637,3,3147,68,2,'2:1:3',1,1,0),(2638,4,3148,68,2,'2:1:4',1,1,0),(2639,5,3149,68,2,'2:1:5',1,1,0),(2640,7,3150,38,0,'',0,0,0),(2641,6,3151,38,0,'',0,0,0),(2642,8,3152,38,0,'',0,0,0),(2643,9,3153,38,0,'',0,0,0),(2644,10,3154,38,0,'',0,0,0),(2645,11,3155,38,0,'',0,0,0),(2646,3,3156,38,2,'2:0:3',1,0,0),(2647,4,3157,38,2,'2:0:4',1,0,0),(2648,5,3158,38,2,'2:0:5',1,0,0),(2649,3,3159,38,2,'2:1:3',1,1,0),(2650,4,3160,38,2,'2:1:4',1,1,0),(2651,5,3161,38,2,'2:1:5',1,1,0),(2652,3,3162,38,2,'2:2:3',1,2,0),(2653,4,3163,38,2,'2:2:4',1,2,0),(2654,5,3164,38,2,'2:2:5',1,2,0),(2655,3,3165,38,2,'2:3:3',1,3,0),(2656,4,3166,38,2,'2:3:4',1,3,0),(2657,5,3167,38,2,'2:3:5',1,3,0),(2658,7,3168,67,0,'',0,0,0),(2659,6,3169,67,0,'',0,0,0),(2660,8,3170,67,0,'',0,0,0),(2661,9,3171,67,0,'',0,0,0),(2662,10,3172,67,0,'',0,0,0),(2663,11,3173,67,0,'',0,0,0),(2664,3,3174,67,2,'2:0:3',1,0,0),(2665,4,3175,67,2,'2:0:4',1,0,0),(2666,5,3176,67,2,'2:0:5',1,0,0),(2667,3,3177,67,2,'2:1:3',1,1,0),(2668,4,3178,67,2,'2:1:4',1,1,0),(2669,5,3179,67,2,'2:1:5',1,1,0),(2670,3,3180,67,2,'2:2:3',1,2,0),(2671,4,3181,67,2,'2:2:4',1,2,0),(2672,5,3182,67,2,'2:2:5',1,2,0),(2673,7,3183,71,0,'',0,0,0),(2674,6,3184,71,0,'',0,0,0),(2675,8,3185,71,0,'',0,0,0),(2676,9,3186,71,0,'',0,0,0),(2677,10,3187,71,0,'',0,0,0),(2678,11,3188,71,0,'',0,0,0),(2679,3,3189,71,2,'2:0:3',1,0,0),(2680,4,3190,71,2,'2:0:4',1,0,0),(2681,5,3191,71,2,'2:0:5',1,0,0),(2682,3,3192,71,2,'2:1:3',1,1,0),(2683,4,3193,71,2,'2:1:4',1,1,0),(2684,5,3194,71,2,'2:1:5',1,1,0),(2685,3,3195,71,2,'2:2:3',1,2,0),(2686,4,3196,71,2,'2:2:4',1,2,0),(2687,5,3197,71,2,'2:2:5',1,2,0),(2688,3,3198,71,2,'2:3:3',1,3,0),(2689,4,3199,71,2,'2:3:4',1,3,0),(2690,5,3200,71,2,'2:3:5',1,3,0),(2691,7,3201,69,0,'',0,0,0),(2692,6,3202,69,0,'',0,0,0),(2693,8,3203,69,0,'',0,0,0),(2694,9,3204,69,0,'',0,0,0),(2695,10,3205,69,0,'',0,0,0),(2696,11,3206,69,0,'',0,0,0),(2697,3,3207,69,2,'2:0:3',1,0,0),(2698,4,3208,69,2,'2:0:4',1,0,0),(2699,5,3209,69,2,'2:0:5',1,0,0),(2700,3,3210,69,2,'2:1:3',1,1,0),(2701,4,3211,69,2,'2:1:4',1,1,0),(2702,5,3212,69,2,'2:1:5',1,1,0),(2703,3,3213,69,2,'2:2:3',1,2,0),(2704,4,3214,69,2,'2:2:4',1,2,0),(2705,5,3215,69,2,'2:2:5',1,2,0),(2706,3,3216,69,2,'2:3:3',1,3,0),(2707,4,3217,69,2,'2:3:4',1,3,0),(2708,5,3218,69,2,'2:3:5',1,3,0),(2709,7,3219,70,0,'',0,0,0),(2710,6,3220,70,0,'',0,0,0),(2711,8,3221,70,0,'',0,0,0),(2712,9,3222,70,0,'',0,0,0),(2713,10,3223,70,0,'',0,0,0),(2714,11,3224,70,0,'',0,0,0),(2715,3,3225,70,2,'2:0:3',1,0,0),(2716,4,3226,70,2,'2:0:4',1,0,0),(2717,5,3227,70,2,'2:0:5',1,0,0),(2718,3,3228,70,2,'2:1:3',1,1,0),(2719,4,3229,70,2,'2:1:4',1,1,0),(2720,5,3230,70,2,'2:1:5',1,1,0),(2721,3,3231,70,2,'2:2:3',1,2,0),(2722,4,3232,70,2,'2:2:4',1,2,0),(2723,5,3233,70,2,'2:2:5',1,2,0),(2724,3,3234,70,2,'2:3:3',1,3,0),(2725,4,3235,70,2,'2:3:4',1,3,0),(2726,5,3236,70,2,'2:3:5',1,3,0),(2797,13,3309,4,12,'12:0:13',1,0,0),(2798,14,3310,4,12,'12:0:14',1,0,0),(2799,15,3311,4,12,'12:0:15',1,0,0),(2800,13,3312,4,12,'12:1:13',1,1,0),(2801,14,3313,4,12,'12:1:14',1,1,0),(2802,15,3314,4,12,'12:1:15',1,1,0),(2803,13,3315,4,12,'12:2:13',1,2,0),(2804,14,3316,4,12,'12:2:14',1,2,0),(2805,15,3317,4,12,'12:2:15',1,2,0),(2806,13,3318,4,12,'12:3:13',1,3,0),(2807,14,3319,4,12,'12:3:14',1,3,0),(2808,15,3320,4,12,'12:3:15',1,3,0),(2809,13,3321,4,12,'12:4:13',1,4,0),(2810,14,3322,4,12,'12:4:14',1,4,0),(2811,15,3323,4,12,'12:4:15',1,4,0),(2812,13,3324,4,12,'12:5:13',1,5,0),(2813,14,3325,4,12,'12:5:14',1,5,0),(2814,15,3326,4,12,'12:5:15',1,5,0),(2815,13,3327,4,12,'12:6:13',1,6,0),(2816,14,3328,4,12,'12:6:14',1,6,0),(2817,15,3329,4,12,'12:6:15',1,6,0),(2818,13,3330,4,12,'12:7:13',1,7,0),(2819,14,3331,4,12,'12:7:14',1,7,0),(2820,15,3332,4,12,'12:7:15',1,7,0),(2893,1,4459,13,0,'',0,0,0),(2894,16,4460,13,0,'',0,0,0),(2895,18,4461,13,17,'17:0:18',1,0,0),(2896,22,4462,13,17,'17:0:22',1,0,0),(2897,20,4463,13,17,'17:0:19:0:20',2,0,0),(2898,21,4464,13,17,'17:0:19:0:21',2,0,0),(2899,20,4465,13,17,'17:0:19:1:20',2,1,0),(2900,21,4466,13,17,'17:0:19:1:21',2,1,0),(2901,20,4467,13,17,'17:0:19:2:20',2,2,0),(2902,21,4468,13,17,'17:0:19:2:21',2,2,0),(2903,20,4469,13,17,'17:0:19:3:20',2,3,0),(2904,21,4470,13,17,'17:0:19:3:21',2,3,0),(2905,20,4471,13,17,'17:0:19:4:20',2,4,0),(2906,21,4472,13,17,'17:0:19:4:21',2,4,0),(2907,20,4473,13,17,'17:0:19:5:20',2,5,0),(2908,21,4474,13,17,'17:0:19:5:21',2,5,0),(2909,20,4475,13,17,'17:0:19:6:20',2,6,0),(2910,21,4476,13,17,'17:0:19:6:21',2,6,0),(2911,20,4477,13,17,'17:0:19:7:20',2,7,0),(2912,21,4478,13,17,'17:0:19:7:21',2,7,0),(2913,20,4479,13,17,'17:0:19:8:20',2,8,0),(2914,21,4480,13,17,'17:0:19:8:21',2,8,0),(2915,20,4481,13,17,'17:0:19:9:20',2,9,0),(2916,21,4482,13,17,'17:0:19:9:21',2,9,0),(2917,18,4483,13,17,'17:1:18',1,1,0),(2918,22,4484,13,17,'17:1:22',1,1,0),(2919,20,4485,13,17,'17:1:19:0:20',2,0,0),(2920,21,4486,13,17,'17:1:19:0:21',2,0,0),(2921,20,4487,13,17,'17:1:19:1:20',2,1,0),(2922,21,4488,13,17,'17:1:19:1:21',2,1,0),(2923,20,4489,13,17,'17:1:19:2:20',2,2,0),(2924,21,4490,13,17,'17:1:19:2:21',2,2,0),(2925,20,4491,13,17,'17:1:19:3:20',2,3,0),(2926,21,4492,13,17,'17:1:19:3:21',2,3,0),(2927,20,4493,13,17,'17:1:19:4:20',2,4,0),(2928,21,4494,13,17,'17:1:19:4:21',2,4,0),(2929,20,4495,13,17,'17:1:19:5:20',2,5,0),(2930,21,4496,13,17,'17:1:19:5:21',2,5,0),(2931,20,4497,13,17,'17:1:19:6:20',2,6,0),(2932,21,4498,13,17,'17:1:19:6:21',2,6,0),(2933,20,4499,13,17,'17:1:19:7:20',2,7,0),(2934,21,4500,13,17,'17:1:19:7:21',2,7,0),(2935,20,4501,13,17,'17:1:19:8:20',2,8,0),(2936,21,4502,13,17,'17:1:19:8:21',2,8,0),(2937,20,4503,13,17,'17:1:19:9:20',2,9,0),(2938,21,4504,13,17,'17:1:19:9:21',2,9,0),(2939,20,4505,13,17,'17:1:19:11:20',2,11,0),(2940,21,4506,13,17,'17:1:19:11:21',2,11,0),(2941,18,4507,13,17,'17:2:18',1,2,0),(2942,22,4508,13,17,'17:2:22',1,2,0),(2943,20,4509,13,17,'17:2:19:0:20',2,0,0),(2944,21,4510,13,17,'17:2:19:0:21',2,0,0),(2945,20,4511,13,17,'17:2:19:1:20',2,1,0),(2946,21,4512,13,17,'17:2:19:1:21',2,1,0),(2947,20,4513,13,17,'17:2:19:2:20',2,2,0),(2948,21,4514,13,17,'17:2:19:2:21',2,2,0),(2949,20,4515,13,17,'17:2:19:3:20',2,3,0),(2950,21,4516,13,17,'17:2:19:3:21',2,3,0),(2951,20,4517,13,17,'17:2:19:4:20',2,4,0),(2952,21,4518,13,17,'17:2:19:4:21',2,4,0),(2953,20,4519,13,17,'17:2:19:5:20',2,5,0),(2954,21,4520,13,17,'17:2:19:5:21',2,5,0),(2955,20,4521,13,17,'17:2:19:6:20',2,6,0),(2956,21,4522,13,17,'17:2:19:6:21',2,6,0),(2957,20,4523,13,17,'17:2:19:7:20',2,7,0),(2958,21,4524,13,17,'17:2:19:7:21',2,7,0),(2959,20,4525,13,17,'17:2:19:8:20',2,8,0),(2960,21,4526,13,17,'17:2:19:8:21',2,8,0),(2961,20,4527,13,17,'17:2:19:9:20',2,9,0),(2962,21,4528,13,17,'17:2:19:9:21',2,9,0),(2963,20,4529,13,17,'17:2:19:10:20',2,10,0),(2964,21,4530,13,17,'17:2:19:10:21',2,10,0);
/*!40000 ALTER TABLE `wp_cfs_values` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`),
  KEY `disqus_dupecheck` (`meta_key`,`meta_value`(11))
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
INSERT INTO `wp_commentmeta` VALUES (1,4,'akismet_result','false'),(2,4,'akismet_history','a:4:{s:4:\"time\";d:1406225895.7898979;s:7:\"message\";s:28:\"Akismet cleared this comment\";s:5:\"event\";s:9:\"check-ham\";s:4:\"user\";s:0:\"\";}'),(4,4,'akismet_history','a:4:{s:4:\"time\";d:1406227547.9390969;s:7:\"message\";s:44:\"admin changed the comment status to approved\";s:5:\"event\";s:15:\"status-approved\";s:4:\"user\";s:5:\"admin\";}'),(5,3,'akismet_history','a:4:{s:4:\"time\";d:1406227547.9453449;s:7:\"message\";s:44:\"admin changed the comment status to approved\";s:5:\"event\";s:15:\"status-approved\";s:4:\"user\";s:5:\"admin\";}'),(6,2,'akismet_history','a:4:{s:4:\"time\";d:1406227547.9560931;s:7:\"message\";s:44:\"admin changed the comment status to approved\";s:5:\"event\";s:15:\"status-approved\";s:4:\"user\";s:5:\"admin\";}'),(7,5,'dsq_parent_post_id',''),(8,5,'dsq_post_id','1546242956'),(9,6,'akismet_result','false'),(10,6,'akismet_history','a:4:{s:4:\"time\";d:1409235610.7454171;s:7:\"message\";s:28:\"Akismet cleared this comment\";s:5:\"event\";s:9:\"check-ham\";s:4:\"user\";s:0:\"\";}'),(12,7,'akismet_result','false'),(13,7,'akismet_history','a:4:{s:4:\"time\";d:1409270553.9715359;s:7:\"message\";s:28:\"Akismet cleared this comment\";s:5:\"event\";s:9:\"check-ham\";s:4:\"user\";s:0:\"\";}'),(15,8,'dsq_parent_post_id',''),(16,8,'dsq_post_id','1575120066'),(17,9,'dsq_parent_post_id',''),(18,9,'dsq_post_id','1592261029'),(19,10,'dsq_parent_post_id','1592261029'),(20,10,'dsq_post_id','1592265397'),(21,11,'akismet_result','false'),(22,11,'akismet_history','a:4:{s:4:\"time\";d:1411050709.575835;s:7:\"message\";s:28:\"Akismet cleared this comment\";s:5:\"event\";s:9:\"check-ham\";s:4:\"user\";s:0:\"\";}'),(23,11,'akismet_as_submitted','a:11:{s:14:\"comment_author\";s:55:\"Using GeoJSON files with Google Maps API | Aaron Krauss\";s:18:\"comment_author_url\";s:72:\"http://thesocietea.org/2014/09/using-geojson-files-with-google-maps-api/\";s:20:\"comment_author_email\";s:0:\"\";s:15:\"comment_content\";s:231:\"[&#8230;] visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, I am guilty here). By just using the naked Google Maps API libraries, this is impossible. But we don&#8217;t like to [&#8230;]\";s:12:\"comment_type\";s:8:\"pingback\";s:7:\"user_ip\";s:14:\"162.243.14.224\";s:10:\"user_agent\";s:48:\"The Incutio XML-RPC PHP Library -- WordPress/4.0\";s:4:\"blog\";s:22:\"http://thesocietea.org\";s:9:\"blog_lang\";s:5:\"en_US\";s:12:\"blog_charset\";s:5:\"UTF-8\";s:9:\"permalink\";s:47:\"http://thesocietea.org/2014/06/where-i-buy-tea/\";}');
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (2,158,'What This Site Runs On &#8211; Part 2 | Aaron Krauss','','http://thesocietea.org/2014/06/what-this-site-runs-on-part-2/','162.243.14.224','2014-06-30 18:11:27','2014-06-30 18:11:27','[&#8230;] we&#8217;ve established that this site is running on WordPress (wondering why I made that choice? Read about it), I want to delve in further to talk about what else I&#8217;m using, and the tools I used to build [&#8230;]',0,'1','The Incutio XML-RPC PHP Library -- WordPress/3.9.1','pingback',0,0),(3,6,'What This Site Runs On &#8211; Part 2 | Aaron Krauss','','http://thesocietea.org/2014/06/what-this-site-runs-on-part-2/','162.243.14.224','2014-06-30 18:15:26','2014-06-30 18:15:26','[&#8230;] About [&#8230;]',0,'1','The Incutio XML-RPC PHP Library -- WordPress/3.9.1','pingback',0,0),(4,154,'How to Learn Vim | Aaron Krauss','','http://thesocietea.org/2014/07/how-to-learn-vim/','162.243.14.224','2014-07-24 18:18:15','2014-07-24 18:18:15','[&#8230;] 7 months later, I&#8217;m following up with my first vim blog post about why you should use vim. If you&#8217;ve made it here, then you&#8217;re either seriously interested in learning vim (which [&#8230;]',0,'1','The Incutio XML-RPC PHP Library -- WordPress/3.9.1','pingback',0,0),(5,142,'Guest','anonymized-1546242956@disqus.com','','72.198.54.181','2014-08-17 04:25:00','2014-08-17 04:25:00','Test',0,'1','Disqus/1.1(2.77):1546242956','',0,0),(6,233,'Building Javascript with Grunt, Bower, Browserify | Aaron Krauss','','http://thesocietea.org/2014/08/building-javascript-with-grunt-bower-browserify/','162.243.14.224','2014-08-28 14:20:10','2014-08-28 14:20:10','[&#8230;] bower and browserify; if you haven&#8217;t read it yet, I highly recommend you start off by reading Getting Familiar with Bower and Browserify before starting here. Let&#8217;s review our goals regarding javascript building that we landed [&#8230;]',0,'0','The Incutio XML-RPC PHP Library -- WordPress/3.9.2','pingback',0,0),(7,220,'Vim as Your Editor? | Aaron Krauss','','http://thesocietea.org/2014/06/vim-as-your-editor/','162.243.14.224','2014-08-29 00:02:33','2014-08-29 00:02:33','[&#8230;] and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the best ways to learn Vim (and trust me, there&#8217;s a bunch of [&#8230;]',0,'0','The Incutio XML-RPC PHP Library -- WordPress/3.9.2','pingback',0,0),(8,305,'OleTange','disqus.com@tange.dk','','130.225.254.30','2014-09-05 11:28:00','2014-09-05 11:28:00','\'ls | xargs -0\' should not work. You need \'find -print0\' or you could use GNU Parallel and skip the -0 as GNU Parallel deals correctly with space, \' and \". GNU Parallel would also make some of the commands more readable:  ls | parallel echo {}\" is a file\"nnLearn more: nn* https://www.youtube.com/playlist?list=PL284C9FF2488BC6D1n* http://www.gnu.org/software/parallel/parallel_tutorial.htmln* http://www.gnu.org/software/parallel/man.html',0,'1','Disqus/1.1(2.77):1575120066','',0,0),(9,305,'somebodyelse','derrich@gmail.com','','209.6.202.77','2014-09-16 23:01:00','2014-09-16 23:01:00','I don\'t know why you felt the need to make this more complicated, since doing this as a one-liner in sed is about as simple as a sed invocation can get:\n\n$ sed -i \'s/vim/v/g\' ',0,'1','Disqus/1.1(2.77):1592261029','',0,0),(10,305,'alkrauss48','alkrauss48@gmail.com','','198.102.159.200','2014-09-16 23:05:00','2014-09-16 23:05:00','You\'re right, and I mention that in my closing paragraph. I use all of these tools but had the least familiarity with sed, and after learning more about it, I wanted to write about it. That turned into wanting to include some tools that you can often times use along with it, and I figured that there are probably other devs out there that may be unfamiliar with some of these tools.\n\n\nErgo, blog post was born!',0,'1','Disqus/1.1(2.77):1592265397','',9,0),(11,142,'Using GeoJSON files with Google Maps API | Aaron Krauss','','http://thesocietea.org/2014/09/using-geojson-files-with-google-maps-api/','162.243.14.224','2014-09-18 14:31:49','2014-09-18 14:31:49','[&#8230;] visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, I am guilty here). By just using the naked Google Maps API libraries, this is impossible. But we don&#8217;t like to [&#8230;]',0,'0','The Incutio XML-RPC PHP Library -- WordPress/4.0','pingback',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(64) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB AUTO_INCREMENT=6158 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://thesocietea.org','yes'),(2,'blogname','Aaron Krauss','yes'),(3,'blogdescription','Developer','yes'),(4,'users_can_register','0','yes'),(5,'admin_email','alkrauss48@gmail.com','yes'),(6,'start_of_week','1','yes'),(7,'use_balanceTags','','yes'),(8,'use_smilies','1','yes'),(9,'require_name_email','1','yes'),(10,'comments_notify','1','yes'),(11,'posts_per_rss','10','yes'),(12,'rss_use_excerpt','0','yes'),(13,'mailserver_url','mail.example.com','yes'),(14,'mailserver_login','login@example.com','yes'),(15,'mailserver_pass','password','yes'),(16,'mailserver_port','110','yes'),(17,'default_category','1','yes'),(18,'default_comment_status','open','yes'),(19,'default_ping_status','open','yes'),(20,'default_pingback_flag','1','yes'),(21,'posts_per_page','10','yes'),(22,'date_format','F j, Y','yes'),(23,'time_format','g:i a','yes'),(24,'links_updated_date_format','F j, Y g:i a','yes'),(25,'comment_moderation','0','yes'),(26,'moderation_notify','1','yes'),(27,'permalink_structure','/%year%/%monthnum%/%postname%/','yes'),(28,'gzipcompression','0','yes'),(29,'hack_file','0','yes'),(30,'blog_charset','UTF-8','yes'),(31,'moderation_keys','','no'),(32,'active_plugins','a:8:{i:0;s:19:\"akismet/akismet.php\";i:1;s:26:\"custom-field-suite/cfs.php\";i:2;s:32:\"disqus-comment-system/disqus.php\";i:3;s:45:\"enable-media-replace/enable-media-replace.php\";i:4;s:37:\"post-types-order/post-types-order.php\";i:5;s:39:\"search-everything/search-everything.php\";i:6;s:39:\"syntaxhighlighter/syntaxhighlighter.php\";i:7;s:53:\"velvet-blues-update-urls/velvet-blues-update-urls.php\";}','yes'),(33,'home','http://thesocietea.org','yes'),(34,'category_base','','yes'),(35,'ping_sites','http://rpc.pingomatic.com/','yes'),(36,'advanced_edit','0','yes'),(37,'comment_max_links','2','yes'),(38,'gmt_offset','0','yes'),(39,'default_email_category','1','yes'),(40,'recently_edited','','no'),(41,'template','the_societea','yes'),(42,'stylesheet','the_societea','yes'),(43,'comment_whitelist','1','yes'),(44,'blacklist_keys','','no'),(45,'comment_registration','0','yes'),(46,'html_type','text/html','yes'),(47,'use_trackback','0','yes'),(48,'default_role','subscriber','yes'),(49,'db_version','29630','yes'),(50,'uploads_use_yearmonth_folders','1','yes'),(51,'upload_path','','yes'),(52,'blog_public','1','yes'),(53,'default_link_category','0','yes'),(54,'show_on_front','page','yes'),(55,'tag_base','','yes'),(56,'show_avatars','1','yes'),(57,'avatar_rating','G','yes'),(58,'upload_url_path','','yes'),(59,'thumbnail_size_w','150','yes'),(60,'thumbnail_size_h','150','yes'),(61,'thumbnail_crop','1','yes'),(62,'medium_size_w','300','yes'),(63,'medium_size_h','300','yes'),(64,'avatar_default','mystery','yes'),(65,'large_size_w','1024','yes'),(66,'large_size_h','1024','yes'),(67,'image_default_link_type','file','yes'),(68,'image_default_size','','yes'),(69,'image_default_align','','yes'),(70,'close_comments_for_old_posts','0','yes'),(71,'close_comments_days_old','14','yes'),(72,'thread_comments','1','yes'),(73,'thread_comments_depth','5','yes'),(74,'page_comments','0','yes'),(75,'comments_per_page','50','yes'),(76,'default_comments_page','newest','yes'),(77,'comment_order','asc','yes'),(78,'sticky_posts','a:0:{}','yes'),(79,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(80,'widget_text','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(81,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(82,'uninstall_plugins','a:1:{s:27:\"wp-markdown/wp-markdown.php\";a:2:{i:0;s:18:\"WordPress_Markdown\";i:1;s:9:\"uninstall\";}}','no'),(83,'timezone_string','','yes'),(84,'page_for_posts','0','yes'),(85,'page_on_front','4','yes'),(86,'default_post_format','0','yes'),(87,'link_manager_enabled','0','yes'),(88,'initial_db_version','27916','yes'),(89,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:62:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:9:\"add_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(90,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(91,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(92,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(93,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(94,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(95,'sidebars_widgets','a:3:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:13:\"array_version\";i:3;}','yes'),(96,'_transient_random_seed','99c4e22982f37a5513f6713e94e65dac','yes'),(97,'logged_in_key','as>*,uS,x),u3]<T[U2:Q)n}xljY4e;)x]nWvO3P)QOn/LHEA7p/3d}=4t+@^)7}','yes'),(98,'logged_in_salt','Ypq39}RyWXsy1B3~~v)-2dDC7^;tv>.mk3!FeTW*>ERc$IG McCio3Acw-^ P0a5','yes'),(99,'cron','a:6:{i:1411669095;a:1:{s:24:\"akismet_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1411672620;a:1:{s:20:\"wp_maybe_auto_update\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1411684517;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1411684521;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1411684905;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes'),(101,'auth_key','.YPV8;p%Dgf[M</ZvwZAk9*Wgyt~NO^05,,r=FGJ/7?*!!^X^L >,y6{rq2Lmm6Z','yes'),(102,'auth_salt','mJFh)O;WpeY}AS>Tf0bWE{kRX7)G1Z-Dy,-`QxoKw}<#Ed^ZD]~(ra*6y%DobD]/','yes'),(109,'nonce_key','Q,^Q}ytXd29u^.kLt=@iW*_Q!4OYpNYyfWme[W0A.2s1-m:P@d}:mybjU.O3v~+1','yes'),(110,'nonce_salt','+celW{qLF`rD)*]f?X3k$l&8`o$Uqfo4.7&ylB&u$Mt^U%*n4]}EC|PhlM~Ep}kA','yes'),(132,'current_theme','','yes'),(133,'theme_mods_the_societea','a:7:{i:0;b:0;s:16:\"background_color\";s:6:\"ffffff\";s:16:\"background_image\";s:0:\"\";s:17:\"background_repeat\";s:6:\"repeat\";s:21:\"background_position_x\";s:4:\"left\";s:21:\"background_attachment\";s:5:\"fixed\";s:18:\"nav_menu_locations\";a:0:{}}','yes'),(134,'theme_switched','','yes'),(138,'widget_pages','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(139,'widget_calendar','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(140,'widget_tag_cloud','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(141,'widget_nav_menu','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(145,'recently_activated','a:0:{}','yes'),(146,'theme_mods_twentyfourteen','a:1:{s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1401768087;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}}}','yes'),(151,'cfs_next_field_id','23','yes'),(152,'cfs_version','2.3.6','yes'),(154,'nav_menu_options','a:2:{i:0;b:0;s:8:\"auto_add\";a:0:{}}','yes'),(266,'cpto_options','a:3:{s:8:\"autosort\";s:1:\"1\";s:9:\"adminsort\";s:1:\"1\";s:10:\"capability\";s:13:\"switch_themes\";}','yes'),(267,'CPT_configured','TRUE','yes'),(319,'category_children','a:0:{}','yes'),(898,'akismet_available_servers','a:4:{s:12:\"66.135.58.62\";b:1;s:12:\"66.135.58.61\";b:1;s:12:\"192.0.80.244\";b:1;s:12:\"192.0.80.246\";b:1;}','yes'),(899,'akismet_connectivity_time','1404312065','yes'),(900,'akismet_strictness','0','yes'),(901,'akismet_show_user_comments_approved','0','yes'),(902,'wordpress_api_key','ae40d7cbc870','yes'),(1126,'syntaxhighlighter_settings','a:15:{s:9:\"shversion\";i:3;s:5:\"theme\";s:5:\"rdark\";s:6:\"gutter\";i:1;s:9:\"autolinks\";i:1;s:9:\"smarttabs\";i:1;s:9:\"wraplines\";i:1;s:9:\"classname\";s:0:\"\";s:9:\"firstline\";s:1:\"1\";s:14:\"padlinenumbers\";s:5:\"false\";s:7:\"tabsize\";s:1:\"4\";s:5:\"title\";s:0:\"\";s:14:\"loadallbrushes\";i:0;s:8:\"collapse\";i:0;s:5:\"light\";i:0;s:7:\"toolbar\";i:0;}','yes'),(2086,'disqus_active','1','yes'),(2087,'disqus_version','2.77','yes'),(2088,'disqus_forum_url','thesocietea','yes'),(2089,'disqus_cc_fix','1','yes'),(2090,'disqus_api_key','0C4Uv5QN6RrHuDFrLFF6A0r59ittV0QaxfWmssw1c9qsNI30YSnCEvJAdBsA31xf','yes'),(2091,'disqus_user_api_key','aJgw8hjUIqv5lCT6fsRBqfZrHKwpWYehUZMebLxvCWAND1FSpKQJxVvcTYD7cNnE','yes'),(2092,'disqus_replace','all','yes'),(2163,'disqus_last_comment_id','1592265397','yes'),(4107,'se_meta','a:10:{s:7:\"blog_id\";b:0;s:7:\"api_key\";b:0;s:8:\"auth_key\";b:0;s:7:\"version\";s:5:\"8.1.2\";s:13:\"first_version\";s:5:\"8.1.2\";s:8:\"new_user\";b:1;s:4:\"name\";s:0:\"\";s:5:\"email\";s:0:\"\";s:24:\"show_options_page_notice\";b:0;s:16:\"se_global_notice\";N;}','yes'),(4108,'se_options','a:21:{s:21:\"se_exclude_categories\";s:0:\"\";s:26:\"se_exclude_categories_list\";s:0:\"\";s:16:\"se_exclude_posts\";s:0:\"\";s:21:\"se_exclude_posts_list\";s:0:\"\";s:18:\"se_use_page_search\";b:0;s:21:\"se_use_comment_search\";b:1;s:17:\"se_use_tag_search\";b:1;s:17:\"se_use_tax_search\";b:1;s:22:\"se_use_category_search\";b:1;s:25:\"se_approved_comments_only\";b:1;s:22:\"se_approved_pages_only\";b:0;s:21:\"se_use_excerpt_search\";b:0;s:19:\"se_use_draft_search\";b:0;s:24:\"se_use_attachment_search\";b:0;s:14:\"se_use_authors\";b:0;s:18:\"se_use_cmt_authors\";b:0;s:22:\"se_use_metadata_search\";b:1;s:16:\"se_use_highlight\";b:1;s:18:\"se_highlight_color\";s:6:\"orange\";s:18:\"se_highlight_style\";s:0:\"\";s:19:\"se_research_metabox\";a:2:{s:18:\"visible_on_compose\";b:1;s:23:\"external_search_enabled\";b:0;}}','yes'),(4219,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1411641795;s:7:\"checked\";a:4:{s:12:\"the_societea\";s:0:\"\";s:14:\"twentyfourteen\";s:3:\"1.2\";s:14:\"twentythirteen\";s:3:\"1.3\";s:12:\"twentytwelve\";s:3:\"1.5\";}s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}}','yes'),(4885,'WPLANG','','yes'),(4886,'db_upgraded','','yes'),(4888,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:1:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-4.0.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-4.0.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-4.0-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.0-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"4.0\";s:7:\"version\";s:3:\"4.0\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"3.8\";s:15:\"partial_version\";s:0:\"\";}}s:12:\"last_checked\";i:1411641793;s:15:\"version_checked\";s:3:\"4.0\";s:12:\"translations\";a:0:{}}','yes'),(4889,'rewrite_rules','a:105:{s:10:\"project/?$\";s:27:\"index.php?post_type=project\";s:40:\"project/feed/(feed|rdf|rss|rss2|atom)/?$\";s:44:\"index.php?post_type=project&feed=$matches[1]\";s:35:\"project/(feed|rdf|rss|rss2|atom)/?$\";s:44:\"index.php?post_type=project&feed=$matches[1]\";s:27:\"project/page/([0-9]{1,})/?$\";s:45:\"index.php?post_type=project&paged=$matches[1]\";s:47:\"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:42:\"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:35:\"category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:17:\"category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:44:\"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:39:\"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:32:\"tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:14:\"tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:45:\"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:40:\"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:33:\"type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:15:\"type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:31:\"cfs/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:41:\"cfs/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:61:\"cfs/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:56:\"cfs/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:56:\"cfs/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:24:\"cfs/([^/]+)/trackback/?$\";s:45:\"index.php?post_type=cfs&name=$matches[1]&tb=1\";s:32:\"cfs/([^/]+)/page/?([0-9]{1,})/?$\";s:58:\"index.php?post_type=cfs&name=$matches[1]&paged=$matches[2]\";s:39:\"cfs/([^/]+)/comment-page-([0-9]{1,})/?$\";s:58:\"index.php?post_type=cfs&name=$matches[1]&cpage=$matches[2]\";s:24:\"cfs/([^/]+)(/[0-9]+)?/?$\";s:57:\"index.php?post_type=cfs&name=$matches[1]&page=$matches[2]\";s:20:\"cfs/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:30:\"cfs/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:50:\"cfs/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:45:\"cfs/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:45:\"cfs/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:35:\"project/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:45:\"project/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:65:\"project/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:60:\"project/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:60:\"project/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:28:\"project/([^/]+)/trackback/?$\";s:34:\"index.php?project=$matches[1]&tb=1\";s:48:\"project/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:46:\"index.php?project=$matches[1]&feed=$matches[2]\";s:43:\"project/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:46:\"index.php?project=$matches[1]&feed=$matches[2]\";s:36:\"project/([^/]+)/page/?([0-9]{1,})/?$\";s:47:\"index.php?project=$matches[1]&paged=$matches[2]\";s:43:\"project/([^/]+)/comment-page-([0-9]{1,})/?$\";s:47:\"index.php?project=$matches[1]&cpage=$matches[2]\";s:28:\"project/([^/]+)(/[0-9]+)?/?$\";s:46:\"index.php?project=$matches[1]&page=$matches[2]\";s:24:\"project/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:34:\"project/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:54:\"project/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:49:\"project/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:49:\"project/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:12:\"robots\\.txt$\";s:18:\"index.php?robots=1\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:27:\"comment-page-([0-9]{1,})/?$\";s:38:\"index.php?&page_id=4&cpage=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:47:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:57:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:77:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:44:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/trackback/?$\";s:69:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&tb=1\";s:64:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&feed=$matches[4]\";s:59:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&feed=$matches[4]\";s:52:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/page/?([0-9]{1,})/?$\";s:82:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&paged=$matches[4]\";s:59:\"([0-9]{4})/([0-9]{1,2})/([^/]+)/comment-page-([0-9]{1,})/?$\";s:82:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&cpage=$matches[4]\";s:44:\"([0-9]{4})/([0-9]{1,2})/([^/]+)(/[0-9]+)?/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&name=$matches[3]&page=$matches[4]\";s:36:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:46:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:66:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:61:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:61:\"[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:51:\"([0-9]{4})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&cpage=$matches[3]\";s:38:\"([0-9]{4})/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&cpage=$matches[2]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:20:\"(.?.+?)(/[0-9]+)?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";}','yes'),(4890,'can_compress_scripts','0','yes'),(5601,'_site_transient_timeout_browser_05be1aab5db2342cbc9f1a1fbf817775','1411514845','yes'),(5602,'_site_transient_browser_05be1aab5db2342cbc9f1a1fbf817775','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"37.0.2062.94\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(5671,'_site_transient_timeout_browser_a98ea4be9775863f64321af5f6849f9b','1411607705','yes'),(5672,'_site_transient_browser_a98ea4be9775863f64321af5f6849f9b','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"37.0.2062.120\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(5673,'_transient_timeout_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','1411046106','no'),(5674,'_transient_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:51:\"\n	\n	\n	\n	\n	\n	\n		\n		\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"https://wordpress.org/news\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 17:05:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/?v=4.1-alpha\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.0 “Benny”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"https://wordpress.org/news/2014/09/benny/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"https://wordpress.org/news/2014/09/benny/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 17:05:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3296\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:370:\"Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader Benny Goodman, is available for download or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:23318:\"<p>Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader <a href=\"http://en.wikipedia.org/wiki/Benny_Goodman\">Benny Goodman</a>, is available <a href=\"http://wordpress.org/download/\">for download</a> or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience we think you&#8217;ll enjoy.</p>\n<div id=\"v-bUdzKMro-1\" class=\"video-player\"><embed id=\"v-bUdzKMro-1-video\" src=\"https://v0.wordpress.com/player.swf?v=1.03&amp;guid=bUdzKMro&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"692\" height=\"388\" title=\"Introducing WordPress 4.0 &quot;Benny&quot;\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div>\n<hr />\n<h2 style=\"text-align: center\">Manage your media with style</h2>\n<p><img class=\"alignnone size-full wp-image-3316\" src=\"https://i0.wp.com/wordpress.org/news/files/2014/09/media.jpg?resize=692%2C406\" alt=\"Media Library\" data-recalc-dims=\"1\" />Explore your uploads in a beautiful, endless grid. A new details preview makes viewing and editing any amount of media in sequence a snap.</p>\n<hr />\n<h2 style=\"text-align: center\">Working with embeds has never been easier</h2>\n<div style=\"width: 632px; height: 445px; \" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<video class=\"wp-video-shortcode\" id=\"video-3296-1\" width=\"632\" height=\"445\" autoplay=\"true\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//s.w.org/images/core/4.0/embed.mp4?_=1\" /><source type=\"video/webm\" src=\"//s.w.org/images/core/4.0/embed.webm?_=1\" /><source type=\"video/ogg\" src=\"//s.w.org/images/core/4.0/embed.ogv?_=1\" /><a href=\"//s.w.org/images/core/4.0/embed.mp4\">//s.w.org/images/core/4.0/embed.mp4</a></video></div>\n<p>Paste in a YouTube URL on a new line, and watch it magically become an embedded video. Now try it with a tweet. Oh yeah — embedding has become a visual experience. The editor shows a true preview of your embedded content, saving you time and giving you confidence.</p>\n<p>We’ve expanded the services supported by default, too — you can embed videos from CollegeHumor, playlists from YouTube, and talks from TED. <a href=\"http://codex.wordpress.org/Embeds\">Check out all of the embeds</a> that WordPress supports.</p>\n<hr />\n<h2 style=\"text-align: center\">Focus on your content</h2>\n<div style=\"width: 632px; height: 356px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-3296-2\" width=\"632\" height=\"356\" autoplay=\"true\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//s.w.org/images/core/4.0/focus.mp4?_=2\" /><source type=\"video/webm\" src=\"//s.w.org/images/core/4.0/focus.webm?_=2\" /><source type=\"video/ogg\" src=\"//s.w.org/images/core/4.0/focus.ogv?_=2\" /><a href=\"//s.w.org/images/core/4.0/focus.mp4\">//s.w.org/images/core/4.0/focus.mp4</a></video></div>\n<p>Writing and editing is smoother and more immersive with an editor that expands to fit your content as you write, and keeps the formatting tools available at all times.</p>\n<hr />\n<h2 style=\"text-align: center\">Finding the right plugin</h2>\n<p><img class=\"aligncenter size-large wp-image-3309\" src=\"https://i0.wp.com/wordpress.org/news/files/2014/09/add-plugin1.png?resize=692%2C405\" alt=\"Add plugins\" data-recalc-dims=\"1\" /></p>\n<p>There are more than 30,000 free and open source plugins in the WordPress plugin directory. WordPress 4.0 makes it easier to find the right one for your needs, with new metrics, improved search, and a more visual browsing experience.</p>\n<hr />\n<h2 style=\"text-align: center\">The Ensemble</h2>\n<p>This release was led by <a href=\"http://helenhousandi.com\">Helen Hou-Sandí</a>, with the help of these fine individuals. There are 275 contributors with props in this release, a new high. Pull up some Benny Goodman on your music service of choice, as a bandleader or in one of his turns as a classical clarinetist, and check out some of their profiles:</p>\n<p><a href=\"http://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"http://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"http://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"http://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>, <a href=\"http://profiles.wordpress.org/tellyworth\">Alex Shiels</a>, <a href=\"http://profiles.wordpress.org/alexanderrohmann\">Alexander Rohmann</a>, <a href=\"http://profiles.wordpress.org/aliso\">Alison Barrett</a>, <a href=\"http://profiles.wordpress.org/collinsinternet\">Allan Collins</a>, <a href=\"http://profiles.wordpress.org/amit\">Amit Gupta</a>, <a href=\"http://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>, <a href=\"http://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"http://profiles.wordpress.org/andrezrv\">Andres Villarreal</a>, <a href=\"http://profiles.wordpress.org/zamfeer\">Andrew Mowe</a>, <a href=\"http://profiles.wordpress.org/sumobi\">Andrew Munro</a>, <a href=\"http://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"http://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"http://profiles.wordpress.org/andy\">Andy Skelton</a>, <a href=\"http://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>, <a href=\"http://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"http://profiles.wordpress.org/arnee\">arnee</a>, <a href=\"http://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>, <a href=\"http://profiles.wordpress.org/filosofo\">Austin Matzko</a>, <a href=\"http://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>, <a href=\"http://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>, <a href=\"http://profiles.wordpress.org/boonebgorges\">Boone Gorges</a>, <a href=\"http://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>, <a href=\"http://profiles.wordpress.org/bramd\">bramd</a>, <a href=\"http://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"http://profiles.wordpress.org/brianlayman\">Brian Layman</a>, <a href=\"http://profiles.wordpress.org/rzen\">Brian Richards</a>, <a href=\"http://profiles.wordpress.org/camdensegal\">Camden Segal</a>, <a href=\"http://profiles.wordpress.org/sixhours\">Caroline Moore</a>, <a href=\"http://profiles.wordpress.org/mackensen\">Charles Fulton</a>, <a href=\"http://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"http://profiles.wordpress.org/chrico\">ChriCo</a>, <a href=\"http://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>, <a href=\"http://profiles.wordpress.org/chrisl27\">chrisl27</a>, <a href=\"http://profiles.wordpress.org/caxelsson\">Christian Axelsson</a>, <a href=\"http://profiles.wordpress.org/cfinke\">Christopher Finke</a>, <a href=\"http://profiles.wordpress.org/boda1982\">Christopher Spires</a>, <a href=\"http://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>, <a href=\"http://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>, <a href=\"http://profiles.wordpress.org/corphi\">Corphi</a>, <a href=\"http://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>, <a href=\"http://profiles.wordpress.org/ghost1227\">Dan Griffiths</a>, <a href=\"http://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"http://profiles.wordpress.org/danielhuesken\">Daniel Husken</a>, <a href=\"http://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>, <a href=\"http://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>, <a href=\"http://profiles.wordpress.org/dkotter\">Darin Kotter</a>, <a href=\"http://profiles.wordpress.org/koop\">Daryl Koopersmith</a>, <a href=\"http://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>, <a href=\"http://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>, <a href=\"http://profiles.wordpress.org/dlh\">David Herrera</a>, <a href=\"http://profiles.wordpress.org/dnaber-de\">David Naber</a>, <a href=\"http://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>, <a href=\"http://profiles.wordpress.org/debaat\">DeBAAT</a>, <a href=\"http://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"http://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"http://profiles.wordpress.org/donncha\">Donncha O Caoimh</a>, <a href=\"http://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"http://profiles.wordpress.org/dustyn\">Dustyn Doyle</a>, <a href=\"http://profiles.wordpress.org/eddiemoya\">Eddie Moya</a>, <a href=\"http://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>, <a href=\"http://profiles.wordpress.org/edwin-at-studiojoyocom\">Edwin Siebel</a>, <a href=\"http://profiles.wordpress.org/ehg\">ehg</a>, <a href=\"http://profiles.wordpress.org/tmeister\">Enrique Chavez</a>, <a href=\"http://profiles.wordpress.org/erayalakese\">erayalakese</a>, <a href=\"http://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>, <a href=\"http://profiles.wordpress.org/ebinnion\">Eric Binnion</a>, <a href=\"http://profiles.wordpress.org/ericmann\">Eric Mann</a>, <a href=\"http://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>, <a href=\"http://profiles.wordpress.org/eherman24\">Evan Herman</a>, <a href=\"http://profiles.wordpress.org/fab1en\">Fab1en</a>, <a href=\"http://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>, <a href=\"http://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>, <a href=\"http://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"http://profiles.wordpress.org/garhdez\">garhdez</a>, <a href=\"http://profiles.wordpress.org/garyc40\">Gary Cao</a>, <a href=\"http://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"http://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"http://profiles.wordpress.org/garza\">garza</a>, <a href=\"http://profiles.wordpress.org/gauravmittal1995\">gauravmittal1995</a>, <a href=\"http://profiles.wordpress.org/gavra\">Gavrisimo</a>, <a href=\"http://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"http://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>, <a href=\"http://profiles.wordpress.org/vancoder\">Grant Mangham</a>, <a href=\"http://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"http://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>, <a href=\"http://profiles.wordpress.org/harrym\">harrym</a>, <a href=\"http://profiles.wordpress.org/hebbet\">hebbet</a>, <a href=\"http://profiles.wordpress.org/hinnerk\">Hinnerk Altenburg</a>, <a href=\"http://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>, <a href=\"http://profiles.wordpress.org/iljoja\">iljoja</a>, <a href=\"http://profiles.wordpress.org/imath\">imath</a>, <a href=\"http://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"http://profiles.wordpress.org/issuu\">issuu</a>, <a href=\"http://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"http://profiles.wordpress.org/jacklenox\">Jack Lenox</a>, <a href=\"http://profiles.wordpress.org/jackreichert\">Jack Reichert</a>, <a href=\"http://profiles.wordpress.org/jacobdubail\">Jacob Dubail</a>, <a href=\"http://profiles.wordpress.org/janhenkg\">JanHenkG</a>, <a href=\"http://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"http://profiles.wordpress.org/jwenerd\">Jared Wenerd</a>, <a href=\"http://profiles.wordpress.org/jaza613\">Jaza613</a>, <a href=\"http://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>, <a href=\"http://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"http://profiles.wordpress.org/jpry\">Jeremy Pry</a>, <a href=\"http://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>, <a href=\"http://profiles.wordpress.org/jerrysarcastic\">Jerry Bates (jerrysarcastic)</a>, <a href=\"http://profiles.wordpress.org/jesin\">Jesin A</a>, <a href=\"http://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>, <a href=\"http://profiles.wordpress.org/engelen\">Jesper van Engelen</a>, <a href=\"http://profiles.wordpress.org/jesper800\">Jesper van Engelen</a>, <a href=\"http://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>, <a href=\"http://profiles.wordpress.org/jgadbois\">jgadbois</a>, <a href=\"http://profiles.wordpress.org/jartes\">Joan Artes</a>, <a href=\"http://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"http://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"http://profiles.wordpress.org/jkudish\">Joey Kudish</a>, <a href=\"http://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"http://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"http://profiles.wordpress.org/johnzanussi\">John Zanussi</a>, <a href=\"http://profiles.wordpress.org/duck_\">Jon Cave</a>, <a href=\"http://profiles.wordpress.org/jonnyauk\">jonnyauk</a>, <a href=\"http://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"http://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>, <a href=\"http://profiles.wordpress.org/jjeaton\">Josh Eaton</a>, <a href=\"http://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>, <a href=\"http://profiles.wordpress.org/juliobox\">Julio Potier</a>, <a href=\"http://profiles.wordpress.org/justinsainton\">Justin Sainton</a>, <a href=\"http://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>, <a href=\"http://profiles.wordpress.org/greenshady\">Justin Tadlock</a>, <a href=\"http://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"http://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>, <a href=\"http://profiles.wordpress.org/ixkaito\">Kaito</a>, <a href=\"http://profiles.wordpress.org/kapeels\">kapeels</a>, <a href=\"http://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"http://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>, <a href=\"http://profiles.wordpress.org/kworthington\">Kevin Worthington</a>, <a href=\"http://profiles.wordpress.org/kpdesign\">Kim Parsell</a>, <a href=\"http://profiles.wordpress.org/kwight\">Kirk Wight</a>, <a href=\"http://profiles.wordpress.org/kitchin\">kitchin</a>, <a href=\"http://profiles.wordpress.org/knutsp\">Knut Sparhell</a>, <a href=\"http://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"http://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"http://profiles.wordpress.org/krogsgard\">krogsgard</a>, <a href=\"http://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>, <a href=\"http://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"http://profiles.wordpress.org/leewillis77\">Lee Willis</a>, <a href=\"http://profiles.wordpress.org/lessbloat\">lessbloat</a>, <a href=\"http://profiles.wordpress.org/layotte\">Lew Ayotte</a>, <a href=\"http://profiles.wordpress.org/lritter\">lritter</a>, <a href=\"http://profiles.wordpress.org/lukecarbis\">Luke Carbis</a>, <a href=\"http://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>, <a href=\"http://profiles.wordpress.org/m_i_n\">m_i_n</a>, <a href=\"http://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>, <a href=\"http://profiles.wordpress.org/targz-1\">Manuel Schmalstieg</a>, <a href=\"http://profiles.wordpress.org/clorith\">Marius Jensen (Clorith)</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"http://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"http://profiles.wordpress.org/mjbanks\">Matt Banks</a>, <a href=\"http://profiles.wordpress.org/sivel\">Matt Martz</a>, <a href=\"http://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"http://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>, <a href=\"http://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"http://profiles.wordpress.org/mdbitz\">Matthew Denton</a>, <a href=\"http://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>, <a href=\"http://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"http://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"http://profiles.wordpress.org/meekyhwang\">meekyhwang</a>, <a href=\"http://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"http://profiles.wordpress.org/midxcat\">mi_cat</a>, <a href=\"http://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>, <a href=\"http://profiles.wordpress.org/michalzuber\">michalzuber</a>, <a href=\"http://profiles.wordpress.org/mauteri\">Mike Auteri</a>, <a href=\"http://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"http://profiles.wordpress.org/mikejolley\">Mike Jolley</a>, <a href=\"http://profiles.wordpress.org/mikelittle\">Mike Little</a>, <a href=\"http://profiles.wordpress.org/mikemanger\">Mike Manger</a>, <a href=\"http://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>, <a href=\"http://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>, <a href=\"http://profiles.wordpress.org/dimadin\">Milan Dinic</a>, <a href=\"http://profiles.wordpress.org/mnelson4\">mnelson4</a>, <a href=\"http://profiles.wordpress.org/morganestes\">Morgan Estes</a>, <a href=\"http://profiles.wordpress.org/usermrpapa\">Mr Papa</a>, <a href=\"http://profiles.wordpress.org/mrmist\">mrmist</a>, <a href=\"http://profiles.wordpress.org/m_uysl\">Mustafa Uysal</a>, <a href=\"http://profiles.wordpress.org/muvimotv\">MuViMoTV</a>, <a href=\"http://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>, <a href=\"http://profiles.wordpress.org/namibia\">Namibia</a>, <a href=\"http://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>, <a href=\"http://profiles.wordpress.org/nd987\">nd987</a>, <a href=\"http://profiles.wordpress.org/neil_pie\">Neil Pie</a>, <a href=\"http://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>, <a href=\"http://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"http://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>, <a href=\"http://profiles.wordpress.org/schoenwaldnils\">Nils Schonwald</a>, <a href=\"http://profiles.wordpress.org/ninos-ego\">Ninos</a>, <a href=\"http://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>, <a href=\"http://profiles.wordpress.org/compute\">Patrick Hesselberg</a>, <a href=\"http://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"http://profiles.wordpress.org/pdclark\">Paul Clark</a>, <a href=\"http://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>, <a href=\"http://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"http://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"http://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"http://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>, <a href=\"http://profiles.wordpress.org/philipjohn\">Philip John</a>, <a href=\"http://profiles.wordpress.org/senlin\">Piet</a>, <a href=\"http://profiles.wordpress.org/psoluch\">Piotr Soluch</a>, <a href=\"http://profiles.wordpress.org/mordauk\">Pippin Williamson</a>, <a href=\"http://profiles.wordpress.org/purzlbaum\">purzlbaum</a>, <a href=\"http://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"http://profiles.wordpress.org/rclations\">RC Lations</a>, <a href=\"http://profiles.wordpress.org/iamfriendly\">Richard Tape</a>, <a href=\"http://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>, <a href=\"http://profiles.wordpress.org/rob1n\">rob1n</a>, <a href=\"http://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>, <a href=\"http://profiles.wordpress.org/rdall\">Robert Dall</a>, <a href=\"http://profiles.wordpress.org/harmr\">RobertHarm</a>, <a href=\"http://profiles.wordpress.org/rohan013\">Rohan Rawat</a>, <a href=\"http://profiles.wordpress.org/rhurling\">Rouven Hurling</a>, <a href=\"http://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>, <a href=\"http://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"http://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"http://profiles.wordpress.org/sammybeats\">Sam Brodie</a>, <a href=\"http://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"http://profiles.wordpress.org/sathishn\">Sathish Nagarajan</a>, <a href=\"http://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"http://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"http://profiles.wordpress.org/greglone\">ScreenfeedFr</a>, <a href=\"http://profiles.wordpress.org/scribu\">scribu</a>, <a href=\"http://profiles.wordpress.org/seanchayes\">Sean Hayes</a>, <a href=\"http://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>, <a href=\"http://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>, <a href=\"http://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"http://profiles.wordpress.org/shanebp\">shanebp</a>, <a href=\"http://profiles.wordpress.org/sharonaustin\">Sharon Austin</a>, <a href=\"http://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>, <a href=\"http://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>, <a href=\"http://profiles.wordpress.org/simonp303\">simonp303</a>, <a href=\"http://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>, <a href=\"http://profiles.wordpress.org/solarissmoke\">solarissmoke</a>, <a href=\"http://profiles.wordpress.org/sphoid\">sphoid</a>, <a href=\"http://profiles.wordpress.org/stephdau\">Stephane Daury</a>, <a href=\"http://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"http://profiles.wordpress.org/stompweb\">Steven Jones</a>, <a href=\"http://profiles.wordpress.org/strangerstudios\">strangerstudios</a>, <a href=\"http://profiles.wordpress.org/5um17\">Sumit Singh</a>, <a href=\"http://profiles.wordpress.org/t4k1s\">t4k1s</a>, <a href=\"http://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>, <a href=\"http://profiles.wordpress.org/taylorde\">Taylor Dewey</a>, <a href=\"http://profiles.wordpress.org/thomasvanderbeek\">Thomas van der Beek</a>, <a href=\"http://profiles.wordpress.org/tillkruess\">Till Kruss</a>, <a href=\"http://profiles.wordpress.org/codenameeli\">Tim \'Eli\' Dalbey</a>, <a href=\"http://profiles.wordpress.org/tobiasbg\">TobiasBg</a>, <a href=\"http://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>, <a href=\"http://profiles.wordpress.org/willmot\">Tom Willmot</a>, <a href=\"http://profiles.wordpress.org/topher1kenobe\">Topher</a>, <a href=\"http://profiles.wordpress.org/torresga\">torresga</a>, <a href=\"http://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>, <a href=\"http://profiles.wordpress.org/wpsmith\">Travis Smith</a>, <a href=\"http://profiles.wordpress.org/treyhunner\">treyhunner</a>, <a href=\"http://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>, <a href=\"http://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>, <a href=\"http://profiles.wordpress.org/vlajos\">vlajos</a>, <a href=\"http://profiles.wordpress.org/voldemortensen\">voldemortensen</a>, <a href=\"http://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"http://profiles.wordpress.org/winterdev\">winterDev</a>, <a href=\"http://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>, <a href=\"http://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"http://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>, <a href=\"http://profiles.wordpress.org/tollmanz\">Zack Tollman</a>, and <a href=\"http://profiles.wordpress.org/zoerooney\">Zoe Rooney</a>. Also thanks to <a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a> for producing the release video, and Helen with <a href=\"http://adriansandi.com\">Adrián Sandí</a> for the music.</p>\n<p>If you want to follow along or help out, check out <a href=\"http://make.wordpress.org/\">Make WordPress</a> and our <a href=\"http://make.wordpress.org/core/\">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.1!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://wordpress.org/news/2014/09/benny/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"WordPress 4.0 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"https://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 12:20:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3287\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:321:\"The first release candidate for WordPress 4.0 is now available! In RC 1, we’ve made refinements to what we&#8217;ve been working on for this release. Check out the Beta 1 announcement post for more details on those features. We hope to ship WordPress 4.0 next week, but we need your help to get there. If you [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2127:\"<p>The first release candidate for WordPress 4.0 is now available!</p>\n<p>In RC 1, we’ve made refinements to what we&#8217;ve been working on for this release. Check out the <a href=\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">Beta 1 announcement post</a> for more details on those features. We hope to ship WordPress 4.0 <em>next week</em>, but we need your help to get there. If you haven’t tested 4.0 yet, there’s no time like the present. (Please, not on a production site, unless you’re adventurous.)</p>\n<p><strong>Think you’ve found a bug? </strong>Please post to the <a href=\"http://wordpress.org/support/forum/alphabeta/\">Alpha/Beta area in the support forums</a>. If any known issues come up, you’ll be able to <a href=\"http://core.trac.wordpress.org/report/5\">find them here</a>.</p>\n<p>To test WordPress 4.0 RC1, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-4.0-RC1.zip\">download the release candidate here</a> (zip). If you’d like to learn more about what’s new in WordPress 4.0, visit the awesome About screen in your dashboard (<strong><img src=\"http://i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692\" alt=\"\" width=\"16\" height=\"16\" /> → About</strong> in the toolbar).</p>\n<p><strong>Developers,</strong> please test your plugins and themes against WordPress 4.0 and update your plugin&#8217;s <em>Tested up to</em> version in the readme to 4.0 before next week. If you find compatibility problems, please be sure to post any issues to the support forums so we can figure those out before the final release. You also may want to <a href=\"http://make.wordpress.org/core/2014/08/21/introducing-plugin-icons-in-the-plugin-installer/\">give your plugin an icon</a>, which we launched last week and will appear in the dashboard along with banners.</p>\n<p><em>It is almost time</em><br />\n<em> For the 4.0 release</em><br />\n<em> And its awesomeness</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 4\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/08/wordpress-4-0-beta-4/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"https://wordpress.org/news/2014/08/wordpress-4-0-beta-4/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 15 Aug 2014 05:06:19 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3280\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:353:\"The fourth and likely final beta for WordPress 4.0 is now available. We&#8217;ve made more than 250 changes in the past month, including: Further improvements to the editor scrolling experience, especially when it comes to the second column of boxes. Better handling of small screens in the media library modals. A separate bulk selection mode [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1999:\"<p>The fourth and likely final beta for WordPress 4.0 is now available. We&#8217;ve made <a href=\"https://core.trac.wordpress.org/log?rev=29496&amp;stop_rev=29229&amp;limit=300\">more than 250 changes</a> in the past month, including:</p>\n<ul>\n<li>Further improvements to the editor scrolling experience, especially when it comes to the second column of boxes.</li>\n<li>Better handling of small screens in the media library modals.</li>\n<li>A separate bulk selection mode for the media library grid view.</li>\n<li>Improvements to the installation language selector.</li>\n<li>Visual tweaks to plugin details and customizer panels.</li>\n</ul>\n<p><strong>We need your help</strong>. We’re still aiming for a release this month, which means the next week will be critical for identifying and squashing bugs. If you’re just joining us, please see <a href=\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">the Beta 1 announcement post</a> for what to look out for.</p>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums, where friendly moderators are standing by. <b>Plugin developers</b><strong>,</strong> if you haven’t tested WordPress 4.0 yet, now is the time — and be sure to update the “tested up to” version for your plugins so they’re listed as compatible with 4.0.</p>\n<p><strong>This software is still in development,</strong> so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-4.0-beta4.zip\">download the beta here</a> (zip).</p>\n<p><em>We are working hard</em><br />\n<em>To finish up 4.0<br />\n</em><em>Will you help us too?</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://wordpress.org/news/2014/08/wordpress-4-0-beta-4/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"WordPress 3.9.2 Security Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/news/2014/08/wordpress-3-9-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/news/2014/08/wordpress-3-9-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 06 Aug 2014 19:04:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3269\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:377:\"WordPress 3.9.2 is now available as a security release for all previous versions. We strongly encourage you to update your sites immediately. This release fixes a possible denial of service issue in PHP&#8217;s XML processing, reported by Nir Goldshlager of the Salesforce.com Product Security Team. It  was fixed by Michael Adams and Andrew Nacin of the WordPress [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2352:\"<p>WordPress 3.9.2 is now available as a security release for all previous versions. We strongly encourage you to update your sites immediately.</p>\n<p>This release fixes a possible denial of service issue in PHP&#8217;s XML processing, reported by <a href=\"https://twitter.com/nirgoldshlager\">Nir Goldshlager</a> of the Salesforce.com Product Security Team. It  was fixed by Michael Adams and Andrew Nacin of the WordPress security team and David Rothstein of the <a href=\"https://www.drupal.org/SA-CORE-2014-004\">Drupal security team</a>. This is the first time our two projects have coordinated joint security releases.</p>\n<p>WordPress 3.9.2 also contains other security changes:</p>\n<ul>\n<li>Fixes a possible but unlikely code execution when processing widgets (WordPress is not affected by default), discovered by <a href=\"http://www.buayacorp.com/\">Alex Concha</a> of the WordPress security team.</li>\n<li>Prevents information disclosure via XML entity attacks in the external GetID3 library, reported by <a href=\"http://onsec.ru/en/\">Ivan Novikov</a> of ONSec.</li>\n<li>Adds protections against brute attacks against CSRF tokens, reported by <a href=\"http://systemoverlord.com/\">David Tomaschik</a> of the Google Security Team.</li>\n<li>Contains some additional security hardening, like preventing cross-site scripting that could be triggered only by administrators.</li>\n</ul>\n<p>We appreciated responsible disclosure of these issues directly to our security team. For more information, see the <a href=\"http://codex.wordpress.org/Version_3.9.2\">release notes</a> or consult the <a href=\"https://core.trac.wordpress.org/log/branches/3.9?stop_rev=29383&amp;rev=29411\">list of changes</a>.</p>\n<p><a href=\"https://wordpress.org/download/\">Download WordPress 3.9.2</a> or venture over to <strong>Dashboard → Updates</strong> and simply click &#8220;Update Now&#8221;.</p>\n<p>Sites that support automatic background updates will be updated to WordPress 3.9.2 within 12 hours. (If you are still on WordPress 3.8.3 or 3.7.3, you will also be updated to 3.8.4 or 3.7.4. We don&#8217;t support older versions, so please update to 3.9.2 for the latest and greatest.)</p>\n<p>Already testing WordPress 4.0? The third beta is <a href=\"https://wordpress.org/wordpress-4.0-beta3.zip\">now available</a> (zip) and it contains these security fixes.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/08/wordpress-3-9-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 18 Jul 2014 21:15:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3261\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:374:\"WordPress 4.0 Beta 2 is now available for download and testing. This is software still in development, so we don’t recommend that you run it on a production site. To get the beta, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can download the beta here (zip). For more of what’s new in version 4.0, check out [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1738:\"<p>WordPress 4.0 Beta 2 is now available for download and testing. This is software still in development, so we don’t recommend that you run it on a production site. To get the beta, try the <a href=\"http://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"http://wordpress.org/wordpress-4.0-beta2.zip\">download the beta here</a> (zip).</p>\n<p>For more of what’s new in version 4.0, <a href=\"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">check out the Beta 1 blog post</a>. Some of the changes in Beta 2 include:</p>\n<ul>\n<li>Further refinements for the the plugin installation and media library experiences.</li>\n<li>Updated TinyMCE, which now includes better indentation for lists and the restoration of the color picker.</li>\n<li>Cookies are now tied to a session internally, so if you have trouble logging in, <a href=\"https://core.trac.wordpress.org/ticket/20276\">#20276</a> may be the culprit.</li>\n<li>Various bug fixes (there were <a href=\"https://core.trac.wordpress.org/log?rev=29228&amp;stop_rev=29060&amp;limit=200\">nearly 170 changes</a> since last week).</li>\n</ul>\n<p>If you think you’ve found a bug, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. Or, if you’re comfortable writing a bug report, <a href=\"http://core.trac.wordpress.org/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"http://core.trac.wordpress.org/tickets/major\">a list of known bugs</a> and <a href=\"http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=4.0\">everything we’ve fixed</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 10 Jul 2014 10:17:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3248\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:329:\"WordPress 4.0 Beta 1 is now available! This software is still in development, so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4025:\"<p>WordPress 4.0 Beta 1 is now available!</p>\n<p><strong>This software is still in development,</strong> so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the <a href=\"http://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"https://wordpress.org/wordpress-4.0-beta1.zip\">download the beta here</a> (zip).</p>\n<p>4.0 is due out next month, but to get there, we need your help testing what we&#8217;ve been working on:</p>\n<ul>\n<li><strong>Previews of <a href=\"http://codex.wordpress.org/Embeds\">embedding via URLs</a></strong> in the visual editor and the &#8220;Insert from URL&#8221; tab in the media modal. Try pasting a URL (such as a <a href=\"http://wordpress.tv/\">WordPress.tv</a> or YouTube video) onto its own line in the visual editor. (<a href=\"https://core.trac.wordpress.org/ticket/28195\">#28195</a>, <a href=\"https://core.trac.wordpress.org/ticket/15490\">#15490</a>)</li>\n<li>The <strong>Media Library</strong> now has a &#8220;grid&#8221; view in addition to the existing list view. Clicking on an item takes you into a modal where you can see a larger preview and edit information about that attachment, and you can navigate between items right from the modal without closing it. (<a href=\"https://core.trac.wordpress.org/ticket/24716\">#24716</a>)</li>\n<li>We&#8217;re freshening up the <strong>plugin install experience</strong>. You&#8217;ll see some early visual changes as well as more information when searching for plugins and viewing details. (<a href=\"https://core.trac.wordpress.org/ticket/28785\">#28785</a>, <a href=\"https://core.trac.wordpress.org/ticket/27440\">#27440</a>)</li>\n<li><strong>Selecting a language</strong> when you run the installation process. (<a href=\"https://core.trac.wordpress.org/ticket/28577\">#28577</a>)</li>\n<li>The <strong>editor</strong> intelligently resizes and its top and bottom bars pin when needed. Browsers don&#8217;t like to agree on where to put things like cursors, so if you find a bug here, please also let us know your browser and operating system. (<a href=\"https://core.trac.wordpress.org/ticket/28328\">#28328</a>)</li>\n<li>We&#8217;ve made some improvements to how your keyboard and cursor interact with <strong>TinyMCE views</strong> such as the gallery preview. Much like the editor resizing and scrolling improvements, knowing about your setup is particularly important for bug reports here. (<a href=\"https://core.trac.wordpress.org/ticket/28595\">#28595</a>)</li>\n<li><strong>Widgets in the Customizer</strong> are now loaded in a separate panel. (<a href=\"https://core.trac.wordpress.org/ticket/27406\">#27406</a>)</li>\n<li>We&#8217;ve also made some changes to some <strong>formatting</strong> functions, so if you see quotes curling in the wrong direction, please file a bug report.</li>\n</ul>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href=\"http://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report, <a href=\"https://make.wordpress.org/core/reports/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"http://core.trac.wordpress.org/tickets/major\">a list of known bugs</a> and <a href=\"http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=4.0\">everything we’ve fixed</a> so far.</p>\n<p><strong>Developers:</strong> Never fear, we haven&#8217;t forgotten you. There&#8217;s plenty for you, too &#8211; more on that in upcoming posts. In the meantime, check out the <a href=\"http://make.wordpress.org/core/2014/07/08/customizer-improvements-in-4-0/#customizer-panels\">API for panels in the Customizer</a>.</p>\n<p>Happy testing!</p>\n<p><em>Plugins, editor</em><br />\n<em>Media, things in between</em><br />\n<em>Please help look for bugs</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"WordPress 3.9.1 Maintenance Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/news/2014/05/wordpress-3-9-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/news/2014/05/wordpress-3-9-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 08 May 2014 18:40:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3241\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:385:\"After three weeks and more than 9 million downloads of WordPress 3.9, we&#8217;re pleased to announce that WordPress 3.9.1 is now available. This maintenance release fixes 34 bugs in 3.9, including numerous fixes for multisite networks, customizing widgets while previewing themes, and the updated visual editor. We&#8217;ve also made some improvements to the new audio/video [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3077:\"<p>After three weeks and more than 9 million downloads of <a title=\"WordPress 3.9 “Smith”\" href=\"http://wordpress.org/news/2014/04/smith/\">WordPress 3.9</a>, we&#8217;re pleased to announce that WordPress 3.9.1 is now available.</p>\n<p>This maintenance release fixes 34 bugs in 3.9, including numerous fixes for multisite networks, customizing widgets while previewing themes, and the updated visual editor. We&#8217;ve also made some improvements to the new audio/video playlists feature and made some adjustments to improve performance. For a full list of changes, consult the <a href=\"https://core.trac.wordpress.org/query?milestone=3.9.1\">list of tickets</a> and the <a href=\"https://core.trac.wordpress.org/log/branches/3.9?rev=28353&amp;stop_rev=28154\">changelog</a>.</p>\n<p>If you are one of the millions already running WordPress 3.9, we&#8217;ve started rolling out automatic background updates for 3.9.1. For sites <a href=\"http://wordpress.org/plugins/background-update-tester/\">that support them</a>, of course.</p>\n<p><a href=\"http://wordpress.org/download/\">Download WordPress 3.9.1</a> or venture over to <strong>Dashboard → Updates</strong> and simply click &#8220;Update Now.&#8221;</p>\n<p>Thanks to all of these fine individuals for contributing to 3.9.1: <a href=\"http://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"http://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"http://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"http://profiles.wordpress.org/rzen\">Brian Richards</a>, <a href=\"http://profiles.wordpress.org/ehg\">Chris Blower</a>, <a href=\"http://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>, <a href=\"http://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"http://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"http://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>, <a href=\"http://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"http://profiles.wordpress.org/helen\">Helen Hou-Sandi</a>, <a href=\"http://profiles.wordpress.org/imath\">imath</a>, <a href=\"http://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"http://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"http://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"http://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"http://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"http://profiles.wordpress.org/m_i_n\">m_i_n</a>, <a href=\"http://profiles.wordpress.org/clorith\">Marius Jensen</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"http://profiles.wordpress.org/dimadin\">Milan Dinić</a>, <a href=\"http://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"http://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"http://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"http://profiles.wordpress.org/SergeyBiryukov\">Sergey Biryukov</a>, and <a href=\"http://profiles.wordpress.org/westonruter\">Weston Ruter</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/05/wordpress-3-9-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 3.9 “Smith”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"https://wordpress.org/news/2014/04/smith/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"https://wordpress.org/news/2014/04/smith/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 16 Apr 2014 18:33:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3154\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:411:\"Version 3.9 of WordPress, named &#8220;Smith&#8221; in honor of jazz organist Jimmy Smith, is available for download or update in your WordPress dashboard. This release features a number of refinements that we hope you&#8217;ll love. A smoother media editing experience Improved visual editing The updated visual editor has improved speed, accessibility, and mobile support. You can paste into the [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:22924:\"<p>Version 3.9 of WordPress, named &#8220;Smith&#8221; in honor of jazz organist <a href=\"http://en.wikipedia.org/wiki/Jimmy_Smith_(musician)\">Jimmy Smith</a>, is available <a href=\"http://wordpress.org/download/\">for download</a> or update in your WordPress dashboard. This release features a number of refinements that we hope you&#8217;ll love.</p>\n\n<h2 class=\"about-headline-callout\" style=\"text-align: center\">A smoother media editing experience</h2>\n<div>\n<p><img class=\"alignright wp-image-3168\" src=\"//wordpress.org/news/files/2014/04/editor1-300x233.jpg\" alt=\"editor\" width=\"228\" height=\"177\" /></p>\n<h3>Improved visual editing</h3>\n<p>The updated visual editor has improved speed, accessibility, and mobile support. You can paste into the visual editor from your word processor without wasting time to clean up messy styling. (Yeah, we’re talking about you, Microsoft Word.)</p>\n</div>\n<div style=\"clear: both\"></div>\n<div>\n<p><img class=\"alignright wp-image-3170\" src=\"//wordpress.org/news/files/2014/04/image1-300x233.jpg\" alt=\"image\" width=\"228\" height=\"178\" /></p>\n<h3>Edit images easily</h3>\n<p>With quicker access to crop and rotation tools, it’s now much easier to edit your images while editing posts. You can also scale images directly in the editor to find just the right fit.</p>\n</div>\n<div style=\"clear: both\"></div>\n<div>\n<p><img class=\"alignright wp-image-3187\" src=\"//wordpress.org/news/files/2014/04/dragdrop1-300x233.jpg\" alt=\"dragdrop\" width=\"228\" height=\"178\" /></p>\n<h3>Drag and drop your images</h3>\n<p>Uploading your images is easier than ever. Just grab them from your desktop and drop them in the editor.</p>\n</div>\n<div style=\"clear: both\"></div>\n<hr />\n<h2 style=\"text-align: center\">Gallery previews</h2>\n<p><img class=\"aligncenter size-full wp-image-3169\" src=\"//wordpress.org/news/files/2014/04/gallery1.jpg\" alt=\"gallery\" width=\"980\" height=\"550\" /></p>\n<p>Galleries display a beautiful grid of images right in the editor, just like they do in your published post.</p>\n<hr />\n<h2 style=\"text-align: center\">Do more with audio and video</h2>\n\n<a href=\'http://wordpress.org/news/files/2014/04/AintMisbehavin.mp3\'>Ain\'t Misbehavin\'</a>\n<a href=\'http://wordpress.org/news/files/2014/04/DavenportBlues.mp3\'>Davenport Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/JellyRollMorton-BuddyBoldensBlues.mp3\'>Buddy Bolden\'s Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/Johnny_Hodges_Orchestra-Squaty_Roo-1941.mp3\'>Squaty Roo</a>\n<a href=\'http://wordpress.org/news/files/2014/04/Louisiana_Five-Dixie_Blues-1919.mp3\'>Dixie Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/WolverineBlues.mp3\'>Wolverine Blues</a>\n\n<p>Images have galleries; now we’ve added simple audio and video playlists, so you can showcase your music and clips.</p>\n<hr />\n<h2 style=\"text-align: center\">Live widget and header previews</h2>\n<div style=\"width: 692px; height: 448px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-3154-3\" width=\"692\" height=\"448\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//wordpress.org/news/files/2014/04/widgets.mp4?_=3\" /><a href=\"//wordpress.org/news/files/2014/04/widgets.mp4\">//wordpress.org/news/files/2014/04/widgets.mp4</a></video></div>\n<p>Add, edit, and rearrange your site’s widgets right in the theme customizer. No “save and surprise” — preview your changes live and only save them when you’re ready.</p>\n<p>The improved header image tool also lets you upload, crop, and manage headers while customizing your theme.</p>\n<hr />\n<h2 style=\"text-align: center\">Stunning new theme browser</h2>\n<p><img class=\"aligncenter size-full wp-image-3172\" src=\"//wordpress.org/news/files/2014/04/theme1.jpg\" alt=\"theme\" width=\"1003\" height=\"558\" /><br />\nLooking for a new theme should be easy and fun. Lose yourself in the boundless supply of free WordPress.org themes with the beautiful new theme browser.</p>\n<hr />\n<h2 style=\"text-align: center\">The Crew</h2>\n<p>This release was led by <a href=\"http://nacin.com/\">Andrew Nacin</a> and <a href=\"http://www.getsource.net/\">Mike Schroder</a>, with the help of these fine individuals. There are 267 contributors with props in this release, a new high:</p>\n<p><a href=\"http://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"http://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"http://profiles.wordpress.org/kawauso\">Adam Harley</a>, <a href=\"http://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"http://profiles.wordpress.org/adelval\">adelval</a>, <a href=\"http://profiles.wordpress.org/ajay\">Ajay</a>, <a href=\"http://profiles.wordpress.org/akeda\">Akeda Bagus</a>, <a href=\"http://profiles.wordpress.org/xknown\">Alex Concha</a>, <a href=\"http://profiles.wordpress.org/tellyworth\">Alex Shiels</a>, <a href=\"http://profiles.wordpress.org/aliso\">Alison Barrett</a>, <a href=\"http://profiles.wordpress.org/collinsinternet\">Allan Collins</a>, <a href=\"http://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>, <a href=\"http://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"http://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"http://profiles.wordpress.org/norcross\">Andrew Norcross</a>, <a href=\"http://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"http://profiles.wordpress.org/rarst\">Andrey \"Rarst\" Savchenko</a>, <a href=\"http://profiles.wordpress.org/andykeith\">Andy Keith</a>, <a href=\"http://profiles.wordpress.org/andy\">Andy Skelton</a>, <a href=\"http://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"http://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>, <a href=\"http://profiles.wordpress.org/barry\">Barry</a>, <a href=\"http://profiles.wordpress.org/toszcze\">Bartosz Romanowski</a>, <a href=\"http://profiles.wordpress.org/bassgang\">bassgang</a>, <a href=\"http://profiles.wordpress.org/bcworkz\">bcworkz</a>, <a href=\"http://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>, <a href=\"http://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>, <a href=\"http://profiles.wordpress.org/bigdawggi\">bigdawggi</a>, <a href=\"http://profiles.wordpress.org/bobbravo2\">Bob Gregor</a>, <a href=\"http://profiles.wordpress.org/bobbingwide\">bobbingwide</a>, <a href=\"http://profiles.wordpress.org/bradt\">Brad Touesnard</a>, <a href=\"http://profiles.wordpress.org/bradparbs\">bradparbs</a>, <a href=\"http://profiles.wordpress.org/bramd\">bramd</a>, <a href=\"http://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"http://profiles.wordpress.org/brasofilo\">brasofilo</a>, <a href=\"http://profiles.wordpress.org/bravokeyl\">bravokeyl</a>, <a href=\"http://profiles.wordpress.org/bpetty\">Bryan Petty</a>, <a href=\"http://profiles.wordpress.org/cgaffga\">cgaffga</a>, <a href=\"http://profiles.wordpress.org/chiragswadia\">Chirag Swadia</a>, <a href=\"http://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"http://profiles.wordpress.org/ehg\">Chris Blower</a>, <a href=\"http://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>, <a href=\"http://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>, <a href=\"http://profiles.wordpress.org/chrisscott\">Chris Scott</a>, <a href=\"http://profiles.wordpress.org/chriseverson\">chriseverson</a>, <a href=\"http://profiles.wordpress.org/chrisguitarguy\">chrisguitarguy</a>, <a href=\"http://profiles.wordpress.org/cfinke\">Christopher Finke</a>, <a href=\"http://profiles.wordpress.org/ciantic\">ciantic</a>, <a href=\"http://profiles.wordpress.org/antorome\">Comparativa de Bancos</a>, <a href=\"http://profiles.wordpress.org/cojennin\">Connor Jennings</a>, <a href=\"http://profiles.wordpress.org/corvannoorloos\">Cor van Noorloos</a>, <a href=\"http://profiles.wordpress.org/corphi\">Corphi</a>, <a href=\"http://profiles.wordpress.org/cramdesign\">cramdesign</a>, <a href=\"http://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"http://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>, <a href=\"http://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>, <a href=\"http://profiles.wordpress.org/koop\">Daryl Koopersmith</a>, <a href=\"http://profiles.wordpress.org/eightface\">Dave Kellam (eightface)</a>, <a href=\"http://profiles.wordpress.org/dpe415\">DaveE</a>, <a href=\"http://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>, <a href=\"http://profiles.wordpress.org/davidanderson\">David Anderson</a>, <a href=\"http://profiles.wordpress.org/davidmarichal\">David Marichal</a>, <a href=\"http://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>, <a href=\"http://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"http://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"http://profiles.wordpress.org/dougwollison\">Doug Wollison</a>, <a href=\"http://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"http://profiles.wordpress.org/drprotocols\">DrProtocols</a>, <a href=\"http://profiles.wordpress.org/dustyf\">Dustin Filippini</a>, <a href=\"http://profiles.wordpress.org/eatingrules\">eatingrules</a>, <a href=\"http://profiles.wordpress.org/plocha\">edik</a>, <a href=\"http://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>, <a href=\"http://profiles.wordpress.org/eliorivero\">Elio Rivero</a>, <a href=\"http://profiles.wordpress.org/enej\">enej</a>, <a href=\"http://profiles.wordpress.org/ericlewis\">Eric Lewis</a>, <a href=\"http://profiles.wordpress.org/ericmann\">Eric Mann</a>, <a href=\"http://profiles.wordpress.org/evarlese\">Erica Varlese</a>, <a href=\"http://profiles.wordpress.org/ethitter\">Erick Hitter</a>, <a href=\"http://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>, <a href=\"http://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>, <a href=\"http://profiles.wordpress.org/fboender\">fboender</a>, <a href=\"http://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"http://profiles.wordpress.org/garyc40\">Gary Cao</a>, <a href=\"http://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"http://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"http://profiles.wordpress.org/genkisan\">genkisan</a>, <a href=\"http://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>, <a href=\"http://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"http://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>, <a href=\"http://profiles.wordpress.org/vancoder\">Grant Mangham</a>, <a href=\"http://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"http://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>, <a href=\"http://profiles.wordpress.org/hakre\">hakre</a>, <a href=\"http://profiles.wordpress.org/hanni\">hanni</a>, <a href=\"http://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>, <a href=\"http://profiles.wordpress.org/ippetkov\">ippetkov</a>, <a href=\"http://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"http://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"http://profiles.wordpress.org/jackreichert\">Jack Reichert</a>, <a href=\"http://profiles.wordpress.org/_jameslee\">jameslee</a>, <a href=\"http://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"http://profiles.wordpress.org/janrenn\">janrenn</a>, <a href=\"http://profiles.wordpress.org/jaycc\">JayCC</a>, <a href=\"http://profiles.wordpress.org/jeffsebring\">Jeff Sebring</a>, <a href=\"http://profiles.wordpress.org/jenmylo\">Jen Mylo</a>, <a href=\"http://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"http://profiles.wordpress.org/jesin\">Jesin A</a>, <a href=\"http://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>, <a href=\"http://profiles.wordpress.org/jnielsendotnet\">jnielsendotnet</a>, <a href=\"http://profiles.wordpress.org/jartes\">Joan Artes</a>, <a href=\"http://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"http://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"http://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"http://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"http://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>, <a href=\"http://profiles.wordpress.org/johnregan3\">John Regan</a>, <a href=\"http://profiles.wordpress.org/duck_\">Jon Cave</a>, <a href=\"http://profiles.wordpress.org/jond3r\">Jonas Bolinder (jond3r)</a>, <a href=\"http://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"http://profiles.wordpress.org/shelob9\">Josh Pollock</a>, <a href=\"http://profiles.wordpress.org/joshuaabenazer\">Joshua Abenazer</a>, <a href=\"http://profiles.wordpress.org/jstraitiff\">jstraitiff</a>, <a href=\"http://profiles.wordpress.org/juliobox\">Julio Potier</a>, <a href=\"http://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>, <a href=\"http://profiles.wordpress.org/justinsainton\">Justin Sainton</a>, <a href=\"http://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"http://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>, <a href=\"http://profiles.wordpress.org/kasparsd\">Kaspars</a>, <a href=\"http://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"http://profiles.wordpress.org/kerikae\">kerikae</a>, <a href=\"http://profiles.wordpress.org/kworthington\">Kevin Worthington</a>, <a href=\"http://profiles.wordpress.org/kpdesign\">Kim Parsell</a>, <a href=\"http://profiles.wordpress.org/kwight\">Kirk Wight</a>, <a href=\"http://profiles.wordpress.org/kitchin\">kitchin</a>, <a href=\"http://profiles.wordpress.org/klihelp\">klihelp</a>, <a href=\"http://profiles.wordpress.org/knutsp\">Knut Sparhell</a>, <a href=\"http://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"http://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"http://profiles.wordpress.org/drozdz\">Krzysiek Drozdz</a>, <a href=\"http://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"http://profiles.wordpress.org/leewillis77\">Lee Willis</a>, <a href=\"http://profiles.wordpress.org/lpointet\">lpointet</a>, <a href=\"http://profiles.wordpress.org/ldebrouwer\">Luc De Brouwer</a>, <a href=\"http://profiles.wordpress.org/spmlucas\">Lucas Karpiuk</a>, <a href=\"http://profiles.wordpress.org/lkwdwrd\">Luke Woodward</a>, <a href=\"http://profiles.wordpress.org/mark8barnes\">Mark Barnes</a>, <a href=\"http://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"http://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"http://profiles.wordpress.org/marventus\">Marventus</a>, <a href=\"http://profiles.wordpress.org/iammattthomas\">Matt (Thomas) Miklic</a>, <a href=\"http://profiles.wordpress.org/mjbanks\">Matt Banks</a>, <a href=\"http://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"http://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"http://profiles.wordpress.org/mdbitz\">Matthew Denton</a>, <a href=\"http://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"http://profiles.wordpress.org/mattonomics\">mattonomics</a>, <a href=\"http://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"http://profiles.wordpress.org/matveb\">Matías Ventura</a>, <a href=\"http://profiles.wordpress.org/maxcutler\">Max Cutler</a>, <a href=\"http://profiles.wordpress.org/mcadwell\">mcadwell</a>, <a href=\"http://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"http://profiles.wordpress.org/meloniq\">meloniq</a>, <a href=\"http://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>, <a href=\"http://profiles.wordpress.org/michelwppi\">Michel - xiligroup dev</a>, <a href=\"http://profiles.wordpress.org/mcsf\">Miguel Fonseca</a>, <a href=\"http://profiles.wordpress.org/gradyetc\">Mike Burns</a>, <a href=\"http://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"http://profiles.wordpress.org/mikemanger\">Mike Manger</a>, <a href=\"http://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>, <a href=\"http://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>, <a href=\"http://profiles.wordpress.org/mikecorkum\">mikecorkum</a>, <a href=\"http://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>, <a href=\"http://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>, <a href=\"http://profiles.wordpress.org/morganestes\">Morgan Estes</a>, <a href=\"http://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>, <a href=\"http://profiles.wordpress.org/Nao\">Naoko Takano</a>, <a href=\"http://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>, <a href=\"http://profiles.wordpress.org/nendeb55\">nendeb55</a>, <a href=\"http://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"http://profiles.wordpress.org/nicolealleyinteractivecom\">Nicole Arnold</a>, <a href=\"http://profiles.wordpress.org/nikv\">Nikhil Vimal (NikV)</a>, <a href=\"http://profiles.wordpress.org/nivijah\">Nivi Jah</a>, <a href=\"http://profiles.wordpress.org/nofearinc\">nofearinc</a>, <a href=\"http://profiles.wordpress.org/nunomorgadinho\">Nuno Morgadinho</a>, <a href=\"http://profiles.wordpress.org/olivm\">olivM</a>, <a href=\"http://profiles.wordpress.org/jbkkd\">Omer Korner</a>, <a href=\"http://profiles.wordpress.org/originalexe\">OriginalEXE</a>, <a href=\"http://profiles.wordpress.org/patricknami\">patricknami</a>, <a href=\"http://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"http://profiles.wordpress.org/djpaul\">Paul Gibbs</a>, <a href=\"http://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"http://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"http://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"http://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>, <a href=\"http://profiles.wordpress.org/mordauk\">Pippin Williamson</a>, <a href=\"http://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>, <a href=\"http://profiles.wordpress.org/prettyboymp\">prettyboymp</a>, <a href=\"http://profiles.wordpress.org/raamdev\">Raam Dev</a>, <a href=\"http://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"http://profiles.wordpress.org/mauryaratan\">Ram Ratan Maurya</a>, <a href=\"http://profiles.wordpress.org/ramonchiara\">ramonchiara</a>, <a href=\"http://profiles.wordpress.org/ounziw\">Rescuework Support</a>, <a href=\"http://profiles.wordpress.org/rhyswynne\">Rhys Wynne</a>, <a href=\"http://profiles.wordpress.org/ricardocorreia\">Ricardo Correia</a>, <a href=\"http://profiles.wordpress.org/richard2222\">Richard</a>, <a href=\"http://profiles.wordpress.org/theorboman\">Richard Sweeney</a>, <a href=\"http://profiles.wordpress.org/iamfriendly\">Richard Tape</a>, <a href=\"http://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>, <a href=\"http://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>, <a href=\"http://profiles.wordpress.org/robmiller\">robmiller</a>, <a href=\"http://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>, <a href=\"http://profiles.wordpress.org/romaimperator\">romaimperator</a>, <a href=\"http://profiles.wordpress.org/roothorick\">roothorick</a>, <a href=\"http://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>, <a href=\"http://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"http://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"http://profiles.wordpress.org/salcode\">Sal Ferrarello</a>, <a href=\"http://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"http://profiles.wordpress.org/sandyr\">Sandeep</a>, <a href=\"http://profiles.wordpress.org/scottlee\">Scott Lee</a>, <a href=\"http://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"http://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"http://profiles.wordpress.org/greglone\">ScreenfeedFr</a>, <a href=\"http://profiles.wordpress.org/scribu\">scribu</a>, <a href=\"http://profiles.wordpress.org/sdasse\">sdasse</a>, <a href=\"http://profiles.wordpress.org/bootsz\">Sean Butze</a>, <a href=\"http://profiles.wordpress.org/seanchayes\">Sean Hayes</a>, <a href=\"http://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>, <a href=\"http://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"http://profiles.wordpress.org/shahpranaf\">shahpranaf</a>, <a href=\"http://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>, <a href=\"http://profiles.wordpress.org/shinichin\">ShinichiN</a>, <a href=\"http://profiles.wordpress.org/pross\">Simon Prosser</a>, <a href=\"http://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>, <a href=\"http://profiles.wordpress.org/siobhan\">Siobhan</a>, <a href=\"http://profiles.wordpress.org/siobhyb\">Siobhan Bamber (siobhyb)</a>, <a href=\"http://profiles.wordpress.org/sirzooro\">sirzooro</a>, <a href=\"http://profiles.wordpress.org/solarissmoke\">solarissmoke</a>, <a href=\"http://profiles.wordpress.org/sonjanyc\">sonjanyc</a>, <a href=\"http://profiles.wordpress.org/spencerfinnell\">Spencer Finnell</a>, <a href=\"http://profiles.wordpress.org/piontkowski\">Spencer Piontkowski</a>, <a href=\"http://profiles.wordpress.org/stephcook22\">stephcook22</a>, <a href=\"http://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"http://profiles.wordpress.org/stephenharris\">Stephen Harris</a>, <a href=\"http://profiles.wordpress.org/sbruner\">Steve Bruner</a>, <a href=\"http://profiles.wordpress.org/stevenkword\">Steven Word</a>, <a href=\"http://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>, <a href=\"http://profiles.wordpress.org/tanner-m\">Tanner Moushey</a>, <a href=\"http://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>, <a href=\"http://profiles.wordpress.org/tbrams\">tbrams</a>, <a href=\"http://profiles.wordpress.org/tobiasbg\">TobiasBg</a>, <a href=\"http://profiles.wordpress.org/tomauger\">Tom Auger</a>, <a href=\"http://profiles.wordpress.org/willmot\">Tom Willmot</a>, <a href=\"http://profiles.wordpress.org/topher1kenobe\">Topher</a>, <a href=\"http://profiles.wordpress.org/topquarky\">topquarky</a>, <a href=\"http://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>, <a href=\"http://profiles.wordpress.org/toru\">Toru</a>, <a href=\"http://profiles.wordpress.org/wpsmith\">Travis Smith</a>, <a href=\"http://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>, <a href=\"http://profiles.wordpress.org/undergroundnetwork\">undergroundnetwork</a>, <a href=\"http://profiles.wordpress.org/varunagw\">VarunAgw</a>, <a href=\"http://profiles.wordpress.org/wawco\">wawco</a>, <a href=\"http://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"http://profiles.wordpress.org/wokamoto\">wokamoto</a>, <a href=\"http://profiles.wordpress.org/xsonic\">xsonic</a>, <a href=\"http://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"http://profiles.wordpress.org/yurivictor\">Yuri Victor</a>, <a href=\"http://profiles.wordpress.org/zbtirrell\">Zach Tirrell</a>, and <a href=\"http://profiles.wordpress.org/vanillalounge\">Ze Fontainhas</a>. Also thanks to <a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a> for producing the release video.</p>\n<p>If you want to follow along or help out, check out <a href=\"http://make.wordpress.org/\">Make WordPress</a> and our <a href=\"http://make.wordpress.org/core/\">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.0!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://wordpress.org/news/2014/04/smith/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress 3.9 Release Candidate 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"https://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 15 Apr 2014 09:47:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3151\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:356:\"The second release candidate for WordPress 3.9 is now available for testing. If you haven&#8217;t tested 3.9 yet, you&#8217;re running out of time! We made about five dozen changes since the first release candidate, and those changes are all helpfully summarized in our weekly post on the development blog. Probably the biggest fixes are to live [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2273:\"<p>The second release candidate for WordPress 3.9 is now available for testing.</p>\n<p>If you haven&#8217;t tested 3.9 yet, you&#8217;re running out of time! We made about five dozen changes since the <a title=\"WordPress 3.9 Release Candidate\" href=\"//wordpress.org/news/2014/04/wordpress-3-9-release-candidate/\">first release candidate</a>, and those changes are all helpfully summarized <a href=\"//make.wordpress.org/core/?p=10237\">in our weekly post</a> on the development blog. Probably the biggest fixes are to live widget previews and the new theme browser, along with some extra TinyMCE compatibility and some RTL fixes.</p>\n<p><strong>Plugin authors:</strong> Could you test your plugins against 3.9, and if they&#8217;re compatible, make sure they are marked as tested up to 3.9? It only takes a few minutes and this really helps make launch easier. Be sure to follow along the core development blog; we&#8217;ve been posting <a href=\"//make.wordpress.org/core/tag/3-9-dev-notes/\">notes for developers for 3.9</a>. (For example: <a href=\"//make.wordpress.org/core/2014/04/15/html5-galleries-captions-in-wordpress-3-9/\">HTML5</a>, <a href=\"//make.wordpress.org/core/2014/04/14/symlinked-plugins-in-wordpress-3-9/\">symlinks</a>, <a href=\"//make.wordpress.org/core/2014/04/07/mysql-in-wordpress-3-9/\">MySQL</a>, <a href=\"//make.wordpress.org/core/2014/04/11/plupload-2-x-in-wordpress-3-9/\">Plupload</a>.)</p>\n<p>To test WordPress 3.9 RC2, try the <a href=\"//wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href=\"//wordpress.org/wordpress-3.9-RC2.zip\">download the release candidate here</a> (zip). If you’d like to learn more about what’s new in WordPress 3.9, visit the nearly complete About screen in your dashboard (<strong><img src=\"//i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692\" alt=\"\" width=\"16\" height=\"16\" /> → About</strong> in the toolbar) and also check out <a title=\"WordPress 3.9 Beta 1\" href=\"//wordpress.org/news/2014/03/wordpress-3-9-beta-1/\">the Beta 1 post</a>.</p>\n<p><em>This is for testing,</em><br />\n<em>so not recommended for<br />\nproduction sites—yet.</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:74:\"https://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"WordPress 3.8.3 Maintenance Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/news/2014/04/wordpress-3-8-3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/news/2014/04/wordpress-3-8-3/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 14 Apr 2014 19:29:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3145\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:338:\"WordPress 3.8.3 is now available to fix a small but unfortunate bug in the WordPress 3.8.2 security release. The &#8220;Quick Draft&#8221; tool on the dashboard screen was broken in the 3.8.2 update. If you tried to use it, your draft would disappear and it wouldn&#8217;t save. While we doubt anyone was writing a novella using [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2339:\"<p>WordPress 3.8.3 is now available to fix a small but unfortunate bug in the <a title=\"WordPress 3.8.2 Security Release\" href=\"http://wordpress.org/news/2014/04/wordpress-3-8-2/\">WordPress 3.8.2 security release</a>.</p>\n<p>The &#8220;Quick Draft&#8221; tool on the dashboard screen was broken in the 3.8.2 update. If you tried to use it, your draft would disappear and it wouldn&#8217;t save. While we doubt anyone was writing a novella using this tool, <em>any</em> loss of content is unacceptable to us.</p>\n<p>We recognize how much trust you place in us to safeguard your content, and we take this responsibility very seriously. We&#8217;re sorry we let you down.</p>\n<p>We&#8217;ve all lost words we&#8217;ve written before, like an email thanks to a cat on the keyboard or a term paper to a blue screen of death. Over the last few WordPress releases, we&#8217;ve made a number of improvements to features like autosaves and revisions. With revisions, an old edit can always be restored. We&#8217;re trying our hardest to save your content somewhere even if your power goes out or your browser crashes. We even monitor your internet connection and prevent you from hitting that &#8220;Publish&#8221; button at the exact moment the coffee shop Wi-Fi has a hiccup.</p>\n<p>It&#8217;s <em>possible</em> that the quick draft you lost last week is still in the database, and just hidden from view. As an added complication, these &#8220;discarded drafts&#8221; normally get deleted after seven days, and it&#8217;s already been six days since the release. If we were able to rescue your draft, you&#8217;ll see it on the &#8220;All Posts&#8221; screen after you update to 3.8.3. (We&#8217;ll also be pushing 3.8.3 out as a background update, so you may just see a draft appear.)</p>\n<p>So, if you tried to jot down a quick idea last week, I hope WordPress has recovered it for you. Maybe it&#8217;ll turn into that novella.</p>\n<p><a href=\"http://wordpress.org/download/\">Download WordPress 3.8.3</a> or click &#8220;Update Now&#8221; on Dashboard → Updates.</p>\n<p><em>This affected version 3.7.2 as well, so we&#8217;re pushing a 3.7.3 to these installs, but we&#8217;d encourage you to update to the latest and greatest.</em></p>\n<hr />\n<p><em>Now for some good news:<br />\nWordPress 3.9 is near.<br />\nExpect it this week</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/04/wordpress-3-8-3/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:32:\"https://wordpress.org/news/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"hourly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:9:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Thu, 18 Sep 2014 01:15:06 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:10:\"x-pingback\";s:37:\"https://wordpress.org/news/xmlrpc.php\";s:13:\"last-modified\";s:29:\"Thu, 04 Sep 2014 17:05:39 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 249\";}s:5:\"build\";s:14:\"20140611021551\";}','no'),(5675,'_transient_timeout_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1411046106','no'),(5676,'_transient_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1411002906','no'),(5677,'_transient_timeout_feed_867bd5c64f85878d03a060509cd2f92c','1411046106','no'),(5678,'_transient_feed_867bd5c64f85878d03a060509cd2f92c','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:61:\"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"WordPress Planet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Planet - http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:50:{i:0;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"WPTavern: Netropolitan “Facebook for Rich People” is Powered by WordPress and BuddyPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30784\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:96:\"http://wptavern.com/netropolitan-facebook-for-rich-people-is-powered-by-wordpress-and-buddypress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5349:\"<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/Netropolitan-feature.jpg\" rel=\"prettyphoto[30784]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/Netropolitan-feature.jpg?resize=1025%2C503\" alt=\"photo credit: Netropolitan\" class=\"size-full wp-image-30813\" /></a>photo credit: <a href=\"http://netropolitan.info/\">Netropolitan</a>\n<p><a href=\"http://netropolitan.info/\" target=\"_blank\">Netropolitan</a>, colloquially dubbed the &#8220;Facebook for rich people,&#8221; is a new private social network available to those who are willing to shell out $9,000 to join and $3,000/year to continue membership. The site advertises itself as <em>&#8220;The online country club for people with more money than time,&#8221;</em> and has been featured on <a href=\"http://www.cnn.com/2014/09/16/tech/social-media/netropolitan-social-media/\" target=\"_blank\">CNN</a> and other major news outlets across the globe.</p>\n<p>The controversial social network was created by James Touchi-Peters, a former conductor of the Minnesota Philharmonic Orchestra. &#8220;This whole thing started because when I was traveling in my work, I wanted to get in on a social event where basically I could meet people like myself,&#8221; Touchi-Peters told Vice in a recent <a href=\"http://www.vice.com/read/this-guy-is-creating-a-facebook-for-rich-people-917\" target=\"_blank\">interview</a>. The membership fee is meant to vet the members as they join in order to maintain the exclusivity of the network.</p>\n<p>One glance at the site and it&#8217;s obvious that it was built with WordPress, BuddyPress, and bbPress, using a $63 Themeforest <a href=\"http://themeforest.net/item/kleo-next-level-premium-wordpress-theme/6776630\" target=\"_blank\">theme</a>. The theme packages with it a drag-and-drop page builder as well as extra functionality to extend BuddyPress, add integration with <a href=\"http://www.paidmembershipspro.com/\" target=\"_blank\">Paid Memberships Pro</a>, and display sliders via <a href=\"http://wptavern.com/critical-security-vulnerability-found-in-wordpress-slider-revolution-plugin-immediate-update-advised\" target=\"_blank\">Slider Revolution</a>.</p>\n<p>&#8220;It’s your standard, typical social network, except the one change we made is that instead of using the friend method that people are used to usually reciprocally confirming relationships, we’re using the follower method,&#8221; Touchi-Peters said. This functionality is readily available via the <a href=\"https://wordpress.org/plugins/buddypress-followers/\" target=\"_blank\">BuddyPress Follow</a> plugin.</p>\n<p>The intriguing aspect of the story is how long this site took to build. Touchi-Peter&#8217;s answer to Vice implies that the network required two years of development. &#8220;From when we decided to move forward, we&#8217;ve been working on it technically for two years. It’s been a four-year process.&#8221; Touring Netropolitan&#8217;s informational pages shows a screenshot of the founder&#8217;s BuddyPress profile page, which seems identical to the theme&#8217;s <a href=\"http://seventhqueen.com/themedemo/?product=kleo\" target=\"_blank\">demo</a>, with the exception of the logo.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/netropolitan.jpg\" rel=\"prettyphoto[30784]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/netropolitan.jpg?resize=1025%2C640\" alt=\"netropolitan\" class=\"aligncenter size-full wp-image-30802\" /></a></p>\n<p>Many media outlets seem to be incredulous that he would choose to build the social network on WordPress, betraying a popular notion that the software is somehow insecure because it&#8217;s free. What many onlookers do not understand is that WordPress itself is not inherently insecure. Rather, low quality themes and plugins can include vulnerabilities that provide entry points for exploitation, which is more likely when site owners fail to update old software.</p>\n<p>The concern in this particular case with Netropolitan is that the site keep pace with updates, as it&#8217;s currently behind on core updates and its theme packages the Slider Revolution plugin that recently made headlines when the developer failed to publicly disclose the severity of a recently patched <a href=\"http://wptavern.com/critical-security-vulnerability-found-in-wordpress-slider-revolution-plugin-immediate-update-advised\" target=\"_blank\">critical vulnerability</a>. Like any tool, software takes a little bit of effort and education for people to use it and maintain it in a responsible way. If WordPress didn&#8217;t hold the power to build so many things, it wouldn&#8217;t be the constant target of hackers and spammers. This is the trade off.</p>\n<p>Nearly every WordPress development agency has been approached multiple times to build similar sites &#8211; the &#8220;Ebay for Elites,&#8221; or &#8220;Match.com for Millionaires,&#8221; all promising exclusivity at a premium. It&#8217;s humorous but also a testament to how flexible people believe the WordPress platform is for building nearly any kind of website. Netropolitan may not be the finest implementation of WordPress/BuddyPress that the world has ever seen, but it is evidence that open source software makes it possible for people to run with their entrepreneurial ideas and take them all the way to the world stage.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 18 Sep 2014 00:05:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"WPTavern: Edit WordPress Posts and Postmeta in the Customizer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30745\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"http://wptavern.com/edit-wordpress-posts-and-postmeta-in-the-customizer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5150:\"<p>WordPress users were thrilled when <a href=\"http://wptavern.com/widget-customizer-approved-for-wordpress-3-9\" target=\"_blank\">widgets were added to the customizer</a> in the 3.9 release. A better UI and real-time previews revived widgets and once again made them a joy to use. The experience was so beneficial to users that the project continues to plough ahead with customizer enhancements. <a href=\"http://wptavern.com/wordpress-4-0-benny-now-available-for-download\" target=\"_blank\">WordPress 4.0</a> introduced contextual controls and a new <a href=\"https://core.trac.wordpress.org/ticket/27406\" target=\"_blank\">Panels API</a> for segmenting controls into groups. It also added a wider array of controls and parameters that make it possible for the customizer to be used beyond themes and widgets.</p>\n<p>Just when you thought you&#8217;d seen it all, core contributor Weston Ruter and the folks at <a href=\"http://x-team.com/\" target=\"_blank\">X-Team</a> have added post editing to the customizer as an experimental plugin on WordPress.org. <a href=\"https://wordpress.org/plugins/customize-posts/\" target=\"_blank\">Customize Posts</a> brings the power of live frontend previews to WordPress posts and postmeta with the tagline: <strong>&#8220;Stop editing your posts/postmeta blind!&#8221;</strong></p>\n<p>Once installed, you&#8217;ll find a new &#8220;Customize&#8221; menu item on pages and posts, which will launch it into the customizer for editing.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/customize.png\" rel=\"prettyphoto[30745]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/customize.png?resize=1025%2C131\" alt=\"customize\" class=\"aligncenter size-full wp-image-30760\" /></a></p>\n<p>Customize Posts enables you to edit both post content and postmeta, including the following:</p>\n<ul>\n<li>Post title</li>\n<li>Post content</li>\n<li>Slug</li>\n<li>Author</li>\n<li>Published time/date</li>\n<li>Excerpt</li>\n<li>Status</li>\n<li>Comments (Open/Closed)</li>\n<li>Parent and Menu Order</li>\n<li>Page Template</li>\n<li>Featured Image</li>\n<li>Any additional postmeta (custom metaboxes would have to be opt-in)</li>\n</ul>\n<p>This would only be possible with the new Panels API, since it adds a long list of controls, as you can see in the screenshot below:</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/customize-posts.png\" rel=\"prettyphoto[30745]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/customize-posts.png?resize=1025%2C1069\" alt=\"customize-posts\" class=\"aligncenter size-full wp-image-30764\" /></a></p>\n<p>Version 0.2.0 makes it possible to add, modify and delete postmeta and all of these action are fully previewable. The plugin also grants customize capability to authors and editors who wouldn&#8217;t normally have access.</p>\n<p>On themes like Twenty Fourteen, where you have featured images that appear on single posts, the plugin adds a convenient way to live preview various images without having to go back and forth between the admin and the frontend. If you have an extensive array of postmeta that lends itself well to live previews, I can see how this plugin could be very useful.</p>\n<p>One thing that is particularly disconcerting is that once you are editing the post in the customizer, it appears that you cannot truly save the content without publishing it. The big blue &#8220;Save &amp; Publish&#8221; button is your only option.</p>\n<p>In the current absence of a full-featured frontend editor for WordPress, the experience of using Customize Posts for editing post content is a somewhat clunky alternative with its narrow editing pane. The slight lag between writing and the update in the preview amounts to a significant drawback for daily use. However, it&#8217;s an interesting proof of concept and definitely worth exploring. Ruter readily <a href=\"https://github.com/avryl/wp-front-end-editor/issues/87#issuecomment-43518287\" target=\"_blank\">admits</a> that the plugin is, for all intents and purposes, an experiment:</p>\n<blockquote><p>I&#8217;m happy if Customize Posts develops in parallel to Front-end Editing. I was just hoping it might be a useful reference for how to leverage the Customizer to preview changes to post/postmeta. I&#8217;ll continue hacking on my Customizer prototype to see what comes out of it.</p></blockquote>\n<p>The development team notes on the plugin&#8217;s description that Customize Posts is not to be confused with 10up&#8217;s <a href=\"https://github.com/10up/Post-Customizer\" target=\"_blank\">Post Customizer</a>, a plugin in the same vein that addresses a different problem. 10up and X-Team are in <a href=\"https://github.com/10up/Post-Customizer/issues/9#issue-34028226\" target=\"_blank\">communication</a> about collaborating between the two plugins wherever possible in addition to interfacing with other contributors on existing core tickets for the issues addressed in these plugins.</p>\n<p>If a frontend editor does wind up landing in core in the future, do you think that the concept shown here for editing posts and postmeta could be a compliment to the experience?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 17 Sep 2014 20:52:46 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt: Merchbar\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44123\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://ma.tt/2014/09/merchbar/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:584:\"<p><a href=\"http://www.merchbar.com/\">Merchbar</a> is an iPhone app that makes it easy to buy merchandise from your favorite artists. It also was the first investment I made through my <a href=\"https://angel.co/photomatt/syndicate\">Angellist Syndicate</a>, and I&#8217;m excited for the team on its launch. (Although it&#8217;s good to remember that launching is a halfway point &#8212; you should expect to spend at least as much time as you did leading up to launch to get to something you&#8217;re happy with. Something I&#8217;m thinking about a lot in Automattic these days.)</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 17 Sep 2014 18:36:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"WPTavern: PhpStorm 8 Released With Full WordPress Support\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30709\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wptavern.com/phpstorm-8-released-with-full-wordpress-support\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3910:\"<p><a href=\"http://www.jetbrains.com/phpstorm/\" target=\"_blank\">PhpStorm</a> from JetBrains is far and and away the <a href=\"http://www.sitepoint.com/best-php-ide-2014-survey-results/\" target=\"_blank\">most favored IDE for PHP developers</a>. In March, PhpStorm announced that the upcoming version 8 would <a href=\"http://blog.jetbrains.com/phpstorm/2014/03/wordpress-support-in-phpstorm-8-eap/\" target=\"_blank\">add official support for WordPress</a>. The official release is finally here and delivers on that promise, adding a deeper level of support for developers who work with the WordPress code base.</p>\n<p>PhpStorm 8 makes it easy to set up your development environment configuration specifically for WordPress. You can now add WordPress integration when creating a new project, or add it to existing projects.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/phpstorm-enable-wp-integration.png\" rel=\"prettyphoto[30709]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/phpstorm-enable-wp-integration.png?resize=772%2C242\" alt=\"phpstorm-enable-wp-integration\" class=\"aligncenter size-full wp-image-30726\" /></a></p>\n<p>In version 8 you&#8217;ll find an impressive array of built-in hook features:</p>\n<ul>\n<li>Completion for WordPress Action and Filter functions parameters (hooks completion)</li>\n<li>Navigation from Action and Filter functions (hook registration) to hook invocation</li>\n<li>Callbacks from Hook Registration</li>\n<li>With Navigate | Symbol&#8230;you can search for hook invocations and easily navigate to them</li>\n<li>Find Usages for Hook Registration Functions</li>\n</ul>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/phpstorm_wordpress.png\" rel=\"prettyphoto[30709]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/phpstorm_wordpress.png?resize=1025%2C806\" alt=\"phpstorm_wordpress\" class=\"aligncenter size-full wp-image-30711\" /></a></p>\n<p>This release adds WordPress code style, the ability to search on WordPress.org right from the editor, and support for <a href=\"http://wp-cli.org/\" target=\"_blank\">WP-CLI</a>. It also includes PHP Code Sniffer with <a href=\"https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards\" target=\"_blank\">WordPress Coding Standards</a> integration to help you keep your project in line with WP coding conventions.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/phpstorm-wp-cli.png\" rel=\"prettyphoto[30709]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/phpstorm-wp-cli.png?resize=602%2C361\" alt=\"phpstorm-wp-cli\" class=\"aligncenter size-full wp-image-30728\" /></a></p>\n<p>PhpStorm 8 includes a plugin skeleton to help you get started. It creates a <em>plugin-name.php</em> file with the proper meta information.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/phpstorm-new-plugin.png\" rel=\"prettyphoto[30709]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/phpstorm-new-plugin.png?resize=798%2C458\" alt=\"phpstorm-new-plugin\" class=\"aligncenter size-full wp-image-30724\" /></a></p>\n<p>Check out the <a href=\"http://confluence.jetbrains.com/display/PhpStorm/WordPress+Development+using+PhpStorm\" target=\"_blank\">online documentation</a> for a guide to configuring your development environment for WordPress projects. If you&#8217;re curious to know how much work went into building in WordPress support, have a look at the number of <a href=\"http://youtrack.jetbrains.com/issues/WI?q=wordpress\" target=\"_blank\">issues tracked</a> during development for this version.</p>\n<p>A PhpStorm license is $199, but if you contribute to an open source project or create open source extensions for WordPress, you may be eligible for a free <a href=\"http://www.jetbrains.com/phpstorm/buy/choose_edition.jsp?license=OPEN_SOURCE\" target=\"_blank\">Open Source License</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 17 Sep 2014 17:40:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Matt: Fast Company Profile\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44118\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://ma.tt/2014/09/fast-company-profile/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1820:\"<blockquote><p>Every second, somewhere in the world four babies and two WordPress blogs are born.</p></blockquote>\n<p>That great line comes from <a href=\"http://www.fastcolabs.com/3035463/how-matts-machine-works\">Shane Snow&#8217;s profile of myself, Automattic, and WordPress called &#8220;How Matt&#8217;s Machine Works</a>.&#8221; If you&#8217;re interested in the latest on how Automattic works as seen from the eye of a journalist with a background in product and technology, check it out.</p>\n<p>A few comments: Since it came out my colleagues have been making fun of me for &#8220;trolling.&#8221; <img src=\"http://i1.wp.com/s.ma.tt/blog/wp-includes/images/smilies/icon_smile.gif?w=604\" alt=\":)\" class=\"wp-smiley\" /> The term &#8220;benevolent dictator for life&#8221; goes back to <a href=\"http://en.wikipedia.org/wiki/Benevolent_dictator_for_life\">at least 1995 and is common in open source communities</a>. Our lounge in SF <a href=\"http://lounge.automattic.com/tour/\">is now much nicer than the one pictured</a>. We mostly use <a href=\"https://slack.com/\">Slack</a> instead of Skype. I would say my management style has changed quite a bit since when <a href=\"http://scottberkun.com/\">Scott</a> was at the company. The end of the article nails it in that as <a href=\"http://automattic.com/\">Automattic</a> has scaled, to 272 at latest count, it&#8217;s really the over 40 leads who keep things running as smoothly as they do, and many people in similar roles on the .org side.</p>\n<p>Even with the above, the article is probably the best look at the things I&#8217;m involved with every day since <a href=\"http://ma.tt/2009/06/the-way-i-work-annotated/\">2009&#8217;s The Way I Work</a>, so kudos to Shane and <a href=\"http://www.fastcolabs.com/3035463/how-matts-machine-works\">definitely check it out</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 17 Sep 2014 05:09:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"WPTavern: A Chat With Anders Norén on Finding Inspiration for WordPress Theme Design\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30661\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"http://wptavern.com/a-chat-with-anders-noren-on-finding-inspiration-for-wordpress-theme-design\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:7817:\"<p>When we last <a href=\"http://wptavern.com/anders-noren-on-achieving-simplicity-in-wordpress-theme-design\" target=\"_blank\">interviewed</a> Anders Norén, he was the new kid on the block with a handful of successful WordPress themes. Norén, a communications student from Umeå, Sweden, had just started tossing around the idea of pursuing WordPress theme development as a serious hobby. In the span of about one year, he has released eight <a href=\"http://profiles.wordpress.org/Anlino/\" target=\"_blank\">free themes</a> on WordPress.org, with a cumulative 189,452 downloads.</p>\n<p>Norén seems to be equipped with a never-ending fountain of inspiration for new themes. His <a href=\"http://wptavern.com/rams-a-free-wordpress-blogging-theme-with-zero-fluff\" target=\"_blank\">Rams theme</a>, which bears a few similarities to the upcoming <a href=\"http://wptavern.com/first-look-at-designs-for-the-twenty-fifteen-default-wordpress-theme\" target=\"_blank\">Twenty Fifteen default theme</a>, was inspired by Dieter Rams, a German industrial designer who is well known for his innovative, unobtrusive, and timeless product design.</p>\n<p>I spoke with him regarding <a href=\"http://wordpress.org/themes/hoffman\" target=\"_blank\">Hoffman</a>, his latest free blogging theme and discovered that his design inspiration primarily comes from the recognition of others&#8217; artistic talents.</p>\n<p>&#8220;Hoffman was named after the actor Philip Seymour Hoffman, who sadly passed away in February this year,&#8221; he said. &#8220;I was devastated when I heard the news. I&#8217;ve been a huge fan of Hoffman for years. He was never the traditional leading man, but he always gave <a href=\"https://www.youtube.com/watch?v=066BFGk6QvA\" target=\"_blank\">memorable performances</a>,&#8221; Norén said, linking to one of his favorites.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/hoffman.png\" rel=\"prettyphoto[30661]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/hoffman.png?resize=880%2C660\" alt=\"hoffman\" class=\"aligncenter size-full wp-image-30671\" /></a></p>\n<p>While many designers have inspiration come in the form of images, dreams, and sketches on paper napkins, Norén&#8217;s sparks of creativity for theme design arrive as clarion pieces of the design as a whole. He builds upon these fragments until the theme starts to take shape.</p>\n<p>&#8220;Usually, is starts with a pretty clear idea of a single aspect of the design. With Rams, it was the interplay between the colors mint green, graphite and grey. I stumbled over the color scheme on the website of a Dutch advertising agency and instantly fell in love with it,&#8221; he said.</p>\n<p>&#8220;With Radcliffe, I wanted to do a theme with fullscreen featured images. With my upcoming theme Fukasawa, I wanted to do a really clean design built with a media-heavy grid in mind. When that single detail is in place, the rest usually grows naturally around it,&#8221; Norén told the Tavern. His approach is interesting in that instead of trying to formulate pieces for a larger idea, he starts with the smaller pieces until they form a unified concept to drive the design.</p>\n<h3>Norén&#8217;s Secret: Jump Into the Code as Soon as Possible</h3>\n<p>Once inspired, Norén doesn&#8217;t sit idly courting the muse but rather moves directly into action, prototyping his theme idea in the browser. <strong>&#8220;Once I have an idea, I try to get started on the HTML/CSS/jQuery as soon as possible,&#8221;</strong> he said. &#8220;I rarely do any sketches – by hand or in Photoshop – before I jump into the code.&#8221;</p>\n<p>Norén&#8217;s &#8220;design in the browser&#8221; approach makes sense with people increasingly accessing content on mobile devices. In fact, it&#8217;s one of the best ways to find if out if your idea is viable as a theme. &#8220;I find it hard to know whether a design will work until I have it up and running in Safari,&#8221; he said. &#8220;Most of the designs don&#8217;t work. My list of discarded themes is a lot longer than the list of published ones.&#8221;</p>\n<h3>Releasing Free Themes as a Vehicle for Personal Creativity</h3>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/design.jpg\" rel=\"prettyphoto[30661]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/design.jpg?resize=1025%2C470\" alt=\"design\" class=\"aligncenter size-full wp-image-30701\" /></a></p>\n<p>A WordPress.org theme developer has the luxury of designing for himself, something that Norén isn&#8217;t yet ready to give up. I asked him why he continues to release free themes and if he plans to make a career out of web development.</p>\n<p>&#8220;In the beginning, I think a lot of it came down to insecurity,&#8221; he admitted. &#8220;I wasn&#8217;t sure my themes did enough or did it good enough for anyone to pay for them, so I released my themes for free on WordPress.org instead.</p>\n<p>&#8220;That said, once I started releasing themes on WordPress.org, I realized that it was a lot of fun. The attention and appreciation of others is nice, of course, but the best part is seeing someone putting your theme to good (or unexpected) use,&#8221; he said.</p>\n<p><strong>&#8220;Also, by not being dependent on my themes for income, I can keep building the themes I want to make rather than the ones I think people would pay for. I don’t think I&#8217;m willing to give that up just yet.&#8221;</strong></p>\n<p>Giving himself over to his hobby of theme development is the path that led Norén to discover that his true passion lies in designing and developing for the web.</p>\n<p>&#8220;When you interviewed me six months ago, I didn&#8217;t really have any intentions to actually work as a web designer,&#8221; Norén said. &#8220;I was content to keep it as a hobby. Over the course of the past six months, I&#8217;ve come to realize that that isn&#8217;t the case anymore. I’ll be looking for a job as a web designer after I’m finished with my BA in June next year.&#8221;</p>\n<p>Although he&#8217;s already been approached by several companies, he is committed to finishing his studies before pursuing a career in development. &#8220;I&#8217;ve already had some job offers, some for contract work, some for employment, but I would kick myself for all eternity if I bailed on my studies with less than a year remaining,&#8221; Norén said. &#8220;That said, if Automattic got in touch about a job as a theme wrangler, I would probably have a hard time turning them down.&#8221;</p>\n<h3>Looking to the Future</h3>\n<p>Outside of his upcoming Fukasawa release, Norén doesn&#8217;t have any other themes in progress due to work and studies taking up most of his time. That hasn&#8217;t stopped ideas from buzzing around in his head. <strong>&#8220;I would like to build something using the new portfolio post type included in Jetpack, and it’d be interesting to build a business theme for WordPress.org as well,&#8221;</strong> he said, noting that the selection of themes in that category is still very limited. Although he won&#8217;t be able to work on themes until December, he hopes to build another to release before the holidays are over.</p>\n<p><a href=\"http://www.andersnoren.se/\" target=\"_blank\">Anders Norén</a> is knocking it out of the park with his continual stream of beautiful free themes. While many theme developers struggle to produce original works, Norén has found the keys to standing out from the crowd, as evidenced by the fact that he is rapidly closing in on 200,000 downloads on WordPress.org. With an impressive portfolio already in hand and a seemingly inexhaustable supply of design inspiration, Norén will enter the work force well-prepared for the stiff competition that accompanies commercial WordPress theme design.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 16 Sep 2014 20:54:20 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"WPTavern: BuddyPress 2.1 RC1 Released: Last Round of Testing Begins\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30637\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wptavern.com/buddypress-2-1-rc1-released-last-round-of-testing-begins\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2306:\"<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/buddypress-logo-blue.png\" rel=\"prettyphoto[30637]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/buddypress-logo-blue.png?resize=839%2C398\" alt=\"buddypress-logo-blue\" class=\"aligncenter size-full wp-image-30655\" /></a></p>\n<p>BuddyPress 2.1 is right around the corner. After a fairly quiet beta period, <a href=\"http://buddypress.org/2014/09/buddypress-2-1-release-candidate/\" target=\"_blank\">2.1 RC1</a> is now in the hands of testers and is your last chance to test before the official release.</p>\n<p>BuddyPress lead developer Boone Gorges also posted an important <a href=\"https://bpdevel.wordpress.com/2014/09/16/following-some-technical-difficulties-the/\" target=\"_blank\">update</a> to let those who maintain BP language packs know that the latest strings from BP trunk are <a href=\"http://translate.wordpress.org/projects/buddypress/dev\" target=\"_blank\">now available for translation</a>. You&#8217;ve got a couple days to translate the new strings in order to have your language pack ready for 2.1.</p>\n<p>The upcoming milestone will introduce a revamped mentions interface that functions like Twitter to autosuggest usernames while typing. This addition makes the mentions feature more useful and intuitive for members of large BuddyPress communities.</p>\n<p>The 2.1 release will also include a new profile field type (URL), automatic translation fetching, and more performance improvements. For a quick overview of all the development highlights coming in 2.1, check out our <a href=\"http://wptavern.com/buddypress-2-1-beta-1-now-available-for-testing\" target=\"_blank\">2.1 beta 1 post</a>.</p>\n<p>If you&#8217;re testing RC1, please make sure to report any bugs or issues on <a href=\"https://buddypress.trac.wordpress.org/\" target=\"_blank\">BuddyPress trac</a>. Currently <a href=\"https://buddypress.trac.wordpress.org/query?status=accepted&status=assigned&status=new&status=reopened&milestone=2.1&groupdesc=1&group=priority&col=id&col=summary&col=status&col=type&col=priority&col=milestone&col=component&order=priority\" target=\"_blank\">active tickets for 2.1</a> have been whittled down to one, so you know it&#8217;s almost ready to ship. Expect the BuddyPress 2.1 official release sometime this week.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 16 Sep 2014 18:13:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"BuddyPress: BuddyPress 2.1 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://buddypress.org/?p=197074\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://buddypress.org/2014/09/buddypress-2-1-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:767:\"<p>BuddyPress 2.1 Release Candidate 1 is now available. The &#8220;Release Candidate&#8221; status means that the final release of BP 2.1 is imminent, and this is your last chance to put the next version through its paces before it comes out.</p>\n<p>Get BP 2.1-RC1 through Subversion, or by downloading the zip file here: <a href=\"http://downloads.wordpress.org/plugin/buddypress.2.1-RC1.zip\">http://downloads.wordpress.org/plugin/buddypress.2.1-RC1.zip</a>. And remember: this is still pre-release software, so we don&#8217;t recommend running it on your production site.</p>\n<p>Questions or comments? Drop a note in <a href=\"https://buddypress.org/support/\">our support forums</a> or <a href=\"https://buddypress.trac.wordpress.org/\">our development tracker</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 16 Sep 2014 15:24:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Boone Gorges\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Matt: Ultimate Office Perk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44114\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://ma.tt/2014/09/ultimate-office-perk/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:542:\"<p>We&#8217;ve had some really good press the past week, the first I&#8217;d like to share with you comes from Aimee Groth writing for Quartz: <a href=\"http://qz.com/260933/the-case-for-a-distributed-workforce/\">The makers of WordPress.com learned years ago that the ultimate office perk is not having an office</a>. The funny thing is I&#8217;m writing this from the once-a-year Automattic Grand Meetup, which is in Utah this year, there are over 250 of my colleagues here and it&#8217;s great fun meeting and hanging out with everybody.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 16 Sep 2014 06:23:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"WPTavern: Pho: A Free Minimalist, Masonry WordPress Theme\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30598\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://wptavern.com/pho-a-free-minimalist-masonry-wordpress-theme\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3811:\"<p>The folks at <a href=\"http://thematosoup.com/\" target=\"_blank\">ThematoSoup</a> are in the habit of naming their theme releases for delicious soup dishes. The team, comprised of WordPress plugin and theme developers <a href=\"https://twitter.com/slobodanmanic\" target=\"_blank\">Slobodan Manic</a> and <a href=\"https://twitter.com/NikolicDragan\" target=\"_blank\">Dragan Nikolic</a>, is dedicated to creating minimalist-inspired WordPress products.</p>\n<p><strong>&#8220;We eat, sleep and breathe WordPress and digital clutter gives us nightmares,&#8221;</strong> the duo expressed on their about page. The design of <a href=\"http://wordpress.org/themes/pho\" target=\"_blank\">Pho</a>, their latest theme, embodies this sentiment and follows in the minimalist tradition with emphasis on the content.</p>\n<p>The theme was designed to be fast, lean, and easily customized. It showcases images on the homepage with a slider that features content based on a tag that you specify.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/pho.png\" rel=\"prettyphoto[30598]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/pho.png?resize=880%2C660\" alt=\"pho\" class=\"aligncenter size-full wp-image-30602\" /></a></p>\n<p>Below the slider you can customize the homepage display using the various page templates. The masonry aspect of the design is completely optional, as you can select between masonry (with or without sidebar) or standard (with or without sidebar).</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/pho-homepage.png\" rel=\"prettyphoto[30598]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/pho-homepage.png?resize=324%2C500\" alt=\"pho-homepage\" class=\"alignright size-large wp-image-30612\" /></a></p>\n<p>Pho includes three menus: an understated, simple primary navigation, footer menu, and one at the top for social links. It supports both sidebar and footer widget areas.</p>\n<p>All of the theme options can be found in the native customizer, including an option to upload a logo to replace the site title. You can also change the site&#8217;s primary color, archives layout, and choose from a few pre-selected fonts for the body and headings. The customizer also allows you to set the theme&#8217;s background image/color, and specify the featured content tag.</p>\n<p>After testing Pho in my development environment, I found that with a few tweaks in the customizer, you can have your site looking just like the demo in a matter of minutes. Since the options are all in the same place, there&#8217;s nothing confusing about customizing Pho to suit your preferences.</p>\n<p>The featured content area on the homepage will require the use of some larger sized images in order to truly shine. Pho is retina-ready and will respond nicely to various devices from desktop to mobile.</p>\n<p>The theme&#8217;s developers did not neglect <a href=\"http://demo.thematosoup.com/pho/template-comments/\" target=\"_blank\">comments</a> and have styled threaded comments up to four levels deep. Pho also includes support for paginated comments and styles for images, videos, and author comments.</p>\n<p>The theme includes built-in support for <a href=\"https://github.com/zamoose/themehookalliance\" target=\"_blank\">Theme Hook Alliance</a>, a community-driven project that offers third-party action hooks to theme developers to implement for more flexibility.</p>\n<p>Check out a <a href=\"http://demo.thematosoup.com/pho/\" target=\"_blank\">live demo</a> to see it in action and test how elegantly it responds to various screen sizes. If you want to update your blog or website with a new minimalist design, download <a href=\"http://wordpress.org/themes/pho\" target=\"_blank\">Pho</a> for free from WordPress.org or add it via your admin themes browser.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 16 Sep 2014 01:16:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"WPTavern: Free PSD Template for Creating a WordPress.org Plugin Banner\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30572\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"http://wptavern.com/free-psd-template-for-creating-a-wordpress-org-plugin-banner\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3500:\"<p>Creating a custom banner for your plugin on WordPress.org will help your extension to stand out among the 33,000+ others in the plugin directory. A little bit of branding also gives the impression that the plugin isn&#8217;t just a one night stand but rather a work that you&#8217;re committed to continually update.</p>\n<p>If your plugin is lacking a custom icon, the WordPress plugin installer will create a default icon based on a color sampling of your plugin banner. It only takes a few minutes to create a banner and now it&#8217;s easier than ever with the free <a href=\"http://planetozh.com/blog/2014/09/wordpress-plugin-banner-as-a-psd/\" target=\"_blank\">WordPress Plugin Banner PSD template</a> from Ozh.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/plugin-banner-template.jpg\" rel=\"prettyphoto[30572]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/plugin-banner-template.jpg?resize=1025%2C345\" alt=\"plugin-banner-template\" class=\"aligncenter size-full wp-image-30574\" /></a></p>\n<p>The reason why plugin developers put off creating a banner is because it takes a bit of thoughtful planning to find or create an image with the proper dimensions. In addition, you need to select an image that still looks good with the plugin title obscuring the bottom left corner.</p>\n<p>Ozh&#8217;s template accounts for all of these things and gives you different layers for creating and previewing your banner in Photoshop with the right dimensions. It&#8217;s important to note that if you want your plugin banner to support retina displays, then you need to add an <a href=\"http://make.wordpress.org/core/2012/07/04/fun-with-high-dpi-displays/\" target=\"_blank\">additional banner</a> that is double the size of the template:1544 pixels wide and 500 pixels tall with a file named &#8220;banner-1544&#215;500.png&#8221; or &#8220;banner-1544&#215;500.jpg.&#8221; (The plugin directory does not accept GIF files.)</p>\n<p>When using Ozh&#8217;s PSD template you can preview the plugin title on your banner, but make sure to turn the visibility for that layer off before saving your final banner image. The placeholder for the background reminds you of the file name for the banner (banner-772&#215;250.jpg) and its location: root /assets directory.</p>\n<p>After committing your banner to the /assets directory, it may take a few minutes before it will show up on WordPress.org. The <a href=\"https://wordpress.org/plugins/about/faq/\" target=\"_blank\">Developer FAQ</a> section for the plugin directory has a tip on previewing your plugin page with your image:</p>\n<blockquote><p>For development and testing, you can add a URL parameter to your plugin&#8217;s URL of &#8220;?banner_url=A_URL_TO_YOUR_IMAGE&#8221; to preview what the page will look like with your own image. This will only work with your own plugins; you cannot use this parameter on anybody else&#8217;s plugins.</p></blockquote>\n<p>With the availability of this new banner template, there&#8217;s no excuse to leave your plugin looking sad and neglected. Add a custom banner and, while you&#8217;re at it, check out Andrew Nacin&#8217;s <a href=\"http://make.wordpress.org/core/2014/08/21/introducing-plugin-icons-in-the-plugin-installer/\" target=\"_blank\">tips for creating a custom icon</a>. You can <a href=\"http://planetozh.com/blog/2014/09/wordpress-plugin-banner-as-a-psd/\" target=\"_blank\">download the WordPress.org plugin banner template</a> PSD directly from Ozh&#8217;s website.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Sep 2014 20:28:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"WPTavern: New Plugin Adds Conditional Profile Fields to BuddyPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29143\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wptavern.com/new-plugin-adds-conditional-profile-fields-to-buddypress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5174:\"<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/different-users.jpg\" rel=\"prettyphoto[29143]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/different-users.jpg?resize=1024%2C492\" alt=\"photo credit: Dunechaser - cc\" class=\"size-full wp-image-30565\" /></a>photo credit: <a href=\"https://www.flickr.com/photos/dunechaser/6042984689/\">Dunechaser</a> &#8211; <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.0/\">cc</a>\n<p>When you create profile fields in BuddyPress, they apply to every user in the same way. Each user responds to the same set of questions, but this could stand to be a little more flexible to account for differences in users. What if you could conditionally show profile fields, based on a user&#8217;s answers to certain questions?</p>\n<p>Prolific BuddyPress plugin developer Brajesh Singh created a plugin to do exactly this. <a href=\"http://buddydev.com/plugins/conditional-profile-fields-for-buddypress/\" target=\"_blank\">Conditional Profile Fields for BuddyPress</a> gives site administrators the ability to set conditions for hiding/showing profile fields based on a user&#8217;s responses to other profile fields. For example, let&#8217;s say you create a field to ask if the user is a morning or night person.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/profile-field.png\" rel=\"prettyphoto[29143]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/profile-field.png?resize=775%2C434\" alt=\"profile-field\" class=\"aligncenter size-full wp-image-29145\" /></a></p>\n<p>You can then set up a second question, such as <em>&#8220;Do you eat breakfast?&#8221;</em>  With the help of this plugin, you can make the question contingent on the first question where you asked if the person is a morning or night person. Perhaps you are curious if a user who identifies as a &#8220;night person&#8221; also eats breakfast. While editing the breakfast question, scroll to the bottom and you will find a new box for setting a <strong>Visibility Condition</strong>.</p>\n<p>From the dropdown, select the question you want as the condition, show/hide, and the value that field is contingent upon. The plugin also includes support for muti-option fields.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/conditions.jpg\" rel=\"prettyphoto[29143]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/conditions.jpg?resize=764%2C202\" alt=\"conditions\" class=\"aligncenter size-full wp-image-30548\" /></a></p>\n<p>Once you have your condition set, you can navigate to the frontend to see that the conditional fields are shown or hidden based on your selection. Here&#8217;s a quick demo:</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/conditional-profile-fields-demo.gif\" rel=\"prettyphoto[29143]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/conditional-profile-fields-demo.gif?resize=578%2C389\" alt=\"conditional-profile-fields-demo\" class=\"aligncenter size-full wp-image-30540\" /></a></p>\n<p>If you mark the first profile field as &#8220;Required&#8221; when creating it, then BuddyPress will also show the field on the registration form and conditional fields will also apply. The plugin currently supports the following features:</p>\n<ul>\n<li>Compatibly with 99% of WordPress themes</li>\n<li>2 visibility option to either show the field or hide the field based on the condition</li>\n<li>A field dropdown box to allow you to select the field that governs the display of this field</li>\n<li>6 operators to match the values (6 operators for the number/text/textarea field and 2 operators for matching the multi-select box/check box/radio)</li>\n<li>It supports the multi-type field as well as other fields (and should support custom profile fields automatically)</li>\n<li>Currently the date field is not supported for creating conditions</li>\n</ul>\n<p>The Conditional Profile Fields plugin is an excellent addition to any BuddyPress site that brings together different types of users. For example, educational sites might include students, teachers, tutors, etc. Instead of using a complicated plugin to set up different user types, you can add a conditional profile field to ask the user to select from student, teacher, etc. From there you can create different profile field groups containing questions conditional upon the user&#8217;s previous selection.</p>\n<p>Conditional profile fields could also be useful for many other types of social networks, including:</p>\n<ul>\n<li>Dating sites</li>\n<li>Professional organizations</li>\n<li>Sports teams</li>\n<li>Multilingual communities</li>\n<li>Job or freelancer networks</li>\n<li>Hobby or interest-based networks</li>\n</ul>\n<p>I tested the plugin with BuddyPress 2.1 beta 1 and found that it works exactly advertised. Conditional profile fields are an excellent way to extend a niche social network to display profile fields specifically tailored to different user types. Download Conditional Profile Fields for BuddyPress for free from <a href=\"http://buddydev.com/plugins/conditional-profile-fields-for-buddypress/\" target=\"_blank\">BuddyDev.com</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Sep 2014 18:19:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"BuddyPress: BuddyPress 2.0.3 Security Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://buddypress.org/?p=194190\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://buddypress.org/2014/09/buddypress-2-0-3-security-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:612:\"<p>BuddyPress 2.0.3 is now available. This is a security release which fixes one security issue with group creation, which was discovered by the BuddyPress team.</p>\n<p>This is an important and recommended update for all BuddyPress sites. A full changelog is at <a href=\"http://codex.buddypress.org/developer/releases/version-2-0-3/\">http://codex.buddypress.org/developer/releases/version-2-0-3/</a>.</p>\n<p>You can upgrade via your WordPress Dashboard &gt; Updates. You can also download the latest version at <a href=\"http://wordpress.org/plugins/buddypress/\">http://wordpress.org/plugins/buddypress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Sep 2014 15:51:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Paul Gibbs\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"Matt: White House Goes On Lockdown After Sneaky Toddler Breaches Fence\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44111\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"http://ma.tt/2014/09/white-house-goes-on-lockdown-after-sneaky-toddler-breaches-fence-the-two-way-npr/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:497:\"<blockquote><p>&#8220;We were going to wait until he learned to talk to question him,&#8221; Secret Service Agent Edwin Donovan said in a statement, &#8220;but in lieu of that he got a timeout and was sent on [his] way with [his] parents.&#8221;</p></blockquote>\n<p>Pretty funny article from <a href=\"http://www.npr.org/blogs/thetwo-way/2014/08/08/338851452/white-house-goes-on-lockdown-after-sneaky-toddler-breaches-fence\">White House Goes On Lockdown After Sneaky Toddler Breaches Fence</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 15 Sep 2014 05:08:46 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Matt: Logical Conclusion of AI\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44108\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"http://ma.tt/2014/09/logical-conclusion-of-ai/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:650:\"<p>There&#8217;s been some great threads going around inspired by the book <a href=\"http://www.amazon.com/dp/B00LOOCGB2/\">Superintelligence: Paths, Dangers, Strategies</a>, including Elon Musk hoping <a href=\"https://twitter.com/elonmusk/status/496012177103663104\">we&#8217;re not just a biological bootloader</a>. Via Automattician <a href=\"http://mattmazur.com/\">Matt Mazur</a> I came across this <a href=\"http://www.amazon.com/review/R3EGMJ28UD35YN/\">fantastic review of the book on Amazon that gives a great counter-balance and lots of additional information you wouldn&#8217;t get from the book itself</a>, and also summarizes it quite well.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 14 Sep 2014 06:59:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"Matt: Minimum Viable Civilization\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44105\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"http://ma.tt/2014/09/minimum-viable-civilization/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:466:\"<p>We&#8217;ve talked about the Fermi Paradox <a href=\"http://ma.tt/2014/07/the-fermi-paradox/\">here</a> and <a href=\"http://ma.tt/2014/08/thegreatfilter/\">here</a> before, my long-time friend David Galbraith, ever the architect, tackles the Fermi Paradox from the <a href=\"http://davidgalbraith.org/uncategorized/minimum-maximum-viable-civilizations/3859/\">point of view of the natural limits of communication in Minimum &#038; Maximum Viable Civilizations</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 13 Sep 2014 04:54:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"WordPress.tv Blog: Designing with WordPress:  Recent WordCamp Presentations for Designers\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://blog.wordpress.tv/?p=388\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"http://blog.wordpress.tv/2014/09/13/designing-with-wordpress-recent-wordcamp-presentations-for-designers/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3570:\"<p>There is no doubt that design is a popular topic at any WordCamp.  From <a href=\"http://wordpress.tv/event/wordcamp-vancouver-2014/\" target=\"_blank\">WordCamp Vancouver</a> and <a href=\"http://wordpress.tv/event/wordcamp-asheville-2014/\" target=\"_blank\">WordCamp Asheville</a> come these great talks on how to level-up your WordPress design skills.</p>\n<h2>Designing for Content</h2>\n<div id=\"v-GlavJHoF-1\" class=\"video-player\">\n</div>\n<p>This talk from David Hickox goes over the method he has created for designing websites from the content outward. His talk covers aspects of designing in code, type choices, line height and typographic scale, creating a proper base style sheet, usability best practices, semantic structure, and more.</p>\n<h2>Responsive web development made easy with CSS and the mobile plugin</h2>\n<div id=\"v-q2CbXT0x-1\" class=\"video-player\">\n</div>\n<p>In this lightning talk, Christine Rondeau offer some tips and tricks to get better looking sites on mobile devices, including how you can use the mobile plugin to get completely different layouts on mobile devices.</p>\n<h2>Designing for Sales and Conversions</h2>\n<div id=\"v-htjkWeqo-1\" class=\"video-player\">\n</div>\n<p>Sarah Benoit shares insights into the latest trends in website usability, searchability and design elements that encourage conversions — purchases, form completions, event registrations, and more. Learn best practices for designing a site with WordPress that both looks great AND converts website visitors into the customers, clients, and potential leads every business needs.</p>\n<h2>Building Better Websites Through Collaboration, Communication, and Consistency</h2>\n<div id=\"v-o9kH1iIK-1\" class=\"video-player\">\n</div>\n<p>In this presentation from WordCamp Asheville, Julien Melissas talks about how perfecting your workflow can help you level up your professionalism, relationships with clients &amp; colleagues, and happiness levels!</p><br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptvblog.wordpress.com/388/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptvblog.wordpress.com/388/\" /></a> <img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=blog.wordpress.tv&blog=5310177&post=388&subd=wptvblog&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://blog.wordpress.tv/2014/09/13/designing-with-wordpress-recent-wordcamp-presentations-for-designers/\"><img alt=\"David Hickox: Designing for Content\" src=\"http://videos.videopress.com/GlavJHoF/video-e1a32c408c_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div><div><a href=\"http://blog.wordpress.tv/2014/09/13/designing-with-wordpress-recent-wordcamp-presentations-for-designers/\"><img alt=\"Christine Rondeau: Responsive web development made easy with CSS and the mobile plugin\" src=\"http://videos.videopress.com/q2CbXT0x/video-5a97567e88_std.original.jpg\" width=\"160\" height=\"120\" /></a></div><div><a href=\"http://blog.wordpress.tv/2014/09/13/designing-with-wordpress-recent-wordcamp-presentations-for-designers/\"><img alt=\"Sarah Benoit: Designing for Sales and Conversions\" src=\"http://videos.videopress.com/htjkWeqo/video-825d890916_scruberthumbnail_1.jpg\" width=\"160\" height=\"120\" /></a></div><div><a href=\"http://blog.wordpress.tv/2014/09/13/designing-with-wordpress-recent-wordcamp-presentations-for-designers/\"><img alt=\"Julien Melissas: Building Better Websites Through Collaboration, Communication, and Consistency\" src=\"http://videos.videopress.com/o9kH1iIK/video-74e0e5cadc_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 13 Sep 2014 00:20:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Jerry Bates\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"WPTavern: Graph Paper Press Launches Theme.Works, A Drag and Drop Platform for Building WordPress Themes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30410\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:113:\"http://wptavern.com/graph-paper-press-launches-theme-works-a-drag-and-drop-platform-for-building-wordpress-themes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5028:\"<p>The folks behind <a href=\"http://graphpaperpress.com/\" target=\"_blank\">Graph Paper Press</a> launched a new custom WordPress theme builder this week. <a href=\"https://theme.works/\" target=\"_blank\">Theme.Works</a> was created to be a new brand, featuring a theme building platform that allows users to build a WordPress theme in under 60 seconds.</p>\n<p><strong>&#8220;We wanted something crazy easy for users to understand and use,&#8221;</strong> founder Thad Allender said. &#8220;Theme.Works inverts the traditional theme creation process: Instead of passively picking a stock template, you get to create a totally custom design for each piece of your website,&#8221; he explained. Users have the option to choose different headers, slideshows, portfolios, blogs, signup forms, contact forms, testimonials, footers, etc, via a drag and drop interface.</p>\n<p>Theme.Works is actually a custom one-page app built with Node,js, Grunt, and PHP. It allows each customer to design his own theme and then download it for $79. Here&#8217;s a quick preview of how it works:</p>\n<p></p>\n<p>Graph Paper Press is one of the oldest WordPress theme shops in business, founded in 2007, so it&#8217;s surprising to see Theme.Works launched as its own brand. I asked Allender why the team didn&#8217;t opt to put the new theme builder under its well-known GPP umbrella.</p>\n<p>&#8220;We wanted to build a new brand around a single idea/product,&#8221; he said. &#8220;Something with a clear value proposition without any distractions.&#8221; Allender also noted that the tech behind the venture is different, given that the builder is a Node.js / PHP app. &#8220;The dashboard (releasing next month) needed a singular focus on building custom designs,&#8221; he explained.</p>\n<p>To celebrate the launch, Theme.Works released a free theme with fullscreen background video and portfolio integration. It includes 10 different page templates and 10 color palettes to choose from, along with dozens of custom fonts. The theme is an example of what can be built using the drag and drop theme builder.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/theme.works-free-wordpress-theme-464x1024.jpg\" rel=\"prettyphoto[30410]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/theme.works-free-wordpress-theme-464x1024.jpg?resize=464%2C1024\" alt=\"theme.works-free-wordpress-theme-464x1024\" class=\"aligncenter size-full wp-image-30516\" /></a></p>\n<p>Check out a <a href=\"https://theme.works/demo/?header=10&portfolio=1&footer=3&toolbar=hide\" target=\"_blank\">live preview</a> of the theme fully customized.</p>\n<p>I downloaded the Theme.Works demo theme and installed it on a test site. I was impressed with some of the options, especially the color palettes and custom fonts.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/theme-colors.jpg\" rel=\"prettyphoto[30410]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/theme-colors.jpg?resize=1010%2C369\" alt=\"theme-colors\" class=\"aligncenter size-full wp-image-30521\" /></a></p>\n<p>Unfortunately, the theme options are divided almost equally between the native customizer on the frontend and the dedicated theme options panel in the admin. I believe this might introduce a point of confusion for users. If they don&#8217;t find the header options in the theme options, they may not know to look for them on the frontend.</p>\n<p>Although I am no stranger to building and customizing WordPress themes, I found it difficult to get the theme looking just like the demo. The experience certainly was not as advertised in the announcement <a href=\"http://graphpaperpress.com/blog/themeworks-wordpress-theme-builder/\" target=\"_blank\">post</a>, which claims:  <em>&#8220;The theme you design is the theme you download, simple as that. No guesswork, no reference manual needed to get your theme up and running. Just activate and start publishing.&#8221;</em> On the contrary, I found there were many options to configure before I could even think about publishing.</p>\n<p>I was also concerned that the portfolio functionality is bundled with the theme. Allender said that they have attempted using a portfolio custom post type in the past but decided to take a different route. &#8220;We did that at GPP and users found it confusing. So instead, we offer users a plugin to migrate CPTs.&#8221; This seems like an extra hassle if you ever want to change your theme.</p>\n<p>However, the end result, as displayed in the Theme.Works live demo, is quite appealing and beautifully designed if you are able to achieve the same look with your content. Theme.Works plans to give away one new free every month, built using the new platform. You can download the free theme directly from <a href=\"https://theme.works/blog/2014/09/welcome/\" target=\"_blank\">Theme.Works</a>. While you&#8217;re there, make sure to test out the new theme building <a href=\"https://theme.works/\" target=\"_blank\">platform</a> and let us know your thoughts.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Sep 2014 23:41:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:91:\"WPTavern: Aesop Story Engine 1.1 Beta Now Available for Testing Ahead of First Major Update\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30470\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"http://wptavern.com/aesop-story-engine-1-1-beta-now-available-for-testing-ahead-of-first-major-update\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4806:\"<p>Aesop Story Engine <a href=\"http://aesopstoryengine.com/updates/ase-1-1-beta/\" target=\"_blank\">1.1. beta</a> is now in the hands of eager testers, as project leader Nick Haskins prepares to launch the first major update to the plugin since its release. Haskin&#8217;s open source storytelling plugin was <a href=\"http://wptavern.com/aesop-wordpress-storytelling-plugin-is-now-fully-funded\" target=\"_blank\">fully funded</a> via a <a href=\"https://aesop.crowdhoster.com/storytelling-engine\" target=\"_blank\">Crowdhoster campaign</a> earlier this year. Shortly thereafter he released it on WordPress.org and <a href=\"http://wptavern.com/aesop-story-engine-launches-commercial-wordpress-themes\" target=\"_blank\">launched a line of commercial themes</a> that showcase the storyengine.</p>\n<p>The plugin&#8217;s 1.1 release represents a major leap forward in terms of usability. &#8220;Our primary focus with this update was to improve usability even further by removing the friction created with generating and editing story components,&#8221; Haskins said. The generator in 1.1 will be completely responsive down to mobile device displays.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/ase-generator.gif\" rel=\"prettyphoto[30470]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/ase-generator.gif?resize=1025%2C632\" alt=\"ase-generator\" class=\"aligncenter size-full wp-image-30472\" /></a></p>\n<p>The story components will have a new interface in version 1.1, which more closely matches the WordPress admin. This version also adds the ability to edit story components in the visual editor. Components are now converted into a placeholder where you can easily edit their attributes. Clicking the pencil icons launches the modal view with the last options you entered.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/ASE-editable-story-components.gif\" rel=\"prettyphoto[30470]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/ASE-editable-story-components.gif?resize=1025%2C659\" alt=\"ASE-editable-story-components\" class=\"aligncenter size-full wp-image-30485\" /></a></p>\n<p>After 1.1 is pushed out Haskins plans to keep hammering away at usability in preparation for launching a hosted solution for Aesop Story Engine. &#8220;After 1.1 goes out, it&#8217;s back to further improving the user interface, making things even easier, and reducing even more friction ahead of revisiting a hosted solution to offer, as the plugin will have matured at that point,&#8221; he said.</p>\n<p>Haskins is steadily and patiently refining the plugin and has set no ETA for the hosted version. His primary focus is on improving the experience of the story engine. &#8220;We really want it to be an incredible experience, more than just &#8216;a skinned WordPress multisite,\'&#8221; he said. &#8220;I&#8217;m watching the JSON API and waiting for more admin type capabilities. Next year would be a better guess at this point for the hosted version,&#8221; Haskins told the Tavern.</p>\n<p>So far the project is experiencing success. &#8220;Sales have been going really, really well. Month after month of growth even with the price of <a href=\"http://aesopstoryengine.com/library/\" target=\"_blank\">themes</a> at $120 each, which subsequently allows for further development,&#8221; Haskins reported. Version 1.1 will introduce the ability for developers to <a href=\"https://github.com/AesopInteractive/sample-addon\" target=\"_blank\">create custom add-ons</a> to tie into the Story Engine, which is likely to bring more products into the ASE marketplace.</p>\n<h3>Aesop Story Engine Finds Momentum in Education</h3>\n<p>The Aesop Story Engine was created to empower WordPress publishers to pursue the art of digital storytelling, but Haskins wasn&#8217;t sure where it would take off when he initially tested the waters to see if there was any interest. While the product seems to be rather niche, it has surprisingly found the most traction in the education sector. &#8220;In terms of demographics, we are seeing a lot of big name universities, and about an equal amount of design firms,&#8221; Haskins said.</p>\n<p>&#8220;The rest of users seem to fall into general writers, publishers, and news organizations, Detroit News being the most recent addition. This inevitably gives us a bit more context when making decisions regarding premium themes and upcoming addons,&#8221; Haskins said. <strong>&#8220;Simply put, the education space is the biggest trend at the moment.&#8221;</strong></p>\n<p>Version 1.1 is projected to launch at the beginning of next week. If you want to get in on testing the beta, check out the post on the ASE blog to <a href=\"http://aesopstoryengine.com/updates/ase-1-1-beta/\" target=\"_blank\">download the zip file</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Sep 2014 19:01:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"WPTavern: Take The Annual WPShout Webhosting Survey\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30460\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"http://wptavern.com/take-the-annual-wpshout-webhosting-survey\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2066:\"<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/WPShoutWebhostingSurveyFeaturedImage.png\" rel=\"prettyphoto[30460]\"><img class=\"size-full wp-image-30463\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/WPShoutWebhostingSurveyFeaturedImage.png?resize=635%2C265\" alt=\"WPShout Webhosting Survey Featured Image\" /></a>photo credit: <a href=\"https://www.flickr.com/photos/henryfaber/230444653/\">hfabulous</a> &#8211; <a href=\"http://creativecommons.org/licenses/by-nc/2.0/\">cc</a>\n<p><a title=\"http://wptavern.com/wpshout-releases-results-of-their-webhosting-survey\" href=\"http://wptavern.com/wpshout-releases-results-of-their-webhosting-survey\">Since 2011</a>, WPShout has conducted a comprehensive, non-biased, webhosting survey. Although the site has changed hands, Fred Meyer and David Hayes are continuing the tradition and the survey questions are <a title=\"http://wpshout.com/announcing-2014-wordpress-hosting-review/\" href=\"http://wpshout.com/announcing-2014-wordpress-hosting-review/\">ready to fill out</a>. There are four required questions with no identifiable information required to submit your answers. The survey is aimed at figuring out the following information:</p>\n<ul class=\"clearfix\">\n<li>Reliability</li>\n<li>Speed</li>\n<li>Usability</li>\n<li>Support</li>\n<li>Value</li>\n<li>WordPress compatibility</li>\n</ul>\n<p>The data will be collected, collated, and openly shared to the community for individual analysis. In 2013, 214 people participated in the survey. The goal for 2015, is 500. Most users who run a self-hosted WordPress site also have a webhosting account. This is a chance to share your experience with that company for the benefit of others.</p>\n<p>It&#8217;s hard to find good information about webhosting companies without running into reviews filled with affiliate links. If you have a few minutes to spare, please <a title=\"http://wpshout.com/announcing-2014-wordpress-hosting-review/\" href=\"http://wpshout.com/announcing-2014-wordpress-hosting-review/\">take the survey</a> and help spread the word.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Sep 2014 06:51:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"WPTavern: WP Couch Mode Gives Readers an Option to Read Content Without Distractions\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30445\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"http://wptavern.com/wp-couch-mode-gives-readers-an-option-to-read-content-without-distractions\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3076:\"<p>If you operate a content heavy website and want an easy way to give readers an option to read content without distractions, now you can with the <a title=\"https://wordpress.org/plugins/wp-couch-mode/\" href=\"https://wordpress.org/plugins/wp-couch-mode/\">WP Couch Mode</a> plugin. Developed by Ritesh Vatwani, WP Couch Mode adds a customizable link to content. When clicked, a lightbox appears displaying only the content of the post. Within the lightbox, you can increase the font size, make it full-screen, or print the article.</p>\n<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/WPCouchModeSettings.png\" rel=\"prettyphoto[30445]\"><img class=\"size-full wp-image-30447\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/WPCouchModeSettings.png?resize=685%2C568\" alt=\"Configuration Settings For WP Couch Mode\" /></a>Configuration Settings For WP Couch Mode\n<p>&nbsp;</p>\n<p>The plugin provides options to add the link before or after the content. You can edit the display text of the link and there&#8217;s a shortcode available if you need more control. Here&#8217;s what it looks like on the desktop view.</p>\n<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/DesktopViewOfWPCouchMode.png\" rel=\"prettyphoto[30445]\"><img class=\"size-full wp-image-30454\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/DesktopViewOfWPCouchMode.png?resize=1025%2C452\" alt=\"Desktop View Of WP Couch Mode\" /></a>Desktop View Of WP Couch Mode\n<p>One of the first things you&#8217;ll notice is that the images are large. When viewed on a desktop, the images are displayed at full size. On a mobile device, the images are smaller to account for screen size. Something that will need to be addressed in the next version is the poor handling of featured images. For some reason, WP Couch Mode takes a very small version of a featured image and blows it up. This causes featured images to look terrible on mobile devices. I think it would be better to not show the featured image and instead, only show images attached to the post.</p>\n<p>When I accessed Couch Mode on my iPhone 5s in portrait mode, the X in the top right corner is cut off making it difficult to close the window. In order to access the close button, I put my phone into landscape mode. Alternatively, if enabled, I can tap the button to shrink/expand the lightbox as a work around. This is what the content looks like on my phone.</p>\n<a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/image1.jpg\" rel=\"prettyphoto[30445]\"><img class=\"size-full wp-image-30449\" src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/image1.jpg?resize=640%2C1136\" alt=\"Portrait View Shows The X Cutoff\" /></a>Portrait View Shows The X Cutoff\n<p>&nbsp;</p>\n<p>I doubt this plugin will be installed and used on sites that make a living through display advertisements. It&#8217;s like providing readers an ad-blocker tailored to the site. Overall, the plugin works as advertised. The lightbox needs some work but other than that, it gets rid of all the distractions.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Sep 2014 05:53:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"WPTavern: Build Stories Using Multimedia With The Storyteller WordPress Theme\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30174\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"http://wptavern.com/build-stories-using-multimedia-with-the-storyteller-wordpress-theme\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4061:\"<p>Storyteller is an interesting concept by <a href=\"http://www.katharinabrunner.de\">Katharina Brunner</a>. It&#8217;s a <a title=\"http://www.github.com/cutterkom/storyteller\" href=\"http://www.github.com/cutterkom/storyteller\">WordPress theme</a> that when combined with the <a title=\"http://wordpress.org/plugins/addquicktag/\" href=\"http://wordpress.org/plugins/addquicktag/\">AddQuickTags plugin</a>, provides the ability to build multimedia stories.</p>\n<p>Once activated, you&#8217;ll need to import a <a title=\"http://storyteller.katharinabrunner.de/static/addquicktag-storyteller.json\" href=\"http://storyteller.katharinabrunner.de/static/addquicktag-storyteller.json\">special JSON file</a> into AddQuickTags. This file automatically adds alignment code to the Storyteller specific quicktags making it easy to align the title and content of a slide.</p>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/QuickTagsAlignmentCode.png\" rel=\"prettyphoto[30174]\"><img class=\"size-full wp-image-30435\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/QuickTagsAlignmentCode.png?resize=770%2C680\" alt=\"Alignment Code Added To Quicktags\" /></a>Alignment Code Added To Quicktags\n<p>The theme works best when used on a fresh install of WordPress. This is because it changes a couple of key components in the backend for the purpose of Storyteller.</p>\n<ul>\n<li>Posts &gt; Slides</li>\n<li>Categories &gt; Stories</li>\n<li>Add Post &gt; Add Slide</li>\n</ul>\n<p>To see Storyteller in action, check out the following <a title=\"http://storyteller.katharinabrunner.de/demo\" href=\"http://storyteller.katharinabrunner.de/demo\">demo page</a>. Images take up the entire view of the screen. The slide title and text are displayed above the image and are located on the page based on which quicktag is selected. Two arrows on the bottom right of the screen act as pagination to navigate between slides. Storyteller is a responsive theme that will resize the content based on the size of the screen. Slides are not limited to just images, you can use videos as well. It uses <a href=\"http://srobbin.com/blog/jquery-plugins/jquery-backstretch/\" target=\"blank\">Backstretch.js</a> and <a href=\"http://www.fitvidsjs.com\" target=\"blank\">FitVids.js</a> to create full screen images and videos.</p>\n<p>Storyteller has one option to configure where you can select between four different fonts. The option is located in an Options top-level menu. There&#8217;s no reason why one option deserves its own top-level menu. I&#8217;d like to see it moved underneath the Settings menu and renamed to Storyteller. Options is confusing and at a glance, doesn&#8217;t seem like it&#8217;s connected to Storyteller.</p>\n<a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/StorytellerOptions.png\" rel=\"prettyphoto[30174]\"><img class=\"size-full wp-image-30436\" src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/StorytellerOptions.png?resize=561%2C469\" alt=\"Storyteller Options\" /></a>Storyteller Options\n<p>&nbsp;</p>\n<p>I had hard time getting used to Slides replacing Posts and Stories replacing Categories. It creates a new workflow that takes time to get used to. The demo page highlights the potential of Storyteller but because it&#8217;s best suited for a fresh install of WordPress, it limits the amount of scenarios it can be used in. During testing, I used it on an existing WordPress site with a lot of content and it was a mess.</p>\n<p>Storyteller is in its infancy as a product and I have no doubt that Brunner will continue to improve the theme as more users discover it. The items she has on the to-do list include:</p>\n<ul class=\"task-list\">\n<li>Option for individual width for text</li>\n<li>Write a FAQ/docs</li>\n<li>Sharing options</li>\n<li>Option to scroll rather than click</li>\n<li>Better video integration</li>\n</ul>\n<p>Brunner encourages users to give feedback and report bugs to the theme&#8217;s <a title=\"http://www.github.com/cutterkom/storyteller\" href=\"http://www.github.com/cutterkom/storyteller\">Github page</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 12 Sep 2014 02:10:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"WPTavern: Add WordPress Coding Standards to NetBeans\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30392\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wptavern.com/add-wordpress-coding-standards-to-netbeans\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3047:\"<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/wp-netbeans.jpg\" rel=\"prettyphoto[30392]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/wp-netbeans.jpg?resize=920%2C440\" alt=\"wp-netbeans\" class=\"aligncenter size-full wp-image-30430\" /></a></p>\n<p>The open source <a href=\"https://netbeans.org/\" target=\"_blank\">NetBeans</a> IDE has support for several different languages and frameworks and a worldwide community of developers who depend on it to code more efficiently. A recent <a href=\"http://www.sitepoint.com/best-php-ide-2014-survey-results/\" target=\"_blank\">survey</a> conducted by SitePoint placed NetBeans as the third most favored IDE among PHP developers, capturing 15.6% of the votes, trailing not far behind Sublime Text at 18.5%. PhpStorm locked up nearly 40% of those surveyed and recently <a href=\"http://wptavern.com/phpstorm-8-to-add-official-support-for-wordpress\" target=\"_blank\">added official support for WordPress</a>.</p>\n<p>WordPress developers who favor NetBeans as their IDE of choice can install a set of preferences that will help make their development environments a little more WordPress-friendly. Inspired by the <a href=\"https://github.com/mrjxn/NetBeans-Settings-For-Laravel4\" target=\"_blank\">NetBeans Settings for Laravel 4</a>, PHP developer <a href=\"http://leon.rowland.nl/\" target=\"_blank\">Leon Rowland</a> decided to create <a href=\"https://github.com/zogot/NetBeans-WordPress-Coding-Standards\" target=\"_blank\">NetBeans WordPress Coding Standards</a>. It adds all the necessary settings for having your projects follow <a href=\"http://make.wordpress.org/core/handbook/coding-standards/\" target=\"_blank\">WordPress Coding Standards</a>.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/netbeans-wordpress-coding-standards.png\" rel=\"prettyphoto[30392]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/netbeans-wordpress-coding-standards.png?resize=1025%2C783\" alt=\"netbeans-wordpress-coding-standards\" class=\"aligncenter size-full wp-image-30412\" /></a></p>\n<p>Rowland created the settings separately, because NetBeans doesn&#8217;t yet support a proper export of sub categories (PHP, JavaScript, etc). To use it, simply download the zip file from GitHub and import it at <strong>Netbeans > Preferences</strong>. Your NetBeans setup will now correctly get the PHP, JavaScript, and CSS Coding Standards as defined in the WordPress Handbook.</p>\n<p>Rowland notes one small exception in the formatting &#8211; it doesn&#8217;t correctly account for spaces before JavaScript variables inside callbacks but not functions. Overall, the <a href=\"https://github.com/zogot/NetBeans-WordPress-Coding-Standards\" target=\"_blank\">settings pack</a> puts WordPress developers in a good place for using NetBeans while following the project&#8217;s official coding standards. It&#8217;s inspiring to see more WordPress tools and support availalbe for the most popular PHP IDEs. Any NetBeans fans have more WordPress-related tools to share?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Sep 2014 21:57:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:74:\"WPTavern: Jeff Starr Releases New 450 Page Book: WordPress Themes In Depth\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30110\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:83:\"http://wptavern.com/jeff-starr-releases-new-450-page-book-wordpress-themes-in-depth\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2417:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/WPThemesInDepthFeaturedImage.png\" rel=\"prettyphoto[30110]\"><img class=\"aligncenter size-full wp-image-30398\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/WPThemesInDepthFeaturedImage.png?resize=656%2C196\" alt=\"WordPress Themes In Depth Featured Image\" /></a></p>\n<p>Jeff Starr, a contributing author to <a title=\"http://digwp.com/\" href=\"http://digwp.com/\">DigWP.com,</a> has put the finishing touches on his brand new book, <a title=\"http://wp-tao.com/wordpress-themes-book/\" href=\"http://wp-tao.com/wordpress-themes-book/\">WordPress Themes In Depth</a>. It&#8217;s 450 pages of focused information on WordPress theme development. It&#8217;s in PDF format and has support for widescreen monitors and mobile devices. Some of the topics covered include:</p>\n<ul>\n<li>Setting up for theme development</li>\n<li>WordPress theme fundamentals</li>\n<li>Theme anatomy and the WP Theme Template</li>\n<li>In-depth coverage of the WordPress Loop</li>\n<li>Complete chapter on customizing themes</li>\n<li>Theme development according to the WP API</li>\n<li>Security, optimization &amp; testing</li>\n<li>Front-end techniques</li>\n</ul>\n<p>The book comes with access to five themes and 20 demos. One of the themes is 2020, a full-featured premium theme. The bundled demos are plug-n-play examples of techniques covered in the book. A <a title=\"http://wp-tao.com/WordPress-Themes-In-Depth_DEMO.pdf\" href=\"http://wp-tao.com/WordPress-Themes-In-Depth_DEMO.pdf\">preview </a>of WordPress Themes In Depth is available in PDF format and gives readers a chance to see how the information is presented.</p>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/WPThemesInDepthScreenshot.png\" rel=\"prettyphoto[30110]\"><img class=\"size-full wp-image-30395\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/WPThemesInDepthScreenshot.png?resize=871%2C653\" alt=\"A Sample Page Of WordPress Themes In Depth\" /></a>A Sample Page Of WordPress Themes In Depth\n<p>WordPress Themes In Depth is available through <a title=\"http://wp-tao.com/store/?item=15\" href=\"http://wp-tao.com/store/?item=15\">Perishable Press</a> for $40 however, using the coupon code <strong>DIGWP</strong> will save you $10. If you&#8217;re looking for a great resource to learn how to develop themes for WordPress, consider adding this book to your digital library.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Sep 2014 21:04:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"Matt: Long-term Asia-Pacific Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44075\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"http://ma.tt/2014/09/long-term-asia-pacificsecurity/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:723:\"<blockquote><p>As reported by the Boston Globe, four-star Admiral Samuel Locklear, Commander of U.S. Pacific Command, provided an “unexpected answer” when recently asked “what is the biggest long-term security threat in the Pacific region?”\n</p></blockquote>\n<p>I usually don&#8217;t do this, but <a href=\"http://climateandsecurity.org/2013/03/12/admiral-locklear-climate-change-the-biggest-long-term-security-threat-in-the-pacific-region/\">check out the link to see what the United States Navy admiral who currently serves as the commander of the U.S. Pacific Command said</a>. <cite>Hat tip: <a href=\"http://grist.org/cities/screwed-by-climate-change-10-cities-that-will-be-hardest-hit/\">Jim Meyer</a>.</cite></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Sep 2014 20:56:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"WPTavern: Freefolio: A Free Responsive Portfolio Plugin for WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30364\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"http://wptavern.com/freefolio-a-free-responsive-portfolio-plugin-for-wordpress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4467:\"<p>When creating a portfolio with WordPress, the most ideal way to store your work is in a separate plugin. Later down the road when you want to change your theme, you&#8217;ll be able to do so without losing your portfolio content. Many theme authors are now starting to build support for existing portfolio plugins into their themes, offering styles for the plugin&#8217;s output to make the content seamless with the overall design.</p>\n<p>That&#8217;s exactly what <a href=\"https://upthemes.com/\" target=\"_blank\">UpThemes</a> is doing with its new <a href=\"http://wordpress.org/plugins/freefolio/\" target=\"_blank\">Freefolio</a> plugin, which debuted a couple weeks ago on WordPress.org. The plugin was created to work hand-in-hand with the shop&#8217;s new <a href=\"https://upthemes.com/themes/creative/\" target=\"_blank\">Creative</a> theme, but also drops nicely into any other WordPress theme to add responsive portfolio functionality.</p>\n<p>After activating the plugin, you visit the <strong>General > Writing</strong> settings to enable the Portfolio Projects option. This activates a new admin menu for adding portfolio content:</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/portfolio-projects.jpg\" rel=\"prettyphoto[30364]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/portfolio-projects.jpg?resize=1025%2C462\" alt=\"portfolio-projects\" class=\"aligncenter size-full wp-image-30375\" /></a></p>\n<p>Here&#8217;s an example of the plugin in use with the <a href=\"http://wordpress.org/themes/twentyten\" target=\"_blank\">Twenty Ten</a> theme:</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/freefolio-twentyten.png\" rel=\"prettyphoto[30364]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/freefolio-twentyten.png?resize=1025%2C641\" alt=\"freefolio-twentyten\" class=\"aligncenter size-full wp-image-30377\" /></a></p>\n<p>Freefolio is unique in that it offers a <a href=\"https://dribbble.com/\" target=\"_blank\">Dribbble</a> import for designers who want to showcase their shots in WordPress. You&#8217;ll find the importer under the tools menu and only need to enter your Dribbble username to pull your content into your site:</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/dribbble-import.png\" rel=\"prettyphoto[30364]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/dribbble-import.png?resize=1025%2C329\" alt=\"dribbble-import\" class=\"aligncenter size-full wp-image-30379\" /></a></p>\n<p>Once your works are imported, you can edit, delete, and curate your shots with the project type taxonomy (works like categories) and project tag taxonomy (works like tags). All portfolio items can be displayed in a responsive grid via the <code>[portfolio]</code> shortcode, which is highly configurable with the following options:</p>\n<ul>\n<li>display_types: display Project Types. (true/false)</li>\n<li>display_tags: display Project Tags. (true/false)</li>\n<li>display_content: display project content. (true/false)</li>\n<li>include_type: display specific Project Types. Defaults to all. (comma-separated list of Project Type slugs)</li>\n<li>include_tag: display specific Project Tags. Defaults to all. (comma-separated list of Project Tag slugs)</li>\n<li>columns: number of columns in shortcode. Defaults to 2. (number, 1-6)</li>\n<li>showposts: number of projects to display. Defaults to all. (number)</li>\n</ul>\n<p>Freefolio is compatible with the <a href=\"http://wptavern.com/jetpack-rebrands-with-new-logo-adds-custom-post-types-in-3-1-release\" target=\"_blank\">Jetpack Portfolio post type</a> and was, in fact, based in part on that code. The plugin also credits <a href=\"http://www.tammyhartdesigns.com/\" target=\"_blank\">Tammy Hart</a> for her <a href=\"http://zurb.com/forrst/posts/Dribbble_to_WordPress-wZv\" target=\"_blank\">Dribbble -> WordPress</a> code as well as the folks at array.is for <a href=\"https://array.is/articles/designer/#install-array-portfolio\" target=\"_blank\">Jetpack Portfolio Polyfill</a>, which was adapted for use in Freefolio.</p>\n<p>In the future, UpThemes plan to add a portfolio widget for showcasing recent items, and the development team is open to additional feedback on how Freefolio could be better. The plugin works with any theme but may require a few CSS tweaks to look perfect with yours. <a href=\"http://wordpress.org/plugins/freefolio/\" target=\"_blank\">Download</a> it for free from WordPress.org.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Sep 2014 18:47:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"WPTavern: WPWeekly Episode 162 – Lead Developer of iThemes Security, Chris Wiegman\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"http://wptavern.com?p=30359&preview_id=30359\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"http://wptavern.com/wpweekly-episode-162-lead-developer-of-ithemes-security-chris-wiegman\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3966:\"<p><a title=\"http://marcuscouch.com/\" href=\"http://marcuscouch.com/\">Marcus Couch</a> and I are joined by the lead developer of iThemes Security, <a title=\"http://www.chriswiegman.com/\" href=\"http://www.chriswiegman.com/\">Chris Wiegman</a>. After helping us dissect the news of the week, he tells the story of how he got involved with WordPress. We learn about the circumstances that lead to the creation of iThemes Security and how he almost sold the plugin to a different company. He explains how the <a title=\"http://wptavern.com/ithemes-security-now-has-brute-force-login-protection\" href=\"http://wptavern.com/ithemes-security-now-has-brute-force-login-protection\">Brute Force Login Protection</a> feature added to the latest version of iThemes Security works and the difference between local and network wide protection. Last but not least, we explore the idea of how it could turn into the Jetpack of WordPress Security plugins.</p>\n<h2>Stories Discussed:</h2>\n<p><a title=\"http://wptavern.com/wordpress-4-0-benny-now-available-for-download\" href=\"http://wptavern.com/wordpress-4-0-benny-now-available-for-download\">WordPress 4.0 &#8216;Benny&#8217; Released</a><br />\n<a title=\"http://wptavern.com/what-happens-when-wordpress-is-updated-with-100-plugins-activated\" href=\"http://wptavern.com/what-happens-when-wordpress-is-updated-with-100-plugins-activated\">What Happens When WordPress Is Updated With 100 Plugins Activated?</a><br />\n<a title=\"http://wptavern.com/flywheel-hosting-secures-1-2m-in-funding\" href=\"http://wptavern.com/flywheel-hosting-secures-1-2m-in-funding\">Flywheel Hosting Secures $1.2M In Funding</a><br />\n<a title=\"http://wptavern.com/wordpress-theme-review-team-to-launch-mentoring-program\" href=\"http://wptavern.com/wordpress-theme-review-team-to-launch-mentoring-program\">WordPress Theme Review Team to Launch Mentoring Program </a></p>\n<h2>Plugins Picked By Marcus:</h2>\n<p><a title=\"http://wordpress.org/plugins/google-drive-media-library/\" href=\"http://wordpress.org/plugins/google-drive-media-library/\">Google Drive Media Library</a> is a plugin that connects your Google Drive account to your WordPress media library. This allows you to use Google Drive to store your photos, documents and videos on your site. This is a great solution if you are frequently receiving files from clients you don’t want to have access to the backend of WordPress.</p>\n<p><a title=\"http://wordpress.org/plugins/speech-bubble/\" href=\"http://wordpress.org/plugins/speech-bubble/\">Speech Bubble</a> is a fun way to document a quote or conversation within a blog post. It’s shortcode driven and presents a conversational display similar to texting or Skype chats. There are 9 different conversation bubble styles and you can mix and match styles in posts.</p>\n<p><a title=\"http://wordpress.org/plugins/wp-couch-mode/\" href=\"http://wordpress.org/plugins/wp-couch-mode/\">WP Couch Mode</a> is a handy plugin that provides a clean reading layout at the tap of a button. Much like reader mode in the Safari browser, the content takes on the look and feel of a <em>print mode</em> style removing the distractions of sidebars, widgets, site graphics or ads. It also has a handy print button, doubling as a <em>print ready</em> post plugin.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, September 24th 11 P.M. Eastern with Andrea Middleton of WordCamp Central</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href=\"http://www.wptavern.com/feed/podcast\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\" target=\"_blank\">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #162:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Sep 2014 06:50:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"Matt: Hip Hop is not down with Monsanto\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44078\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"http://ma.tt/2014/09/hip-hop-is-not-down-withmonsanto/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:160:\"<p>Brentin Mock from Grist looks for evidence that <a href=\"http://grist.org/food/hip-hop-is-not-down-with-monsanto/\">Hip Hop is not down with Monsanto</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 22:25:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"WPTavern: Edin: A Beautiful Free Business Theme for WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=27519\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"http://wptavern.com/edin-a-beautiful-free-business-theme-for-wordpress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4276:\"<p>A month ago, WordPress.com released a new business theme that features support for its new <a href=\"http://wptavern.com/wordpress-com-moves-to-standardize-theme-support-for-logos\" target=\"_blank\">site logo feature</a>. The <a href=\"http://theme.wordpress.com/themes/edin/\" target=\"_blank\">Edin</a> theme was an instant hit with its users and is now available for use on self-hosted WordPress sites.</p>\n<p>The theme was designed by <a href=\"http://thomasguillot.com/\" target=\"_blank\">Thomas Guillot</a> to create a strong brand and online presence for any business or corporation. The front page template offers three optional featured page areas and three optional widget areas. The big leading image is set by adding a featured image to the page that you assign to be the frontpage.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/07/edin.jpg\" rel=\"prettyphoto[27519]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/07/edin.jpg?resize=1025%2C1558\" alt=\"edin\" class=\"aligncenter size-full wp-image-27535\" /></a></p>\n<p>Edin comes packaged with four custom page templates for a greater level of flexibility in creating your business website:</p>\n<ul>\n<li><a href=\"http://edindemo.wordpress.com/\" target=\"_blank\">Front Page Template</a></li>\n<li><a href=\"http://edindemo.wordpress.com/page-templates/full-width-page/\" target=\"_blank\">Full Width Page Template</a></li>\n<li><a href=\"http://edindemo.wordpress.com/page-templates/grid-page/\" target=\"_blank\">Grid Page Template</a></li>\n<li><a href=\"http://edindemo.wordpress.com/page-templates/alternate-sidebar-page/\" target=\"_blank\">Alternate Sidebar Page Template</a></li>\n</ul>\n<p>Here&#8217;s an example of the grid page template:</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/edin-grid-page.jpg\" rel=\"prettyphoto[27519]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/edin-grid-page.jpg?resize=660%2C781\" alt=\"edin-grid-page\" class=\"aligncenter size-full wp-image-30333\" /></a></p>\n<p>Edin offers support for three navigation menus:</p>\n<ul>\n<li>Primary: The default menu pops into display from a hamburger icon but the customizer also includes an alternative classic &#8220;classic&#8221; menu which displays under the site title</li>\n<li>Secondary: Displays top-level quick links above the site title</li>\n<li>Footer: Displays top-level links and/or social links</li>\n</ul>\n<p>Edin is fully responsive, maintaining its beautiful design and function as it responds to the varying displays of desktop and mobile devices. That means that mobile visitors to your business site will receive the same great experience as those using desktops.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/edin-responsive.jpg\" rel=\"prettyphoto[27519]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/edin-responsive.jpg?resize=660%2C262\" alt=\"edin-responsive\" class=\"aligncenter size-full wp-image-30330\" /></a></p>\n<p>Edin includes several options built into the customizer, including the ability to set the sidebar position (left or right), designate the thumbnail aspect ratio (4:3 or 1:1), customize header text and background color, assign a header image, show or hide the search bar, and more. The theme also adds support for post formats with minimal icons assigned for each format.</p>\n<p>Check out a <a href=\"http://edindemo.wordpress.com/\" target=\"_blank\">live demo</a> of Edin on WordPress.com and make sure to navigate through the theme&#8217;s different <a href=\"http://edindemo.wordpress.com/page-templates/\" target=\"_blank\">page templates</a>.</p>\n<p>The self-hosted version of the Edin theme does not contain the site logo feature, but the<a href=\"https://twitter.com/kwight/status/492204961619398656\" target=\"_blank\"> Jetpack team is considering adding site logos</a> to the plugin in the future.</p>\n<p>If your business website is in need of a fresh look, Edin is a high quality, professionally-supported theme with a good deal of flexibility built in. All of the different options ensure that each customization of the theme will be unique. <a href=\"http://wordpress.org/themes/edin\" target=\"_blank\">Download</a> it for free from WordPress.org or via the theme browser panel in the admin.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 21:02:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"WPTavern: Take the 2014 WordPress User and Developer Survey\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30296\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"http://wptavern.com/take-the-2014-wordpress-user-and-developer-survey\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2320:\"<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/wcsf.jpg\" rel=\"prettyphoto[30296]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/wcsf.jpg?resize=956%2C436\" alt=\"photo credit: WordCamp San Francisco 2013 - ma.tt\" class=\"size-full wp-image-30310\" /></a>photo credit: WordCamp San Francisco 2013 &#8211; <a href=\"http://ma.tt/2013/07/wordcamp-san-francisco-2013/wordcamp-san-francisco-crowd/\">ma.tt</a>\n<p>The <a href=\"http://wp-survey.polldaddy.com/s/wp-2014\" target=\"_blank\">WordPress 2014 survey</a> is now available. Anyone who uses WordPress in any capacity is encouraged to take this short survey to help improve the project. The questions take approximately five minutes to complete and participation is anonymized. WordPress does not collect your email address or IP address, so feel free to offer your sincere feedback.</p>\n<p>The survey asks how you use WordPress and helps the project learn more about how the community uses the software to power their websites. The feedback that you supply will help the core team make decisions for the coming year.</p>\n<p>Results of the survey will be shared at WordCamp San Francisco during the State of the Word address in October. Tickets for the event are <a href=\"http://2014.sf.wordcamp.org/tickets/\" target=\"_blank\">on sale now</a> if you want to be in attendance to hear the results live.</p>\n<p>Last year, 30,000 people in 178 countries took the survey. <a href=\"http://www.bourncreative.com/2013-state-of-the-word-matt-mullenweg/\" target=\"_blank\">Results</a> revealed that 69% of those surveyed use WordPress as primarily as a CMS; 20% use it as a blog/CMS combo; 6% for blogging only; and 7% as an application platform. Mobile usage data from the survey showed that 30-31% are using WordPress on iOS or Android devices.</p>\n<p>Around this time last year, 18.9% of the web was powered by WordPress. That percentage has shot up this year to more than <a href=\"http://w3techs.com/technologies/overview/content_management/all\" target=\"_blank\">23%</a>.</p>\n<p>We&#8217;ll be reporting live from <a href=\"http://2014.sf.wordcamp.org/\" target=\"_blank\">WordCamp San Francisco</a> to bring you all the latest data about WordPress users around the world. Any predictions for a change in CMS vs blog usage and mobile usage for 2014?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 18:29:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:30;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"Post Status: Your website is not allowed to be fast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://www.poststat.us/?p=7118\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://www.poststat.us/website-fast-nope/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3035:\"<p><img class=\"aligncenter size-large wp-image-7120\" src=\"http://www.poststat.us/wp-content/uploads/2014/09/net-neutraility-752x334.jpg\" alt=\"net-neutraility\" width=\"627\" height=\"278\" /></p>\n<p>There could quite realistically be a day that your blog or website is not allowed to be fast. Not because you didn&#8217;t do proper performance testing and optimization, but because a corporatocracy won&#8217;t allow it.</p>\n<p>And your website is small potatoes that they don&#8217;t care about. You simply don&#8217;t have enough money for them to bother enabling you to deliver your website at high speeds to potential readers.</p>\n<p>Net neutrality is a horribly boring term to describe the seriousness of the issue at hand. Thankfully, comedian John Oliver explains net neutrality in a way that makes it significantly more entertaining and easy to understand:</p>\n<p></p>\n<p>As Oliver notes, and the website <a href=\"https://www.battleforthenet.com/\">Battle for the Net</a> describes, this is incredibly important but also quite difficult to understand. The issue primarily affects the US but by default will impact the entire web and therefore the world around us. The democratization of the web (a core priority for WordPress itself) is at risk.</p>\n<p>This is why WordPress, Netflix, and a whole <a href=\"https://www.battleforthenet.com/#team-internet\">slew of other websites</a> are taking part in a protest today. I complained this morning that I didn&#8217;t think poor UX (via popups and distractions on websites) were the best way to educate, but rather a day to write blog posts about the issue would be better. So here I am. This issue is important to me, my career, and you too &#8212; whether you know it or not.</p>\n<p>The web is an amazing place with a level of publishing accessibility &#8212; no matter how little money a publisher (<a href=\"http://www.slideshare.net/krogsgard/why-we-publish-wordcamp-birmingham-2014wordcamp-birminghamwhywepublish2014\">you&#8217;re a publisher</a>) has &#8212; that has never before existed in the world.</p>\n<p>Don&#8217;t let your internet plan become this:</p>\n<p><img class=\"aligncenter size-large wp-image-7119\" src=\"http://www.poststat.us/wp-content/uploads/2014/09/upgrade-your-internet-752x464.jpg\" alt=\"upgrade-your-internet\" width=\"627\" height=\"386\" /></p>\n<p>This issue is much more up in the air than you may think; lawmakers (amazingly) can still be swayed. So do your duty and contact your lawmaker today. Let them know that you value an open internet and you support net neutrality. Sign the <a href=\"https://www.battleforthenet.com/\">petition on the Battle for the Net website</a>.</p>\n<p>Even more importantly, educate your friends and family about the importance of an open internet &#8212; an internet where the barrier to entry is low and citizen journalists, bloggers, and anyone that has a message can share that message and potentially impact the entire world.</p>\n<p>Support net neutrality. It makes the internet and our world just a little bit better.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 14:32:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Brian Krogsgard\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:31;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"Lorelle on WP: What is Your Favorite Article on Lorelle on WordPress?\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"http://lorelle.wordpress.com/?p=11871\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:91:\"http://lorelle.wordpress.com/2014/09/10/what-is-your-favorite-lorelle-on-wordpress-article/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:499:\"I&#8217;ve been asked to put together a best-of collection of Lorelle on WordPress articles in an ebook. Do you have a favorite? I&#8217;m looking for articles that you&#8217;ve bookmarked and returned back to over the years to help you with WordPress and blogging, or articles that helped you understand and embrace a WordPress or blogging [&#8230;]<img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=lorelle.wordpress.com&blog=72&post=11871&subd=lorelle&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 11:31:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Lorelle VanFossen\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:32;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:88:\"WPTavern: Join the September 10th Internet Slowdown Protest with These WordPress Plugins\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30202\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"http://wptavern.com/join-the-september-10th-internet-slowdown-protest-with-these-wordpress-plugins\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3394:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/battle-for-the-net.jpg\" rel=\"prettyphoto[30202]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/battle-for-the-net.jpg?resize=700%2C340\" alt=\"battle-for-the-net\" class=\"aligncenter size-full wp-image-30284\" /></a></p>\n<p>Today, those who support internet freedom are simulating serving pages at a snail&#8217;s pace, in protest of internet service providers that are currently spending millions of dollars lobbying for the FCC’s proposed rules which essentially eviscerate net neutrality.</p>\n<p><a href=\"http://en.blog.wordpress.com/2014/09/09/fight-for-net-neutrality/\" target=\"_blank\">WordPress.com</a> joins 150 other major tech companies, including Netflix, Mozilla, Kickstarter, Tumblr, Reddit, Dropbox and Etsy, in the <a href=\"https://www.battleforthenet.com/sept10th/\" target=\"_blank\">September 10th Internet Slowdown protest</a>. The campaign features a loading icon and urges visitors to demand that lawmakers defend net neutrality.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/internet-slowdown.gif\" rel=\"prettyphoto[30202]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/internet-slowdown.gif?resize=500%2C289\" alt=\"internet-slowdown\" class=\"aligncenter size-full wp-image-30268\" /></a></p>\n<p>The FCC&#8217;s proposed changes would allow ISPs to charge a premium for putting companies in the &#8220;fast lane.&#8221; Smaller companies and startups without resources to pay the ISP tolls would be relegated to a &#8220;slow lane,&#8221; which would be an all-around bad experience for internet users.</p>\n<p>WordPress.com users who want to participate in the protest have the option to activate the new &#8220;<a href=\"http://en.blog.wordpress.com/2014/09/09/fight-for-net-neutrality/\" target=\"_blank\">Fight for Net Neutrality</a>&#8221; plugin available under the Settings menu.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/settingsmenu.jpg\" rel=\"prettyphoto[30202]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/settingsmenu.jpg?resize=600%2C356\" alt=\"settingsmenu\" class=\"aligncenter size-full wp-image-30271\" /></a></p>\n<p>The plugin replaces a few posts on WordPress.com websites with a &#8220;Still Loading&#8221; spinner that simulates what the internet will be like if cable companies have their way.</p>\n<p>Self-hosted WordPress sites can participate in the protest by adding the <a href=\"https://wordpress.org/plugins/cat-signal/\" target=\"_blank\">Internet Defense League Cat Signal</a> plugin. It picks up on any active campaigns from the <a href=\"http://internetdefenseleague.org/\" target=\"_blank\">Internet Defense League</a> and will only be active on your site during those times. You can test the plugin ahead of the next campaign by adding ?_idl_test=1 to your domain.</p>\n<p>Big companies like Comcast, Verizon, Time Warner Cable, and AT&amp;T have millions of dollars to throw at lawmakers in hopes of slowing down the internet for every company that doesn&#8217;t pay up. What they don&#8217;t have is the power of your voice to influence your site&#8217;s visitors to call upon lawmakers. Now is your chance to speak up in defense of net neutrality and make a difference for the future of the internet. If you run a WordPress site, it&#8217;s as easy as adding a plugin.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 05:13:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:33;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"WPTavern: iThemes Security Now Has Brute Force Login Protection\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30185\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wptavern.com/ithemes-security-now-has-brute-force-login-protection\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5642:\"<p>iThemes <a title=\"http://ithemes.com/2014/09/09/combat-wordpress-brute-force-attacks-ithemes-brute-force-protection-network-free-ithemes-security/\" href=\"http://ithemes.com/2014/09/09/combat-wordpress-brute-force-attacks-ithemes-brute-force-protection-network-free-ithemes-security/\">announced</a> Brute Force Login Protection has been added to the latest version of <a title=\"https://wordpress.org/plugins/better-wp-security/\" href=\"https://wordpress.org/plugins/better-wp-security/\">iThemes Security</a>. The new feature enables users to protect their sites either locally or by activating a network wide setting.</p>\n<ul>\n<li><strong><em>Local</em> brute force protection</strong> looks only at attempts to access your site and bans users per the lockout rules specified locally.</li>\n<li><strong><em>Network</em> brute force protection</strong> takes this a step further by banning users who have tried to break into other sites from breaking into yours.</li>\n</ul>\n<p>Similar to <a title=\"https://bruteprotect.com/\" href=\"https://bruteprotect.com/\">BruteProtect</a> <a title=\"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect\" href=\"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect\">acquired by Automattic</a> earlier this year, network wide protection uses the power of each site using it to block known IP addresses from breaking into a site. This is possible thanks to the introduction of the iThemes Brute Force Protection Network.</p>\n<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/iThemesSecurityBruteForceConfig.png\" rel=\"prettyphoto[30185]\"><img class=\"size-full wp-image-30217\" src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/iThemesSecurityBruteForceConfig.png?resize=1025%2C515\" alt=\"Brute Force Login Protection Settings\" /></a>Brute Force Login Protection Settings\n<p>By enabling this new setting in iThemes Security, the Brute Force Protection Network will automatically report the IP addresses of failed login attempts to iThemes and will block them for a length of time necessary to protect your site based on the number of other sites that have seen a similar attack.</p>\n<h2>Timing and Roadmaps</h2>\n<p>When I asked if there is a difference between the pro version of iThemes Security and the free version when it comes to Brute Force Login Protection, iThemes Security lead developer, Chris Wiegman, said, &#8220;There are no differences at all and no plans to change that. It&#8217;s originally a free feature and we want to keep it that way.&#8221;</p>\n<p>When BruteProtect was acquired by Automattic, <a title=\"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect#comments\" href=\"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect#comments\">users</a> expressed disappointment that they would have to use Jetpack. Was this move and the feedback surrounding it a motivating factor to add the feature to iThemes Security? &#8220;That was a bit of the timing but we’ve actually had it on the roadmap before I moved to iThemes. It is an effective way to protect against brute force login attempts that we just didn&#8217;t get up and running until now,&#8221; Wiegman said.</p>\n<h2>The Jetpack Of WordPress Security Plugins?</h2>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/07/jetpack-logo.gif\" rel=\"prettyphoto[30185]\"><img class=\"aligncenter size-full wp-image-27470\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/07/jetpack-logo.gif?resize=700%2C276\" alt=\"jetpack-logo\" /></a></p>\n<p>I&#8217;m not aware of any other plugin that comes close to what Jetpack offers. iThemes Security has so many protection mechanisms within the plugin, I think it  makes sense if each major feature was separated into a module.</p>\n<p>iThemes Security could morph into a plugin like Jetpack with a focus on security. New modules could be developed to help make connecting to complimentary services easy. Development of the plugin might be made easier as well with contributors being able to focus on their favorite modules. The only thing preventing it from being like Jetpack in it current state are modules and a proper user interface to manage them. I wouldn&#8217;t be surprised if this is the direction iThemes takes with the plugin.</p>\n<h2>Respecting A User&#8217;s Privacy</h2>\n<p>One major difference between Jetpack and iThemes Security is that iThemes has chosen to leave the choice to users on whether network protection is enabled or not. Jetpack however, will auto-activate BruteProtect when it&#8217;s enabled. Wiegman explained two reasons why network protection is not enabled by default. &#8220;First, I don&#8217;t believe in auto activation. Second, as a security plugin we have an obligation to protect users privacy along with their site so anything that communicates remotely must be opt-in rather than opt-out.&#8221; While a noble choice on the part of iThemes, it may leave them with less data to work with than if it were enabled by default.</p>\n<h2>Choices Are Good</h2>\n<p>With nearly 3M downloads, the iThemes Brute Force Protection Network has an opportunity to become larger than BruteProtect&#8217;s before the company was acquired. Since the feature is free in both versions, it&#8217;s exposed to the maximum amount of potential users. It offers a choice to those who want this type of protection but don&#8217;t want to use Jetpack to get it. For those who want a single purpose plugin that only offers Brute Force Login Protection using the data from each site that uses it, you&#8217;re still out of luck.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 02:37:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:34;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"WPTavern: First Look at Designs for the Twenty Fifteen Default WordPress Theme\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30218\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:88:\"http://wptavern.com/first-look-at-designs-for-the-twenty-fifteen-default-wordpress-theme\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3700:\"<p>Konstantin Obenland <a href=\"http://make.wordpress.org/core/2014/09/09/twenty-fifteen/\" target=\"_blank\">released</a> the first look at the Twenty Fifteen theme on the Make WordPress Core blog today. Takashi Irie, the Automattic theme designer who created <a href=\"http://takashiirie.com/2013/07/31/further-becomes-twenty-fourteen/\" target=\"_blank\">Twenty Fourteen</a>, was asked by Matt Mullenweg to design the upcoming Twenty Fifteen default theme.</p>\n<p>It is now confirmed that Twenty Fifteen will in fact be a blog-focused theme, according to Irie&#8217;s description:</p>\n<blockquote><p>Twenty Fifteen is a clean, blog-focused theme designed through simplicity. With careful attention to typography, the theme treats text as a major part of the user interface. It features Google’s Noto Serif and Sans – a font family designed to be visually harmonious across many of the worlds languages, and a perfect fit for the internationalization strides being made in WordPress core.</p></blockquote>\n<p>The first preview of the theme shows that it includes a sidebar and makes liberal use of white space to emphasize content:</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/twenty-fifteen.png\" rel=\"prettyphoto[30218]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/twenty-fifteen.png?resize=1024%2C825\" alt=\"twenty-fifteen\" class=\"aligncenter size-full wp-image-30226\" /></a></p>\n<p>The theme will include the ability to add a custom header image and a custom background. Obenland shared additional images, which show the theme with text only (sans images), a further customized version, and examples of how it might look on mobile devices.</p>\n\n<a href=\"http://wptavern.com/first-look-at-designs-for-the-twenty-fifteen-default-wordpress-theme/twenty-fifteen-colors\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/twenty-fifteen-colors.png?resize=150%2C150\" class=\"attachment-thumbnail\" alt=\"twenty-fifteen-colors\" /></a>\n<a href=\"http://wptavern.com/first-look-at-designs-for-the-twenty-fifteen-default-wordpress-theme/twenty-fifteen-no-images\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/twenty-fifteen-no-images.png?resize=150%2C150\" class=\"attachment-thumbnail\" alt=\"twenty-fifteen-no-images\" /></a>\n<a href=\"http://wptavern.com/first-look-at-designs-for-the-twenty-fifteen-default-wordpress-theme/twenty-fifteen-phone\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/twenty-fifteen-phone.jpg?resize=150%2C150\" class=\"attachment-thumbnail\" alt=\"twenty-fifteen-phone\" /></a>\n<a href=\"http://wptavern.com/first-look-at-designs-for-the-twenty-fifteen-default-wordpress-theme/twenty-fifteen-menu\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/twenty-fifteen-menu.jpg?resize=150%2C150\" class=\"attachment-thumbnail\" alt=\"twenty-fifteen-menu\" /></a>\n<a href=\"http://wptavern.com/first-look-at-designs-for-the-twenty-fifteen-default-wordpress-theme/twenty-fifteen-mobile\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/twenty-fifteen-mobile.jpg?resize=150%2C150\" class=\"attachment-thumbnail\" alt=\"twenty-fifteen-mobile\" /></a>\n\n<p>Twenty Fifteen is being designed from a mobile first approach. Obenland reports that the design itself is &#8220;far from finished.&#8221; After finalizing the design, contributors will create a working theme and commit that to core. At that point, those who have volunteered to test the theme will be able to put it through the paces to ensure that it meets WordPress&#8217; standards for default themes. Twenty Fifteen is expected to be included in WordPress 4.1, which is scheduled to ship in December this year.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 00:38:59 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:35;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"WordPress.tv Blog: New videos from WordCamp Asheville and WordCamp Vancouver\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"http://blog.wordpress.tv/?p=382\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"http://blog.wordpress.tv/2014/09/10/new-videos-from-wordcamp-asheville-and-wordcamp-vancouver/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4470:\"<p>Check out these great new videos from WordCamp Asheville 2014 (May 30-June1) and WordCamp Vancouver 2014 (July 26) that have been published on <a href=\"http://wordpress.tv/\" title=\"See more videos on WordPress.tv\">WordPress.tv</a> recently.</p>\n<h2>What’s Your Story? Engaging Your Readers with the Power of Personal Narrative</h2>\n<p>Whether you’re starting a personal blog to share your thoughts and ideas, or blogging to promote your business, storytelling is the most effective way to engage your audience. In this presentation, Cindy Reed explains how well-told stories are memorable, unique, and position you as a trusted voice.</p>\n<div id=\"v-E36nBtZK-1\" class=\"video-player\">\n</div>\n<p><a href=\"http://wordpress.tv/2014/09/04/cindy-reed-whats-your-story-engaging-your-readers-with-the-power-of-personal-narrative/\" target=\"_blank\">View on WordPress.tv</a></p>\n<h2>Power Your Non-Profit Website</h2>\n<p>An important part of any non-profit organization’s mission is getting its message out to as many people as possible. As Ray Mitchell explains here, a well-designed WordPress website can help even the smallest non-profit reach a wide audiences and help activate both supporters and volunteers.</p>\n<div id=\"v-t8bP32a8-1\" class=\"video-player\">\n</div>\n<p><a href=\"http://wordpress.tv/2014/09/07/ray-mitchell-power-your-non-profit-website/\" target=\"_blank\">View on WordPress.tv</a></p>\n<h2>Magic with CSS Pseudo-Selectors</h2>\n<p>Pseudo-selectors are a magical CSS tool, because they make it possible to create some amazing visual effects, while keeping your HTML semantic and minimizing the images on your site. This presentation by Morgan Kay introduces the basic concept of pseudo-selectors, and goes over the various pseudo-selectors that are available and when they are useful.</p>\n<div id=\"v-1WQjXPlQ-1\" class=\"video-player\">\n</div>\n<p><a href=\"http://wordpress.tv/2014/09/02/morgan-kay-magic-with-css-pseudo-selectors/\" target=\"_blank\">View on WordPress.tv</a></p>\n<h2>WordPress Single Page Web Apps</h2>\n<p>Alessandro Biavati shows how WordPress can be integrated with modern Web App tools by leveraging its innate modularity, flexibility and speed. This talk is about WordPress as much as it is about general Web Application best practices and future applications and considerations.</p>\n<div id=\"v-JRaL1qjY-1\" class=\"video-player\">\n</div>\n<p><a href=\"http://wordpress.tv/2014/09/09/alessandro-biavati-wordpress-single-page-web-apps/\" target=\"_blank\">View on WordPress.tv</a></p>\n<p>These are just a few of the great videos we have published recently, but you can view all videos from these events here:</p>\n<ul>\n<li><a href=\"http://wordpress.tv/event/wordcamp-vancouver-2014/\">WordCamp Vancouver 2014 Videos</a></li>\n<li><a href=\"http://wordpress.tv/event/wordcamp-asheville-2014/\">WordCamp Asheville 2014 Videos</a></li>\n</ul><br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptvblog.wordpress.com/382/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptvblog.wordpress.com/382/\" /></a> <img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=blog.wordpress.tv&blog=5310177&post=382&subd=wptvblog&ref=&feed=1\" width=\"1\" height=\"1\" /><div><a href=\"http://blog.wordpress.tv/2014/09/10/new-videos-from-wordcamp-asheville-and-wordcamp-vancouver/\"><img alt=\"Cindy Reed: What’s Your Story? Engaging Your Readers with the Power of Personal Narrative\" src=\"http://videos.videopress.com/E36nBtZK/video-6d9f81430c_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div><div><a href=\"http://blog.wordpress.tv/2014/09/10/new-videos-from-wordcamp-asheville-and-wordcamp-vancouver/\"><img alt=\"Ray Mitchell &#8211; Power Your Non-Profit Website.mp4\" src=\"http://videos.videopress.com/t8bP32a8/video-ffb0241a44_scruberthumbnail_1.jpg\" width=\"160\" height=\"120\" /></a></div><div><a href=\"http://blog.wordpress.tv/2014/09/10/new-videos-from-wordcamp-asheville-and-wordcamp-vancouver/\"><img alt=\"Kevin Stover: The Candid Developer. Developing and Maintaining A Successful Plugin… Is Scary\" src=\"http://videos.videopress.com/1WQjXPlQ/video-7fd062bfb2_scruberthumbnail_2.jpg\" width=\"160\" height=\"120\" /></a></div><div><a href=\"http://blog.wordpress.tv/2014/09/10/new-videos-from-wordcamp-asheville-and-wordcamp-vancouver/\"><img alt=\"Alessandro Biavati: WordPress Single Page Web Apps\" src=\"http://videos.videopress.com/JRaL1qjY/video-002afa269f_scruberthumbnail_0.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 10 Sep 2014 00:14:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Jerry Bates\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:36;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"WPTavern: A Successful WordPress Plugin Adoption Story\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30177\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wptavern.com/a-successful-wordpress-plugin-adoption-story\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6619:\"<p>The &#8220;<a href=\"http://wptavern.com/adopt-me-plugin-tag-is-now-in-use-on-wordpress-org\" target=\"_blank\">adopt-me</a>&#8221; tag in the WordPress.org Plugin Directory is starting to gain traction, with two pages of current listings. While that may not seem like very many among the 33,000+ plugins, the new clear path for adoption is helping to change the course of extensions that would otherwise rot in the repo.</p>\n<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/free-to-a-good-home.jpg\" rel=\"prettyphoto[30177]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/free-to-a-good-home.jpg?resize=500%2C464\" alt=\"photo credit: sparrowsound\" class=\"size-full wp-image-30208\" /></a>photo credit: <a href=\"http://www.last.fm/music/sparrowsound/Free+to+a+good+home\">sparrowsound</a>\n<p>The &#8220;<a href=\"http://wordpress.org/plugins/tags/adopt-me\" target=\"_blank\">adopt-me</a>&#8221; tag was introduced as a possible solution to help <a href=\"http://wptavern.com/could-wordpress-plugin-adoption-lower-the-rate-of-abandonment\" target=\"_blank\">lower the rate of plugin abandonment</a>. It provides a centralized way for developers to search for plugins that need a new owner.</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/matt-cromwell.jpeg\" rel=\"prettyphoto[30177]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/matt-cromwell.jpeg?resize=150%2C150\" alt=\"matt cromwell\" class=\"alignleft size-full wp-image-30190\" /></a></p>\n<p>When novice plugin developer <a href=\"http://mattcromwell.com/\" target=\"_blank\">Matt Cromwell</a> heard about the &#8220;adopt-me&#8221; tag, he was intrigued. Cromwell is the Solutions Manager for FooPlugins, a web developer by day and a plugin developer by night. <a href=\"https://wordpress.org/plugins/foothumbnails-for-galleries/\" target=\"_blank\">FooThumbnail Gallery</a> was his first foray into plugin development, prompted by the need to create a solution for one of his clients. After launching his first plugin, he started looking for ways to expand his development skills.</p>\n<p>&#8220;Like so many other WP developers, I&#8217;m always slightly saddened to see that rust-orange notice at the top of a plugin telling me this or that plugin hasn&#8217;t been updated in over 2 years,&#8221; Cromwell said. <strong>&#8220;I wanted to test myself by looking at someone else&#8217;s code, seeing how and why they did what they did, and seeing if I could improve on it.&#8221;</strong> With that goal in mind, he reached out on the <a href=\"http://wptavern.com/a-facebook-group-dedicated-to-advanced-wordpress-topics\" target=\"_blank\">Advanced WordPress Facebook Group</a> for plugin adoption opportunities and discovered the &#8220;<a href=\"http://wordpress.org/plugins/tags/adopt-me\" target=\"_blank\">adopt-me</a>&#8221; tag.</p>\n<p>In the process of examining various candidates, Cromwell was less concerned with the plugins&#8217; potential audience/user base and more focused on finding one that fit within his current skills. &#8220;While I did want a challenge, I didn&#8217;t want to adopt something way out of my experience, like a booking plugin or something overly complex,&#8221; he said. &#8220;I didn&#8217;t want to do something so different from what I&#8217;d already done that I&#8217;d never actually update it or improve on it.&#8221;</p>\n<p>He eventually landed on two plugins that worked well with the development he had done previously: <a href=\"https://wordpress.org/plugins/imagelens/\" target=\"_blank\">Imagelens</a> by <a href=\"https://profiles.wordpress.org/ramoonus/\" target=\"_blank\">Ramoonus</a>, and <a href=\"https://wordpress.org/plugins/carousel-gallery-jquery/\" target=\"_blank\">Carousel Gallery</a> by <a href=\"https://profiles.wordpress.org/joen/\" target=\"_blank\">Joen Asmussen</a> and <a href=\"https://profiles.wordpress.org/etiger13/\" target=\"_blank\">eTiger13</a>. &#8220;I contacted each of them through their website or social media channels and heard back from them fairly quickly that they&#8217;d love to hand over the wheel,&#8221; he said. Plugin authors can easily add new developers as contributors if they want to pass the plugin on for a better future.</p>\n<p>&#8220;I&#8217;m happy with my progress so far,&#8221; Cromwell reported. &#8220;I completely revamped ImageLens from the ground up. Formerly, it simply added the script everywhere. I didn&#8217;t want that. I wanted users to be able to enable it per image, or for a whole post/page. Deciding that forced me to learn how to filter <code>the_content()</code> and to leverage custom attachment fields. I also discovered Ohad Raz&#8217; &#8220;<a href=\"https://github.com/bainternet/My-Meta-Box\" target=\"_blank\">My Meta Box</a>&#8221; class for custom metaboxes in the process.&#8221;</p>\n<p>Pleased with the success of his adoption experience so far, Cromwell plans to continue browsing the &#8220;adopt-me&#8221; tag for more extensions to bring into his plugin family. &#8220;I really like being able to contribute to the WP community this way,&#8221; he said. &#8220;It&#8217;s also a great way to jump into the deep end of plugin development, at least it has been for me.&#8221;</p>\n<p>Cromwell is enthusiastic about plugin adoption and hopes to encourage more theme developers to pursue the challenge. He also thinks that experienced plugin developers should consider adoption as a new way to give back to the WordPress community. &#8220;Experienced plugin developers who really know their stuff could adopt two or three plugins tonight and have them updated and shining by the weekend,&#8221; he suggested.</p>\n<p>Based on his experience, Cromwell believes that if you haven&#8217;t updated your plugin in a year, the best thing you can do is add the &#8220;adopt-me&#8221; tag to give your extension the chance to thrive. &#8220;The threat of automatic deletion if the plugin hasn&#8217;t been updated in two years would do MARVELS for the repo as a whole,&#8221; he said. &#8220;But there&#8217;s probably easy ways that plugin adoption could become more prominent in the repo. An &#8216;I adopted!&#8217; badge for profiles would be fun,&#8221; he suggested.</p>\n<p>If you no longer want to maintain your plugin, consider adding the &#8220;<a href=\"http://wordpress.org/plugins/tags/adopt-me\" target=\"_blank\">adopt-me</a>&#8221; tag to keep it alive. Developers who want a new challenge then have the chance to discover your plugin. Cromwell&#8217;s adoption success story demonstrates how easy it is for abandoned or unwanted plugins to find a new home with an enthusiastic developer.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Sep 2014 23:30:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:37;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"WPTavern: What Happens When WordPress Is Updated With 100 Plugins Activated?\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30165\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"http://wptavern.com/what-happens-when-wordpress-is-updated-with-100-plugins-activated\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1624:\"<p>Over the years, there have been <a title=\"http://wptavern.com/plugin-quality-not-plugin-quantity\" href=\"http://wptavern.com/plugin-quality-not-plugin-quantity\">several articles</a> published on the topic of how many WordPress plugins are too many. A common point of debate is that too many plugins can slow down your site or cause things to break. While the risk of things breaking exists, I don&#8217;t think it&#8217;s as bad as people make it out to be.</p>\n<p>Longtime WordPress trainer, Bob Dunn, has <a title=\"http://bobwp.com/wordpress-4-0-update-100-active-plugins/\" href=\"http://bobwp.com/wordpress-4-0-update-100-active-plugins/\">published the results</a> of his WordPress 4.0 update experiment. He set up two different sites each with 100 plugins installed and activated. One site used a Genesis child theme with several Genesis specific plugins. The other site used Canvas from WooThemes with WooCommerce and several WooCommerce extensions. Watch the following video to find out if WordPress and the server hosting it melts down.</p>\n<p></p>\n<p>One thing I hope this video does is give users confidence in updating WordPress. The most common reason I&#8217;ve read for not updating is the fear of the site or plugins breaking. This video proves something I&#8217;ve been saying for years, it&#8217;s not the number of plugins you use, it&#8217;s the quality. As <a title=\"http://halfelf.org/2014/how-many-plugins/\" href=\"http://halfelf.org/2014/how-many-plugins/\">Mika Epstein astutely points out</a>, it only takes one plugin to crash a WordPress site. Are you surprised by the results of the experiment?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Sep 2014 22:01:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:38;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"Matt: Ants Are Amazing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44096\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"http://ma.tt/2014/09/ants-areamazing/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1613:\"<blockquote><p>[A]ll of California&#8217;s Argentine ants belong to only four colonies. The largest, euphemistically named the Very Large Colony, contains hundreds of billions, if not trillions, of ants, and extends from the Mexican border to San Francisco. In the largest battles ever recorded, millions of ants die each month along this colony&#8217;s border with its rivals in San Diego County.</p></blockquote>\n<p>That&#8217;s from <a href=\"http://www.the-scientist.com/?articles.view/articleNo/29040/title/War-zone/\">this article by Mark W Moffett</a> that describes his book <a href=\"http://www.amazon.com/Adventures-among-Ants-Global-Trillions/dp/0520271289\">Adventures Among Ants</a>.</p>\n<p>In 2010 Wired took a cool look at <a href=\"http://www.wired.com/2010/08/gallery-ant-warfare/all/\">Looting, Cannibalism and Death Blows: The ‘Shock and Awe’ of Ant Warfare</a>.</p>\n<p>Finally as a 2013 update, there&#8217;s a new boss in town, the Asian needle ant which is <a href=\"http://science.nbcnews.com/_news/2013/02/11/16928308-stinging-needle-ants-overtaking-invasive-argentines-in-us?lite\">literally eating Argentine ants for lunch</a>:</p>\n<blockquote><p>All ants essentially hibernate when wintertime hits, but the Asian needle ants &#8220;wake up before other ant species wake up,&#8221; Spicer-Rice explained.</p>\n<p>This head start allows them to build nests, find sources of food, and start reproducing before the other ants get going.</p></blockquote>\n<p><cite>Amazing ant photo by <a href=\"https://www.flickr.com/photos/kjcs/8084136238/\">János Csongor Kerekes and CC-licensed</a>.</cite></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Sep 2014 20:54:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:39;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"Lorelle on WP: The Web is All About The Writing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"http://lorelle.wordpress.com/?p=11863\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://lorelle.wordpress.com/2014/09/09/the-web-is-all-about-the-writing/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:499:\"Reading &#8220;7 Things You Need to Know about SEO in 2014&#8221; from Compete Pulse, I was fascinating to read that &#8220;size matters:&#8221; Most blog posts range between 400 and 600 words, but the ideal length for highest ranking is actually around 1,500. Many still believe that a successful website is one that offers the information [&#8230;]<img alt=\"\" border=\"0\" src=\"http://pixel.wp.com/b.gif?host=lorelle.wordpress.com&blog=72&post=11863&subd=lorelle&ref=&feed=1\" width=\"1\" height=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Sep 2014 20:11:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"Lorelle VanFossen\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:40;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:115:\"WPTavern: OpenTickets: An Open Source Event Management and Ticket Sales Platform Built on WordPress and WooCommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30124\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:124:\"http://wptavern.com/opentickets-an-open-source-event-management-and-ticket-sales-platform-built-on-wordpress-and-woocommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5564:\"<a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/open-tickets.png\" rel=\"prettyphoto[30124]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/open-tickets.png?resize=1024%2C483\" alt=\"photo credit: BenjaminThompson - cc\" class=\"size-full wp-image-30128\" /></a>photo credit: <a href=\"https://www.flickr.com/photos/beija/5082213817/\">BenjaminThompson</a> &#8211; <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">cc</a>\n<p><a href=\"http://opentickets.com/\" target=\"_blank\">OpenTickets</a> launched its <a href=\"http://wordpress.org/plugins/opentickets-community-edition/\" target=\"_blank\">community edition</a> on WordPress.org this week. The open source project was created to provide event publishing and online ticket sales for bands, non-profits, venues, festivals, and other events. The platform is powered by WordPress and <a href=\"http://wordpress.org/plugins/woocommerce/\" target=\"_blank\">WooCommerce</a> and provides support for creating multiple venues and events, as well as managing digital and/print ticket sales.</p>\n<p>The community edition features all the basic functionality required for managing events. After installing WooCommerce and the OpenTickets plugin, WordPress admins will have the following capabilities:</p>\n<ul>\n<li>Publish Venues</li>\n<li>Publish Events</li>\n<li>Display Calendar of Events</li>\n<li>Create and Sell Tickets</li>\n<li>Allow customers to keep digital and/or print tickets</li>\n<li>Checkin people to events with a QR Reader</li>\n<li>Ticket Sales Reporting</li>\n</ul>\n<p>OpenTickets works hand-in-hand with WooCommerce&#8217;s standard product creation with an option to create the product as a ticket:</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/create-ticket.jpg\" rel=\"prettyphoto[30124]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/create-ticket.jpg?resize=1025%2C323\" alt=\"create-ticket\" class=\"aligncenter size-full wp-image-30151\" /></a></p>\n<p>Adding a new venue works very much like publishing a new post. The plugin includes a new menu item for creating and categorizing venues.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/add-venue.jpg\" rel=\"prettyphoto[30124]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/add-venue.jpg?resize=950%2C484\" alt=\"add-venue\" class=\"aligncenter size-full wp-image-30136\" /></a></p>\n<p>Scroll further down and you&#8217;ll be able to add specific areas within the venue, location information, a map, venue social links, and additional custom fields.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/event-formula-dates.jpg\" rel=\"prettyphoto[30124]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/event-formula-dates.jpg?resize=300%2C290\" alt=\"event-formula-dates\" class=\"alignright size-medium wp-image-30144\" /></a></p>\n<p>When creating a new event, you have the option to enter a formula to calculate when tickets should stop being sold on the frontend of the site. The field accepts hour(s), minute(s), second(s), day(s), week(s), month(s), and year(s). For example, if you wish to terminate ticket sales shortly before the show, you could enter something like <code>2 hours 30 minutes</code>.</p>\n<p>In addition to setting a date range for an event, the plugin also provides an integrated event calendar.</p>\n<p>Additional commercial add-ons are available in OpenTicket&#8217;s <a href=\"http://opentickets.com/enterprise/\" target=\"_blank\">enterprise edition</a>, which bring a wider range of box office tools to the WordPress admin, such as coupons, auditing, advanced reporting, seating charts and more.</p>\n<p>If you want to see a live demo of the plugin on the frontend, it is being used by the <a href=\"http://artisanct.com/\" target=\"_blank\">Artisan Center Theater</a> where you can check out the event listings and ticket purchasing process.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/artisan-theater.jpg\" rel=\"prettyphoto[30124]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/artisan-theater.jpg?resize=930%2C390\" alt=\"artisan-theater\" class=\"aligncenter size-full wp-image-30146\" /></a></p>\n<p>The architecture of Artisan Center Theater&#8217;s previous ticketing system was not scalable and customers were unable to print their own tickets, which slowed down the box office. After six months of using their new OpenTickets system, Artisan <a href=\"http://opentickets.com/artisan-center-theater-and-open-tickets-case-study/\" target=\"_blank\">sold over 40,000 tickets</a> and found that online sales grew from ~40% to over 80% of total sales. Because customers were able to print their own tickets, the check-in process was reduced from about 40 minutes at Will Call to ~5 minutes.</p>\n<p>OpenTickets was created by <a href=\"http://quadshot.com/\" target=\"_blank\">Quadshot Software</a> as a solution for its customers who had problems with their previous online event and ticketing systems. The plugin was made to allow event managers to host their own ticketing platform with greater flexibility and better performance than outside solutions.</p>\n<p>OpenTickets provides an open source alternative to third-party ticketing systems, eliminating additional overhead and service fees. The plugin is <a href=\"http://wordpress.org/plugins/opentickets-community-edition/\" target=\"_blank\">available on WordPress.org</a> and looks to be a promising solution for developers and agencies building WordPress sites around events and ticket sales.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Sep 2014 19:31:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:41;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:83:\"WPTavern: Speed Up Your WordPress Site with Pound, Varnish, Nginx and mod_pagespeed\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30100\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:91:\"http://wptavern.com/speed-up-your-wordpress-site-with-pound-varnish-nginx-and-mod_pagespeed\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:16692:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/tomaz.jpg\" rel=\"prettyphoto[30100]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/tomaz.jpg?resize=150%2C150\" alt=\"tomaz\" class=\"alignleft size-thumbnail wp-image-30102\" /></a></p>\n<p><strong>This post was contributed by Tomaž Zaman. He is the founder of a Danish startup called <a href=\"https://codeable.io\" target=\"_blank\">Codeable</a>, a WordPress-only outsourcing service on a mission to help WordPress companies and enthusiasts from all over the world effortlessly scale their businesses. He spends his free time with his wife and four kids.</strong></p>\n<p>A vast majority of online articles about speeding up your WordPress site mention and use a plugin called <a href=\"https://wordpress.org/plugins/w3-total-cache/\">W3 Total Cache</a> (or W3TC for short). Rightfully so, because it&#8217;s a great, all-in-one solution to get your WP site fast with relatively small amount of work.</p>\n<p>However, I&#8217;m not really a fan of all-in-one solutions, mainly because they bring a lot of complexity to the table, and as far as WordPress plugins go, possibly introduce compatibility issues and upgrade headaches.</p>\n<p>That is why I decided to look for alternatives that would still make our (secure) WordPress site really fast and a friend recommended to look at mod_pagespeed, which turned out to be a great solution for making our WordPress really fast, with minimal effort.</p>\n<h2>Prerequisites</h2>\n<p>This article assumes you have at least basic knowledge of linux (all our examples are Ubuntu-based), know how to use the shell, and most importantly, you host your site on your own VPS. Shared hosting isn&#8217;t going to cut it, since we need to set up a customized version of nginx, which supports mod_pagespeed.</p>\n<p>There are plenty of awesome and relatively cheap VPS providers out there, I&#8217;d personally recommend <a href=\"http://www.digitalocean.com\">Digital Ocean</a>.</p>\n<p>Note that all commands that start with the dollar sign ($) indicate it&#8217;s a unix command, and you don&#8217;t actually enter that dollar sign into the command.</p>\n<h2>Main ingredients</h2>\n<p>As the title suggests, we&#8217;ll need a couple of programs installed on our server; The main one (for caching purposes) is called <a href=\"https://www.varnish-cache.org/\">Varnish</a>, which basically stores all your HTML output onto a temporary folder on disk and serves that instead of delegating requests to WordPress. It has one <em>flaw</em>, however &#8211; it does not support <em>SSL termination</em>, which is why we need <a href=\"http://www.apsis.ch/pound\">Pound</a> for.</p>\n<p>The last two components we need are <a href=\"http://nginx.com/\">Nginx</a> (it&#8217;s a web server like Apache) and a PHP process manager called <a href=\"http://php-fpm.org/\">PHP-FPM</a>, since Nginx does not support modules.</p>\n<p>Of course you also need to <a href=\"http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl\">generate a certificate</a> key and buy a certificate for this setup to work. Entry-level certificates are quite cheap, some starting with less that $10/year, which makes it a no-brainer.</p>\n<h2>Getting started</h2>\n<p>Provided you have a clean, fresh VPS ready, <em>SSH</em> on to it. Protip: If you use Linux or Mac OS locally, you can add the following a shortcut to <code>~/.ssh/config</code>(create this file if it does not exist):</p>\n<pre class=\"brush: plain; title: ; notranslate\">\nHost MyHost\n  HostName [host-ip]\n  Port [host-port]\n  User [host user, usually root]\n  IdentityFile [path/to/your/ID_RSA, usually ~/.SSH/ID_RSA]\n</pre>\n<p>This allows you to run the following command to log into your server shell: <code>$ ssh MyHost</code>.</p>\n<p>Once logged in, it&#8217;s time to install all the necessary components that we&#8217;ll need via a <em>package manager</em>, in our case <code>apt-get</code>.</p>\n<p>Run the following command: <code>$ sudo apt-get install php5-fpm php5-cli php5-mysql varnish pound mariadb-server-5.5 unzip</code> You&#8217;ll be prompted to enter the root password for MariaDB, which is a drop-in replacement for MySQL, twice. We did not install Nginx at this point because the version that comes as the default, does not support <em>mod_pagespeed</em>, which we need, so we&#8217;ll install it manually. To do that, visit the <a href=\"https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source\">official documentation</a> and follow the guide, with one exception, replace this line:</p>\n<pre class=\"brush: plain; title: ; notranslate\">\n./configure --add-module=$HOME/ngx_pagespeed-release-${NPS_VERSION}-beta\n</pre>\n<p>with this one:</p>\n<pre class=\"brush: plain; title: ; notranslate\">\n./configure --add-module=$HOME/ngx_pagespeed-release-${NPS_VERSION}-beta --with-http_gzip_static_module --with-http_realip_module\n</pre>\n<p>This will make sure you also include modules that will help you GZIP static assets and allow you to track correct IPs in your WordPress, respectively. Once done, you should have Nginx installed in <code>/usr/local/nginx/</code>.</p>\n<p>If you try to visit the URL (or IP) of your server at this point, nothing will happen, because we haven&#8217;t configured all the components properly yet. Once we do, the <em>communication schema</em> between components on our server will look something like this:</p>\n<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/diagram.png\" rel=\"prettyphoto[30100]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/diagram.png?resize=226%2C435\" alt=\"diagram\" class=\"aligncenter size-full wp-image-30104\" /></a></p>\n<h2>Pound</h2>\n<p>Let&#8217;s start with the <em>outermost</em> component, which should listen on two standard ports, 80 and 443 (HTTP and HTTPS, respectively). Edit the file <code>/etc/pound/pound.cfg</code> and put the following contents in:</p>\n<pre class=\"brush: plain; title: ; notranslate\">\nUser            \"www-data\"\nGroup           \"www-data\"\nLogLevel        1\nAlive           30\nControl \"/var/run/pound/poundctl.socket\"\n\nListenHTTP\n    Address  0.0.0.0\n    Port     80\n    # This part makes sure you redirect all HTTP traffic to HTTPS\n    Service\n        HeadRequire \"Host: yourdomain.com\"\n        Redirect \"https://yourdomain.com\"\n    End\nEnd\nListenHTTPS\n    HeadRemove \"X-Forwarded-Proto\"\n    AddHeader  \"X-Forwarded-Proto: https\"\n    Address    0.0.0.0\n    Port       443\n    Cert       \"/etc/ssl/yourdomain.com/yourdomain.com.pem\"\n    # This service removes the WWW-part\n    Service\n        HeadRequire \"Host: www.mydomain.com\"\n        Redirect \"https://yourdomain.com\"\n    End\n    # The main service which passes requests to Varnish\n    Service\n        HeadRequire \"Host: yourdomain.com\"\n        BackEnd\n            Address 127.0.0.1\n                    # 6081 is the default Varnish port\n            Port    6081\n        End\n    End\nEnd\n</pre>\n<p>Before restarting pound with this new configuration, you&#8217;ll also need to have a PEM certificate file in the defined folder, which you can create by following <a href=\"http://www.digicert.com/ssl-support/pem-ssl-creation.htm\">these instructions</a>. You&#8217;ll also need to edit <code>/etc/default/pound</code> and set <code>startup=1</code>.</p>\n<p>That&#8217;s it! Pound is now configured and after running <code>$ service pound restart</code> (on Ubuntu, other distributions may have different commands for service manipulation) you should be able to visit the configured domain. Of course, you&#8217;ll get an error (503 Service Unavailable), but that&#8217;s okay, we&#8217;re not done yet!</p>\n<h2>Varnish</h2>\n<p>Next, we need to configure Varnish. Edit the file `/etc/varnish/default.vcl and put the following in (delete everything else):</p>\n<pre class=\"brush: plain; title: ; notranslate\">\nbackend default {\n  .host = \"127.0.0.1\";\n  .port = \"8080\";\n}\n\nacl purge {\n  \"127.0.0.1\";\n  \"localhost\";\n}\n\nsub vcl_recv {\n    if (req.request == \"PURGE\") {\n      if (!client.ip ~ purge) {\n        error 405 \"Not allowed.\";\n      }\n      ban(\"req.url ~ \"+req.url+\" &amp;&amp; req.http.host == \"+req.http.host);\n      error 200 \"OK\";\n    }\n\n    # only using one backend\n    set req.backend = default;\n\n    # set standard proxied ip header for getting original remote address\n    set req.http.X-Forwarded-For = client.ip;\n\n    # logged in users must always pass\n    if( req.url ~ \"^/wp-(login|admin)\" || req.http.Cookie ~ \"wordpress_logged_in_\" ){\n        return (pass);\n    }\n\n    # don&#039;t cache search results\n    if( req.url ~ \"\\?s=\" ){\n        return (pass);\n    }\n\n    # always pass through posted requests and those with basic auth\n    if ( req.request == \"POST\" || req.http.Authorization ) {\n         return (pass);\n    }\n\n    # else ok to fetch a cached page\n    unset req.http.Cookie;\n    return (lookup);\n}\n\n\n\nsub vcl_fetch {\n\n    # remove some headers we never want to see\n    unset beresp.http.Server;\n    unset beresp.http.X-Powered-By;\n\n    # only allow cookies to be set if we&#039;re in admin area - i.e. commenters stay logged out\n    if( beresp.http.Set-Cookie &amp;&amp; req.url !~ \"^/wp-(login|admin)\" ){\n        unset beresp.http.Set-Cookie;\n    }\n\n    # don&#039;t cache response to posted requests or those with basic auth\n    if ( req.request == \"POST\" || req.http.Authorization ) {\n         return (hit_for_pass);\n    }\n\n    # only cache status ok\n    if ( beresp.status != 200 ) {\n        return (hit_for_pass);\n    }\n\n    # don&#039;t cache search results\n    if( req.url ~ \"\\?s=\" ){\n        return (hit_for_pass);\n    }\n\n    # else ok to cache the response\n    set beresp.ttl = 24h;\n    return (deliver);\n}\n\n\n\nsub vcl_deliver {\n    if (obj.hits &gt; 0) {\n        set resp.http.X-Cache = \"HIT\";\n    }\n    else {\n        set resp.http.X-Cache = \"MISS\";\n    }\n    unset resp.http.Via;\n    unset resp.http.X-Varnish;\n}\n\nsub vcl_hit {\n  if (req.request == \"PURGE\") {\n    purge;\n    error 200 \"OK\";\n  }\n}\n\nsub vcl_miss {\n  if (req.request == \"PURGE\") {\n    purge;\n    error 404 \"Not cached\";\n  }\n}\n\n\nsub vcl_hash {\n    hash_data( req.url );\n    if ( req.http.host ) {\n        hash_data( regsub( req.http.host, \"^([^\\.]+\\.)+([a-z]+)$\", \"\\1\\2\" ) );\n    } else {\n        hash_data( server.ip );\n    }\n    # ensure separate cache for mobile clients (WPTouch workaround)\n    if( req.http.User-Agent ~ \"(iPod|iPhone|incognito|webmate|dream|CUPCAKE|WebOS|blackberry9\\d\\d\\d)\" ){\n        hash_data(\"touch\");\n    }\n    return (hash);\n}\n</pre>\n<p>I won&#8217;t go into much details here, because <a href=\"https://www.varnish-cache.org/docs/4.0/\">official Varnish documentation</a> does a much better job at that. Three things worth mentioning here are the lines that PURGE the cache (delete it), which comes in handy to have within WordPress so that updated parts automatically initiate cache removal. There are several plugins for that, we use <a href=\"http://wordpress.org/plugins/better-wp-varnish/\">Better WP Varnish</a>, but any will do.</p>\n<p>The second thing to mention is cookie handling. This configuration prevents logged in users to see cached versions of WordPress for easier debugging and previewing.</p>\n<p>Last, we also use a custom header (X-Cache), which equals to either HIT or MISS so you can easily debug and see whether Varnish fetched a cached version (HIT) or not.</p>\n<p>As with Pound, it&#8217;s now time to restart Varnish to load the new configuration: <code>$ service varnish restart</code>.</p>\n<h2>Nginx and mod_pagespeed</h2>\n<p>Almost there! The final piece of the puzzle is Nginx. Because we didn&#8217;t use the package manager to install it, we first need to set up an <code>init script</code> that will register Nginx as a <code>daemon</code> (a program or a process that runs in the background). In order to do that, run the following commands:</p>\n<pre class=\"brush: plain; title: ; notranslate\">\n$ cd /etc/init.d\n$ wget https://raw.githubusercontent.com/JasonGiedymin/nginx-init-ubuntu/master/nginx\n$ chmod +x nginx\n$ update-rc.d nginx defaults\n</pre>\n<p>This downloads the init script, makes it executable (because it&#8217;s essentially a program) and registers it with the operating system so it can start at boot time.</p>\n<p>Once that&#8217;s sorted, we need to configure Nginx by editing the file <code>/usr/local/nginx/conf/nginx.conf</code>. Locate the first <em>server</em> block in the file, and replace it with the following code (this assumes you have your WordPress installed in <code>/srv/www/yourdomain.com</code>):</p>\n<pre class=\"brush: plain; title: ; notranslate\">\nserver {\n        listen       8080;\n        server_name  test.com;\n\n        root /srv/test.com;\n        index index.php index.html;\n\n        location / {\n                try_files $uri $uri/ /index.php?$args;\n        }\n\n        location ~ .php$ {\n                try_files $uri /index.php;\n                include fastcgi_params;\n                fastcgi_pass unix:/var/run/php5-fpm.sock;\n                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n                fastcgi_index index.php;\n        }\n\n        pagespeed On;\n        pagespeed ModifyCachingHeaders on;\n\n        # Needs to exist and be writable by nginx.\n        pagespeed FileCachePath \"/var/cache/ngx_pagespeed/\";\n        pagespeed LoadFromFile \"https://yourdomain.com\" \"/srv/yourdomain.com\";\n        pagespeed MapOriginDomain \"http://localhost\" \"https://yourdomain.com\";\n        pagespeed EnableFilters rewrite_css,combine_css,trim_urls;\n                pagespeed DisableFilters sprite_images,convert_jpeg_to_webp,convert_to_webp_lossless;\n\n}\n</pre>\n<p>The top half is just basic configuration for our <em>virtual host</em> which enables rewrites and delegates PHP processing to PHP-FPM (listening on a socket).</p>\n<p>What&#8217;s interesting here is the <em>pagespeed</em> part. After turning it on, we need to properly map URLs so that mod_pagespeed will know when to trigger its magic. After that, we enable/disable various <a href=\"https://developers.google.com/speed/pagespeed/module/filters\">filters</a> and it&#8217;s up to you to which level you want mod_pagespeed to modify/optimize your HTML so go ahead and play with them. My favorites are ones that automatically combine CSS and Javascript files, optimize images and rename them according to their <em>last-modified</em> time, so we can have a far-future expiration date.</p>\n<p>There&#8217;s only one <strong>caveat</strong>: Make sure to disable <em>convert_jpeg_to_webp</em> filter. The name of the filter is pretty descriptive but can pose a problem because of Varnish. If the very first visitor of your website uses Chrome, Varnish will pass the request on to Nginx and it will detect that and serve images in WEBP format, filling the cache with them. All subsequent users will then get that cached version, but as WEBP is not yet widely supported users with other browsers won&#8217;t be able to see the images!</p>\n<p>Now it&#8217;s time to see if our effort was fruitful; Restart Nginx to load the new configuration (<code>$ service nginx restart</code>) and visit the website. UH-OH! You probably don&#8217;t see what you expected, right? That&#8217;s because Varnish is working, and probably serving erroneous version in case you visited it before. The fix is simple, just clear all Varnish cache (<code>$ varnishadm \"ban req.url ~ /\"</code>) and you should be able to see the proper output.</p>\n<p>To verify, you might want to inspect the response locally: <code>$ curl -i https://yourdomain.com</code>. In the response you should see two headers: <em>X-Cache</em> and <em>X-Page-Speed</em>, which indicates you&#8217;re now a webmaster of a considerably faster WordPress website!</p>\n<h2>What about benchmarks?</h2>\n<p>I’ve been asked about benchmarking the results, but in this case, I don’t believe it would make much sense. There’s plenty of Varnish benchmarks out there, but <em>mod_pagespeed</em> isn’t just about speed (despite it’s name). As per it’s documentation it can do a whole lot to optimize your website output in terms of asset concatenation, minification and serving.</p>\n<p>That being said, if you still prefer having hard numbers for this, feel free to test it out and report back and I’ll be more than happy to update this article with your findings.</p>\n<h2>Conclusion</h2>\n<p>What I didn&#8217;t address in this article is <a href=\"http://codex.wordpress.org/Installing_WordPress\">WordPress installation</a>, GZIPping, error handling and various possible corner cases, but I think this tutorial should give you a good base to start off with on the path to improved user experience.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Sep 2014 03:34:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:42;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"WPTavern: Create a Website for Your Presentation Slides with the Reveal.js Theme for WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29551\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"http://wptavern.com/create-a-website-for-your-presentation-slides-with-the-reveal-js-theme-for-wordpress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4504:\"<p><a href=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/revealjs.jpg\" rel=\"prettyphoto[29551]\"><img src=\"http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/revealjs.jpg?resize=1025%2C467\" alt=\"revealjs\" class=\"aligncenter size-full wp-image-30091\" /></a></p>\n<p>Many speakers use the <a href=\"http://lab.hakim.se/reveal-js/#/\" target=\"_blank\">Reveal.js</a> HTML presentation framework to display slides due to its simplicity and compatibility with mobile devices. It was created by Swedesh developer<a href=\"http://hakim.se/\" target=\"_blank\"> Hakim El Hattab</a>, who also hosts a fully-featured visual editor for authoring slides if you don&#8217;t know how to write HTML.</p>\n<p>WordPress users who want to create and host their own slides now have the option to use the <a href=\"https://github.com/alleyinteractive/revealjs-wp-theme\" target=\"_blank\">Reveal.js theme for WordPress</a>. It installs just like any other theme and requires the addition of the <a href=\"https://github.com/alleyinteractive/wordpress-fieldmanager\" target=\"_blank\">Fieldmanager</a> plugin. The theme takes over the entire website so it should only be used on a site dedicated to displaying presentation slides.</p>\n<p>Once installed, you can customize your presentation in <strong>Appearance → reveal.js Settings</strong>. Here you can select from any of the standard <a href=\"http://lab.hakim.se/reveal-js/#/themes\" target=\"_blank\">Reveal.js presentation themes</a> and adjust everything from transition styles and speeds to base width and margins. Further customizations can be added via a standard child theme.</p>\n<p>Reveal.js for WordPress has support for all of Reveal.js&#8217;s fancy transition styles, background transitions and everything else, with the exception of Markdown support. The theme adds a new custom post type for creating Slides, although I believe this would be better accomplished via a plugin.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/add-slide.jpg\" rel=\"prettyphoto[29551]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/add-slide.jpg?resize=959%2C464\" alt=\"add-slide\" class=\"aligncenter size-full wp-image-30066\" /></a></p>\n<p>Creating slides is fast, easy, and requires no knowledge of HTML. It&#8217;s essentially just like writing a regular WordPress post.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sample-revealjs.jpg\" rel=\"prettyphoto[29551]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sample-revealjs.jpg?resize=805%2C752\" alt=\"sample-revealjs\" class=\"aligncenter size-full wp-image-30064\" /></a></p>\n<p>The theme comes with roughly a dozen actions and filters for manipulating the output, display, dependencies and more.</p>\n<h3>Conclusion: Reveal.js for WordPress Would be Better as a Plugin</h3>\n<p>The Reveal.js theme is an interesting concept and I appreciate the fact that you can create slides in the admin. However, data portability is a concern here and I&#8217;d prefer to see it as a plugin. If you happen to change themes, the interface for managing slide content is lost.</p>\n<p>Additionally, the theme takes over the entire website. It&#8217;s not often that you want to create a website for the sole purpose of hosting your slides, especially if you speak frequently and have dozens of presentations. In this instance it would be easier to create your slides elsewhere and upload them to your website outside of WordPress.</p>\n<p>I&#8217;d like to see the slide creation functionality pulled out of the theme and ported to its own plugin. The Reveal.js theme could be conditionally loaded for the post/page where the slides are assigned to display. In this scenario, you&#8217;d be able to add it to your existing WordPress site while keeping your active theme.</p>\n<p>The Reveal.js theme makes it incredibly easy to power your presentation with WordPress, but you should be aware that you&#8217;ll be locked into using it and your slides will not be easily transferable. Placing the slide creation in a plugin outside of the theme itself would make it much more versatile. It would also be highly convenient to be able to import an existing Reveal.js presentation.</p>\n<p>The Reveal.js theme for WordPress was created by the folks at <a href=\"http://www.alleyinteractive.com/\" target=\"_blank\">Alley Interactive</a>, is GPL-licensend, and available on <a href=\"https://github.com/alleyinteractive/revealjs-wp-theme\" target=\"_blank\">GitHub</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Sep 2014 22:13:59 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:43;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"WPTavern: Founder Of ManageWP Publishes Open Letter on Security to The WordPress Community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30013\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:100:\"http://wptavern.com/founder-of-managewp-publishes-open-letter-on-security-to-the-wordpress-community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:10630:\"<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/OpenLetterFeaturedImage.png\" rel=\"prettyphoto[30013]\"><img class=\"size-full wp-image-30027\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/OpenLetterFeaturedImage.png?resize=642%2C300\" alt=\"Open Letter Featured Image\" /></a>photo credit: <a href=\"https://www.flickr.com/photos/ronaldregidor/9692711856/\">dreams &amp; pancakes</a> &#8211; <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.0/\">cc</a>\n<p>The founder of ManageWP, Vladimir Prelovac, has published an <a title=\"https://managewp.com/solve-wordpress-security?utm_content=buffere0076&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\" href=\"https://managewp.com/solve-wordpress-security?utm_content=buffere0076&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\">open letter addressed to the WordPress community</a> on the topic of security. In the letter, he cites the third-party ecosystem surrounding WordPress is not only its biggest strength, but also its biggest weakness.</p>\n<p>He suggests a three-point plan to help mitigate security issues in themes and plugins.</p>\n<ol>\n<li>Weed out plugins with potential security issues.</li>\n<li>Enhance the plugin verification process in the WordPress repository so all new plugins/commits are scanned.</li>\n<li>Educate the WordPress developer community, which goes beyond what is done at the moment.</li>\n</ol>\n<p>Although Prelovac urges the community to start addressing these problems today, most of what he suggests is already occurring and has been for years.</p>\n<h2>Weeding Out Plugins</h2>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/WeedingThePluginDirectory.png\" rel=\"prettyphoto[30013]\"><img class=\"size-full wp-image-30028\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/WeedingThePluginDirectory.png?resize=640%2C250\" alt=\"Weeding The Plugin Directory\" /></a>photo credit: <a href=\"https://www.flickr.com/photos/shutterbugamar/12982948254/\">shutterbugamar</a> &#8211; <a href=\"http://creativecommons.org/licenses/by-nc-nd/2.0/\">cc</a>\n<p>This is a process that takes place 24 hours a day, 7 days a week. It&#8217;s largely a byproduct of so many people using WordPress and the code for plugins being open source. This gives anyone the opportunity to review the source code to check for vulnerabilities. My guess is that most vulnerabilities in plugins are discovered due to a security keen user or researcher reviewing the plugin because they want to use it on their site.</p>\n<p>Samuel &#8220;Otto&#8221; Wood <a title=\"http://wptavern.com/naughty-plugins-caught-and-removed-from-repository#comment-16646\" href=\"http://wptavern.com/naughty-plugins-caught-and-removed-from-repository#comment-16646\">explains what happens</a> when a plugin in the directory is discovered to have a security issue.</p>\n<ol>\n<li>The plugin is de-listed from the repository, to prevent further downloads of an insecure plugin.</li>\n<li>If the exploit is accidental or not obviously malicious, the developer is notified via email. The email comes from a valid address (plugins @ wp.org) and can be replied to.</li>\n<li>The plugin developer presumably fixes the exploit or tells us that it is an invalid exploit, updates the plugin in SVN, and emails back saying so.</li>\n<li>We check it out, and either provide advice or re-enable the plugin.</li>\n</ol>\n<h2>Enhancing The Plugin Verification Process</h2>\n<p>This is one area of the WordPress plugin directory I consider a weakness. After a plugin is reviewed and approved, a malicious plugin author can upload a different code than what was initially reviewed. This is considered a <em>bait and switch</em> technique. The only way to prevent this from occurring is more humans as there are several times more plugin committs than there are plugin reviews.</p>\n<p>In an interview published on the Tavern <a title=\"http://wptavern.com/behind-the-scenes-in-the-wordpress-plugin-directory-with-mika-epstein\" href=\"http://wptavern.com/behind-the-scenes-in-the-wordpress-plugin-directory-with-mika-epstein\">earlier this year</a>, Mika Epstein, who is a member of the plugin validation team, described how they try to combat the issue.</p>\n<blockquote><p>Someone submits plugin A, we approve it, but they upload plugin B to the repository. That’s something a lot of spammers like to do. Sometimes people upload the wrong version of the code by accident, other times they intentionally go back and add in code we told them to remove. We try to mitigate this by filtering emails (I actually get an email for every single plugin check in) and scan for known issues, but it’s never-ending.</p></blockquote>\n<p>The review team is constantly improving its checks, which help them scan for the most basic and unintentional violations. Unfortunately, there is no way to scan for bait-and-switch techniques, which require someone to go back and manually check for violations after the plugin is already sent to the repository.</p>\n<h2>Expanding Educational Resources For The WordPress Developer Community</h2>\n<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/ChalkboardLearning.png\" rel=\"prettyphoto[30013]\"><img class=\"size-full wp-image-30030\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/ChalkboardLearning.png?resize=640%2C250\" alt=\"Chalkboard Learning\" /></a>photo credit: <a href=\"https://www.flickr.com/photos/signifying/582602054/\">Clint Gardner</a> &#8211; <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.0/\">cc</a>\n<p>Prelovac suggests that security information and best practices should be merged into a single resource. He also suggests that 2015 become the year of WordPress security. This includes WordCamps across the world where security would be the main theme.</p>\n<p>The <a title=\"http://make.wordpress.org/docs/plugin-developer-handbook/\" href=\"http://make.wordpress.org/docs/plugin-developer-handbook/\">WordPress Plugin Development handbook project</a> is still ongoing but is essentially what Prelovac is suggesting. There&#8217;s already a chapter dedicated to <a title=\"http://make.wordpress.org/docs/plugin-developer-handbook/3-plugin-security/\" href=\"http://make.wordpress.org/docs/plugin-developer-handbook/3-plugin-security/\">Plugin Security</a> covering data validation, nonces, and checking user capabilities. If you&#8217;d like to contribute to the handbook project, <a title=\"http://make.wordpress.org/docs/handbook/developer-resources/handbooks/\" href=\"http://make.wordpress.org/docs/handbook/developer-resources/handbooks/\">check out this page</a> for additional information</p>\n<p>As for WordCamps, most of them already have a session or two on security. I don&#8217;t think a WordCamp or conference devoted to security in WordPress would work. It can be a dry subject and quickly go over the heads of users. I&#8217;ve attended a few different security sessions at various WordCamps and some people left the room in a panicked state.</p>\n<p>There is no shortage of resources and tools to help developers write clean code. There are books such as <a title=\"http://www.amazon.com/Professional-WordPress-Plugin-Development-Williams/dp/0470916222\" href=\"http://www.amazon.com/Professional-WordPress-Plugin-Development-Williams/dp/0470916222\">WordPress Plugin Development</a> and <a title=\"http://www.amazon.com/Professional-WordPress-Development-Brad-Williams/dp/111844227X\" href=\"http://www.amazon.com/Professional-WordPress-Development-Brad-Williams/dp/111844227X\">Professional WordPress Design and Development, 2nd Edition</a>. Then, there is <a title=\"http://www.wordpress.tv\" href=\"http://www.wordpress.tv\">WordPress.TV</a> with sessions like <a href=\"http://wordpress.tv/2013/02/12/kurt-payne-josh-hansen-do_actionhack_me-advanced-security-for-plugins/\">Kurt Payne and Josh Hansen: do_action(‘hack_me’) Advanced Security for Plugins</a> or <a href=\"http://wordpress.tv/2011/01/29/mark-jaquith-theme-plugin-security/\">Mark Jaquith: Theme &amp; Plugin Security</a>. The knowledge is out there, plugin developers have to find it.</p>\n<h2>Most Of What Prelovac Suggested Already Exists</h2>\n<p>Just about everything Prelovac has suggested in his open letter either already exists or is an ongoing project. I agree that the biggest threat to WordPress and its reputation are the plugins and themes built for it.</p>\n<p>The gatekeepers for the plugin directory and the theme review team have done a great job of protecting users from security issues when they&#8217;re discovered. On the other side of the coin, plugin and theme developers have for the most part, done a good job pushing out a patch once a security vulnerability is reported.</p>\n<h2>News Of Security Vulnerabilities In Plugins Will Be More Common</h2>\n<p>No software is perfect as it&#8217;s written by humans but the tools in place on WordPress.org make patching holes a quick process. Updates are sent to every user of the affected plugin and in most cases, updating is as simple as clicking a button.</p>\n<p>With thousands of plugins available for WordPress both in and outside the official directory, I think reports, disclosures, and immediate updates for security issues will be more common. I think they already are but because no one has consistently reported on them, especially the minor ones, it doesn&#8217;t seem like they&#8217;re common. How a developer or business reacts to and notifies users/customers of a security issue is just as important as fixing it.</p>\n<h2>End User Responsibility and Auto Security Updates For Plugins</h2>\n<p>Education is a key component the helps users keep their sites safe and for developers to write clean code. At the end of the day, the user has a responsibility to make sure their website, themes, and plugins are up to date. If users fail to keep their sites up to date, everything else becomes a moot point.</p>\n<p>While WordPress auto updates to point releases, could we eventually see auto updates for major security issues in plugins? This happened with <a title=\"http://jetpack.me/2014/04/10/jetpack-security-update/\" href=\"http://jetpack.me/2014/04/10/jetpack-security-update/\">Jetpack 2.9.3</a> which fixed a critical security bug and updates were pushed out through WordPress cores auto-update system.</p>\n<p>Personally, I don&#8217;t want to see that happen as I like control and do a good job of keeping myself updated. I rarely leave an update notification stick around for more than an hour. Is the idea of updating plugins automatically from critical security bugs for the sake of keeping the web and users safe a justifiable one?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Sep 2014 19:04:01 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:44;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:113:\"WPTavern: My Eyes Are Up Here: A WordPress Plugin With Automatic Face Detection for Generating Cropped Thumbnails\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=30019\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:122:\"http://wptavern.com/my-eyes-are-up-here-a-wordpress-plugin-with-automatic-face-detection-for-generating-cropped-thumbnails\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3563:\"<a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/automatic-face-dection-feature.jpg\" rel=\"prettyphoto[30019]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/automatic-face-dection-feature.jpg?resize=900%2C417\" alt=\"yoga\" class=\"size-full wp-image-30026\" /></a><a href=\"https://www.flickr.com/photos/oxidizer05/5849087687/in/photolist-9US6Zr-9USacx-9USaPt-9UR2ix-9UV4uS-9UV5vC-9US7v6-9UQZxD-9US8Mk-9US6fa-9UV2oQ-9UTRTy-9US8ar-9USbSB\">Yoga in Odintsovo &#8211; <a href=\"https://creativecommons.org/licenses/by-nc-nd/2.0/\">cc license</a>\n<p>Ever wish you had more control over the thumbnails that WordPress generates for your media and featured images? <a href=\"http://wordpress.org/plugins/my-eyes-are-up-here/\" target=\"_blank\">My Eyes Are Up Here</a> is a new plugin that helps you get the perfect crop, especially as it pertains to images with human subjects.</p>\n<p>Ordinarily, images are cropped according to the center, which can leave out the most important part of the photo if the person&#8217;s face is on the left or right side. More awkward crops of full body shots can isolate a person&#8217;s neck down to the elbows, instead of centering around the face. This plugin aims to fix this problem by integrating a <a href=\"https://github.com/jaysalvat/jquery.facedetection\" target=\"_blank\">jQuery plugin which detects faces in pictures</a> and returns their coordinates, using an algorithm written by Liu Liu.</p>\n<p>After you install My Eyes Are Up Here, there are no setting to configure. A new &#8220;face detection&#8221; section is added to the image editing options. The plugin&#8217;s built-in face detection comes in two parts: automatic detection and manual detection via assigned hotspots.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/face-detection-attachment-details.jpg\" rel=\"prettyphoto[30019]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/face-detection-attachment-details.jpg?resize=982%2C850\" alt=\"face-detection-attachment-details\" class=\"aligncenter size-full wp-image-30021\" /></a></p>\n<p>The basic face detection is fairly intuitive but it won&#8217;t always find everything. That&#8217;s why there&#8217;s a secondary option to set hotspots to highlight faces that were missed. When you&#8217;re finished adding hotspots, click the &#8220;finished&#8221; button in the editing pane to initiate a re-crop of the image. The resulting thumbnail images will be cropped according to your specifications to highlight faces.</p>\n<p><a href=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/faces.jpg\" rel=\"prettyphoto[30019]\"><img src=\"http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/faces.jpg?resize=683%2C415\" alt=\"faces\" class=\"aligncenter size-full wp-image-30043\" /></a></p>\n<p>When multiple hotspots or faces are detected, the plugin will attempt to crop the image to include as many hotspots in the thumbnail as possible. Otherwise, it will crop around the center of the hotspots.</p>\n<p>If your theme makes heavy use of featured images with human subjects, this plugin will help you to get the desired crop around faces and avoid the dreaded crotch shot. My Eyes Are Up Here was created by the folks at <a href=\"https://interconnectit.com/\" target=\"_blank\">interconnect/it</a>. You can <a href=\"http://wordpress.org/plugins/my-eyes-are-up-here/\" target=\"_blank\">download</a> it for free from WordPress.org or check out the project on <a href=\"https://github.com/interconnectit/my-eyes-are-up-here\" target=\"_blank\">GitHub</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Sep 2014 18:21:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:45;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"Matt: Janet Takedown\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44086\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"http://ma.tt/2014/09/janettakedown/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:280:\"<p><a href=\"https://www.techdirt.com/articles/20140904/17142028420/automattic-rejects-series-bogus-janet-jackson-takedown-attempts-using-janet-jackson-song-titles.shtml\">Automattic Rejects Series Of Bogus Janet Jackson Takedown Attempts By Using Janet Jackson Song Titles</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Sep 2014 15:00:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:46;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Matt: Pound Cake Game\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44088\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"http://ma.tt/2014/09/pound-cakegame/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:432:\"<p>I bet you didn&#8217;t know today that <a href=\"http://cakecakecake.herokuapp.com/\">you wanted to play a game with Jay Z&#8217;s head eating cupcakes while his Pound Cake verse plays in the background, but you do</a>. Use the keyboard instead of mouse and it&#8217;s way more challenging. (Also worth mentioning <a href=\"https://www.youtube.com/watch?v=NfM_fb1onoI\">Childish Gambino had the best freestyle on Pound Cake</a>.)</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 07 Sep 2014 18:00:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:47;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Matt: Top &amp; Bottom Line\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=44093\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"http://ma.tt/2014/09/top-bottomline/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:402:\"<blockquote><p>Somebody once told me, “Manage the top line, and the bottom line will follow.” What’s the top line? It’s things like, why are we doing this in the first place? What’s our strategy? What are customers saying? How responsive are we? Do we have the best products and the best people? Those are the kind of questions you have to focus on.</p></blockquote>\n<p>&#8212; Steve Jobs</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 06 Sep 2014 17:00:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:48;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"WPTavern: WordPress Theme Review Team to Launch Mentoring Program\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29636\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"http://wptavern.com/wordpress-theme-review-team-to-launch-mentoring-program\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3034:\"<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/WPMentorFeaturedImage1.jpg\" rel=\"prettyphoto[29636]\"><img src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/WPMentorFeaturedImage1.jpg?resize=844%2C350\" alt=\"WPMentor Featured Image\" class=\"aligncenter size-full wp-image-14106\" /></a></p>\n<p>The <a href=\"http://make.wordpress.org/themes/\" target=\"_blank\">WordPress.org Theme Review Team</a> put out a call for mentors this week. The team will be launching a mentoring program that will pair new reviewers with those who have experience.</p>\n<p>&#8220;We are looking for currently active reviewers who want to give back to the community, of course, and to teach the next generation of theme reviewers,&#8221; Jose Castaneda said in the announcement. The mentoring program was proposed by TRT admin Tammie Lister as a sort of &#8220;buddy system&#8221; to help onboard new reviewers.</p>\n<p>Currently, WordPress.org offers <a href=\"http://wordpress.org/themes/\" target=\"_blank\">2,677 themes</a> in its directory. As the number of themes continues to grow, so does the work load for approving new submissions as well as new theme version updates. Theme Review Team members are in short supply, and this program aims to get new members up to speed as fast as possible.</p>\n<p>The response so far has been tremendous, with many team members already stepping up to the plate to volunteer as mentors. New reviewers will be paired up with mentors when they receive their first tickets. &#8220;We will be assigning from the <a href=\"http://make.wordpress.org/themes/about/trac-ticket-request-queue/trac-ticket-request-queue-summer-2014/\" target=\"_blank\">theme request list</a> each month,&#8221; Lister told the Tavern.</p>\n<p>This is good news for any WordPress.org theme developers who have been frustrated by the amount of time it takes to get theme and updates approved. At times it can take weeks for a new theme to get pushed out to the directory.</p>\n<p>Lister believes the mentoring program will help to improve the efficiency of reviewers working through the queue. &#8220;Anything that helps train will have a positive impact on the queue,&#8221; she said. &#8220;Every little improvement helps, but we also need more people reviewing &#8211; more hands to make light of the queue.&#8221;</p>\n<p>The introduction of <a href=\"http://make.wordpress.org/themes/2014/08/28/the-role-of-trusted-reviewer/\" target=\"_blank\">Key Reviewers</a> will also help to speed things along. This is a new role within the Theme Review Team with the power to push their own theme reviews live, as well as those being reviewed by other team members. This results in more people available who can make themes live on WordPress.org.</p>\n<p>Experienced theme reviewers who want to join are encouraged to comment on the <a href=\"http://make.wordpress.org/themes/2014/09/05/call-for-theme-review-mentors/\" target=\"_blank\">announcement post</a> with their WordPress.org usernames to be added to the list of available mentors.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 21:25:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:49;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"WPTavern: Flywheel Hosting Secures $1.2M In Funding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://wptavern.com/?p=29960\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wptavern.com/flywheel-hosting-secures-1-2m-in-funding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3846:\"<p>At this time last year, Flywheel Hosting <a title=\"http://wptavern.com/flywheel-hosting-opens-to-the-public\" href=\"http://wptavern.com/flywheel-hosting-opens-to-the-public\">opened its doors</a> to the public. Today, the <a title=\"http://getflywheel.com/announcing-the-flywheel-seed-funding/\" href=\"http://getflywheel.com/announcing-the-flywheel-seed-funding/\">company announced</a> it has secured $1.2M in seed funding. The round was led by <a href=\"http://linseedcapital.com\">Linseed Capital</a>, with participation from the <a href=\"http://nebraskaangels.org\">Nebraska Angels</a>, <a href=\"http://ludlowventures.com\">Ludlow Ventures</a> out of Detroit, <a href=\"http://lightbank.com\">Lightbank</a> and <a href=\"http://hydeparkvp.com\">Hyde Park Venture Partners</a> out of Chicago, and <a href=\"http://rosepaul.com/\">Rose Paul Ventures</a> out of NYC.</p>\n<p><a href=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/FlywheelLogoOrange.png\" rel=\"prettyphoto[29960]\"><img class=\"aligncenter size-full wp-image-29976\" src=\"http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/FlywheelLogoOrange.png?resize=492%2C160\" alt=\"Flywheel Logo Orange\" /></a></p>\n<p>Flywheel will use the funding to expand their team and infrastructure. Also as part of the announcement, Flywheel now offers bulk pricing plans. Bulk pricing starts with 10 sites with 150,000 visits for $100 a month and 25 sites with 500,000 visits for $250 a month. Flywheel hosting plans for small sites begin at $15 a month for sites with 5,000 visits. Since the customer base is mainly website designers and agencies, these new plans make sense, especially for managing all of their client sites in one location.</p>\n<h2>Managing A Growth Phase</h2>\n<p><a title=\"http://www.matthewwoodward.co.uk/reviews/webhost-trusted-wp-engine-hijacked-business-avoid-them/\" href=\"http://www.matthewwoodward.co.uk/reviews/webhost-trusted-wp-engine-hijacked-business-avoid-them/\">Some customers</a> of WPEngine have suggested that the company&#8217;s rapid growth resulted in lackluster support and reliable service during the height of its popularity. Earlier this year, an article on the WPEngine blog entitled <a title=\"http://wpengine.com/2014/05/21/growth-hard/\" href=\"http://wpengine.com/2014/05/21/growth-hard/\">Growth Is Hard,</a> explained the growing pains the company experienced.</p>\n<p>I asked the co-founder and CEO of Flywheel, Dusty Davidson, how he plans to manage the next phase of Flywheel.</p>\n<blockquote><p>We&#8217;re very aware of how hard it is to scale a support organization. We&#8217;re investing heavily in great people, great automation, tools, and other things to do our absolute best to provide the level of support that our customers have come to expect. It&#8217;s core to our mission to provide service at that level, even at scale and we&#8217;ll do what it takes to accomplish that.</p></blockquote>\n<p>It&#8217;s rare to see so many people compliment a webhosting provider but that&#8217;s what I&#8217;ve witnessed over the past year. Through Twitter, WordCamps, and other venues, <a title=\"https://imajworks.com/2013/11/14/five-reasons-love-flywheel/\" href=\"https://imajworks.com/2013/11/14/five-reasons-love-flywheel/\">customers appear</a> to be unanimously happy with Flywheel. It will be interesting to see if the company can scale at a fast rate while maintaining their signature level of quality service and support.</p>\n<h2>Tell Us About Your Experience With FlyWheel</h2>\n<p>With so many companies in the managed WordPress hosting market, it&#8217;s encouraging to see a startup proving to be a hit amongst its customers. Instead of going after everyone, FlyWheel has carved out a niche within the market and is doing well. If you are a current or existing customer of FlyWheel Hosting, tell us about your experience in the comments.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 20:42:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:10:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Thu, 18 Sep 2014 01:15:06 GMT\";s:12:\"content-type\";s:8:\"text/xml\";s:14:\"content-length\";s:6:\"209276\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:13:\"last-modified\";s:29:\"Thu, 18 Sep 2014 01:00:13 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 249\";s:13:\"accept-ranges\";s:5:\"bytes\";}s:5:\"build\";s:14:\"20140611021551\";}','no'),(5679,'_transient_timeout_feed_mod_867bd5c64f85878d03a060509cd2f92c','1411046106','no'),(5680,'_transient_feed_mod_867bd5c64f85878d03a060509cd2f92c','1411002906','no'),(5681,'_transient_timeout_feed_b9388c83948825c1edaef0d856b7b109','1411046107','no'),(5682,'_transient_feed_b9388c83948825c1edaef0d856b7b109','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n	\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:72:\"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"WordPress Plugins » View: Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"https://wordpress.org/plugins/browse/popular/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"WordPress Plugins » View: Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 18 Sep 2014 00:59:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://bbpress.org/?v=1.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"WordPress SEO by Yoast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"https://wordpress.org/plugins/wordpress-seo/#post-8321\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 Jan 2009 20:34:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"8321@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:131:\"Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using Yoast&#039;s WordPress SEO plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Contact Form 7\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://wordpress.org/plugins/contact-form-7/#post-2141\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Aug 2007 12:45:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2141@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Just another contact form plugin. Simple but flexible.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Takayuki Miyoshi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Akismet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://wordpress.org/plugins/akismet/#post-15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:11:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"15@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"Akismet checks your comments against the Akismet Web service to see if they look like spam or not.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Wordfence Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/wordfence/#post-29832\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 04 Sep 2011 03:13:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"29832@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:137:\"Wordfence Security is a free enterprise class security and performance plugin that makes your site up to 50 times faster and more secure.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Wordfence\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WooCommerce - excelling eCommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/plugins/woocommerce/#post-29860\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Sep 2011 08:13:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"29860@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"WooCommerce is a powerful, extendable eCommerce plugin that helps you sell anything. Beautifully.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"WooThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Google XML Sitemaps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"https://wordpress.org/plugins/google-sitemap-generator/#post-132\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:31:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"132@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"This plugin will generate a special XML sitemap which will help search engines to better index your blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"arnee\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"All in One SEO Pack\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"https://wordpress.org/plugins/all-in-one-seo-pack/#post-753\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Mar 2007 20:08:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"753@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:126:\"All in One SEO Pack is a WordPress SEO plugin to automatically optimize your WordPress blog for Search Engines such as Google.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"uberdose\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"iThemes Security (formerly Better WP Security)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/better-wp-security/#post-21738\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 22 Oct 2010 22:06:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"21738@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"The easiest, most effective way to secure WordPress in seconds.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Chris Wiegman\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"MailPoet Newsletters\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/wysija-newsletters/#post-32629\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 02 Dec 2011 17:09:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"32629@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"Send newsletters, post notifications or autoresponders from WordPress easily, and beautifully.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"MailPoet Staff\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"TinyMCE Advanced\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://wordpress.org/plugins/tinymce-advanced/#post-2082\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Jun 2007 15:00:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2082@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"Enables the advanced features of TinyMCE, the WordPress WYSIWYG editor.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Andrew Ozz\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Jetpack by WordPress.com\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://wordpress.org/plugins/jetpack/#post-23862\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Jan 2011 02:21:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"23862@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"Supercharge your WordPress site with powerful features previously only available to WordPress.com users.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Tim Moore\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Google Analytics by Yoast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wordpress.org/plugins/google-analytics-for-wordpress/#post-2316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2007 12:15:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2316@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:124:\"Track your WordPress site easily with the latest tracking codes and lots added data for search result pages and error pages.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WordPress Importer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/wordpress-importer/#post-18101\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 17:42:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"18101@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"Import posts, pages, comments, custom fields, categories, tags and more from a WordPress export file.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Brian Colinger\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"WP-PageNavi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/wp-pagenavi/#post-363\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 23:17:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"363@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"Adds a more advanced paging navigation interface.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Lester Chan\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"NextGEN Gallery\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/plugins/nextgen-gallery/#post-1169\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 23 Apr 2007 20:08:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"1169@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:121:\"The most popular WordPress gallery plugin and one of the most popular plugins of all time with over 10 million downloads.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Alex Rabe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:46:\"https://wordpress.org/plugins/rss/view/popular\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:11:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Thu, 18 Sep 2014 01:15:07 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:7:\"expires\";s:29:\"Thu, 18 Sep 2014 01:34:44 GMT\";s:13:\"cache-control\";s:0:\"\";s:6:\"pragma\";s:0:\"\";s:13:\"last-modified\";s:31:\"Thu, 18 Sep 2014 00:59:44 +0000\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 249\";}s:5:\"build\";s:14:\"20140611021551\";}','no'),(5683,'_transient_timeout_feed_mod_b9388c83948825c1edaef0d856b7b109','1411046107','no'),(5684,'_transient_feed_mod_b9388c83948825c1edaef0d856b7b109','1411002907','no'),(5685,'_transient_timeout_plugin_slugs','1411089307','no'),(5686,'_transient_plugin_slugs','a:9:{i:0;s:19:\"akismet/akismet.php\";i:1;s:26:\"custom-field-suite/cfs.php\";i:2;s:32:\"disqus-comment-system/disqus.php\";i:3;s:45:\"enable-media-replace/enable-media-replace.php\";i:4;s:9:\"hello.php\";i:5;s:37:\"post-types-order/post-types-order.php\";i:6;s:39:\"search-everything/search-everything.php\";i:7;s:39:\"syntaxhighlighter/syntaxhighlighter.php\";i:8;s:53:\"velvet-blues-update-urls/velvet-blues-update-urls.php\";}','no'),(5687,'_transient_timeout_dash_4077549d03da2e451c8b5f002294ff51','1411046107','no'),(5688,'_transient_dash_4077549d03da2e451c8b5f002294ff51','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://wordpress.org/news/2014/09/benny/\'>WordPress 4.0 “Benny”</a> <span class=\"rss-date\">September 4, 2014</span><div class=\"rssSummary\">Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader Benny Goodman, is available for download or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we’ve put a little extra polish into it. This release brings you a smoother writing and management experience [&hellip;]</div></li></ul></div><div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'http://wptavern.com/netropolitan-facebook-for-rich-people-is-powered-by-wordpress-and-buddypress\'>WPTavern: Netropolitan “Facebook for Rich People” is Powered by WordPress and BuddyPress</a></li><li><a class=\'rsswidget\' href=\'http://wptavern.com/edit-wordpress-posts-and-postmeta-in-the-customizer\'>WPTavern: Edit WordPress Posts and Postmeta in the Customizer</a></li><li><a class=\'rsswidget\' href=\'http://ma.tt/2014/09/merchbar/\'>Matt: Merchbar</a></li></ul></div><div class=\"rss-widget\"><ul><li class=\'dashboard-news-plugin\'><span>Popular Plugin:</span> <a href=\'https://wordpress.org/plugins/woocommerce/\' class=\'dashboard-news-plugin-link\'>WooCommerce - excelling eCommerce</a>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=woocommerce&amp;_wpnonce=2d904a6426&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'WooCommerce - excelling eCommerce\'>Install</a>)</span></li></ul></div>','no'),(5721,'_transient_is_multi_author','0','yes'),(6151,'_site_transient_timeout_theme_roots','1411643593','yes'),(6152,'_site_transient_theme_roots','a:4:{s:12:\"the_societea\";s:7:\"/themes\";s:14:\"twentyfourteen\";s:7:\"/themes\";s:14:\"twentythirteen\";s:7:\"/themes\";s:12:\"twentytwelve\";s:7:\"/themes\";}','yes'),(6153,'_site_transient_update_plugins','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1411641795;s:8:\"response\";a:1:{s:26:\"custom-field-suite/cfs.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:5:\"26058\";s:4:\"slug\";s:18:\"custom-field-suite\";s:6:\"plugin\";s:26:\"custom-field-suite/cfs.php\";s:11:\"new_version\";s:5:\"2.3.7\";s:3:\"url\";s:49:\"https://wordpress.org/plugins/custom-field-suite/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/plugin/custom-field-suite.zip\";}}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:8:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:2:\"15\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"3.0.2\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.3.0.2.zip\";}s:32:\"disqus-comment-system/disqus.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:4:\"4500\";s:4:\"slug\";s:21:\"disqus-comment-system\";s:6:\"plugin\";s:32:\"disqus-comment-system/disqus.php\";s:11:\"new_version\";s:4:\"2.77\";s:3:\"url\";s:52:\"https://wordpress.org/plugins/disqus-comment-system/\";s:7:\"package\";s:69:\"https://downloads.wordpress.org/plugin/disqus-comment-system.2.77.zip\";}s:45:\"enable-media-replace/enable-media-replace.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:4:\"8351\";s:4:\"slug\";s:20:\"enable-media-replace\";s:6:\"plugin\";s:45:\"enable-media-replace/enable-media-replace.php\";s:11:\"new_version\";s:3:\"3.0\";s:3:\"url\";s:51:\"https://wordpress.org/plugins/enable-media-replace/\";s:7:\"package\";s:63:\"https://downloads.wordpress.org/plugin/enable-media-replace.zip\";}s:9:\"hello.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:4:\"3564\";s:4:\"slug\";s:11:\"hello-dolly\";s:6:\"plugin\";s:9:\"hello.php\";s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/hello-dolly/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/hello-dolly.1.6.zip\";}s:37:\"post-types-order/post-types-order.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:5:\"17292\";s:4:\"slug\";s:16:\"post-types-order\";s:6:\"plugin\";s:37:\"post-types-order/post-types-order.php\";s:11:\"new_version\";s:5:\"1.7.4\";s:3:\"url\";s:47:\"https://wordpress.org/plugins/post-types-order/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/plugin/post-types-order.zip\";}s:39:\"search-everything/search-everything.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:3:\"269\";s:4:\"slug\";s:17:\"search-everything\";s:6:\"plugin\";s:39:\"search-everything/search-everything.php\";s:11:\"new_version\";s:5:\"8.1.2\";s:3:\"url\";s:48:\"https://wordpress.org/plugins/search-everything/\";s:7:\"package\";s:66:\"https://downloads.wordpress.org/plugin/search-everything.8.1.2.zip\";}s:39:\"syntaxhighlighter/syntaxhighlighter.php\";O:8:\"stdClass\":7:{s:2:\"id\";s:3:\"933\";s:4:\"slug\";s:17:\"syntaxhighlighter\";s:6:\"plugin\";s:39:\"syntaxhighlighter/syntaxhighlighter.php\";s:11:\"new_version\";s:6:\"3.1.10\";s:14:\"upgrade_notice\";s:26:\"Important security update.\";s:3:\"url\";s:48:\"https://wordpress.org/plugins/syntaxhighlighter/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/plugin/syntaxhighlighter.zip\";}s:53:\"velvet-blues-update-urls/velvet-blues-update-urls.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:4:\"4884\";s:4:\"slug\";s:24:\"velvet-blues-update-urls\";s:6:\"plugin\";s:53:\"velvet-blues-update-urls/velvet-blues-update-urls.php\";s:11:\"new_version\";s:5:\"3.2.2\";s:3:\"url\";s:55:\"https://wordpress.org/plugins/velvet-blues-update-urls/\";s:7:\"package\";s:73:\"https://downloads.wordpress.org/plugin/velvet-blues-update-urls.3.2.2.zip\";}}}','yes');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=4716 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (2,4,'_edit_last','1'),(3,4,'_wp_page_template','home.php'),(4,4,'_edit_lock','1408455945:1'),(5,6,'_edit_last','1'),(6,6,'_edit_lock','1402031384:1'),(7,6,'_wp_page_template','about.php'),(8,8,'_edit_last','1'),(9,8,'_edit_lock','1402442057:1'),(10,8,'cfs_fields','a:2:{i:0;a:8:{s:2:\"id\";s:1:\"1\";s:4:\"name\";s:12:\"header_image\";s:5:\"label\";s:12:\"Header Image\";s:4:\"type\";s:4:\"file\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:0;s:7:\"options\";a:2:{s:12:\"return_value\";s:3:\"url\";s:8:\"required\";s:1:\"0\";}}i:1;a:8:{s:2:\"id\";s:2:\"16\";s:4:\"name\";s:9:\"post_type\";s:5:\"label\";s:9:\"Post Type\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:1;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}}'),(11,8,'cfs_rules','a:1:{s:14:\"page_templates\";a:2:{s:8:\"operator\";s:2:\"==\";s:6:\"values\";a:2:{i:0;s:9:\"posts.php\";i:1;s:10:\"skills.php\";}}}'),(12,8,'cfs_extras','a:3:{s:5:\"order\";s:1:\"0\";s:7:\"context\";s:6:\"normal\";s:11:\"hide_editor\";s:1:\"0\";}'),(13,9,'_wp_attached_file','2014/06/beer-header.jpg'),(14,9,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:400;s:4:\"file\";s:23:\"2014/06/beer-header.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:23:\"beer-header-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"beer-header-300x80.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:80;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:24:\"beer-header-1024x273.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:273;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(16,10,'_edit_last','1'),(17,10,'_wp_page_template','default'),(18,10,'_edit_lock','1402464867:1'),(19,13,'_edit_last','1'),(20,13,'_wp_page_template','skills.php'),(21,13,'_edit_lock','1411003665:1'),(24,16,'_edit_last','1'),(25,16,'_wp_page_template','posts.php'),(26,16,'_edit_lock','1406558153:1'),(27,18,'_menu_item_type','post_type'),(28,18,'_menu_item_menu_item_parent','0'),(29,18,'_menu_item_object_id','4'),(30,18,'_menu_item_object','page'),(31,18,'_menu_item_target',''),(32,18,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(33,18,'_menu_item_xfn',''),(34,18,'_menu_item_url',''),(35,18,'_menu_item_orphaned','1401770143'),(36,19,'_menu_item_type','post_type'),(37,19,'_menu_item_menu_item_parent','0'),(38,19,'_menu_item_object_id','6'),(39,19,'_menu_item_object','page'),(40,19,'_menu_item_target',''),(41,19,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(42,19,'_menu_item_xfn',''),(43,19,'_menu_item_url',''),(44,19,'_menu_item_orphaned','1401770143'),(45,20,'_menu_item_type','post_type'),(46,20,'_menu_item_menu_item_parent','0'),(47,20,'_menu_item_object_id','16'),(48,20,'_menu_item_object','page'),(49,20,'_menu_item_target',''),(50,20,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(51,20,'_menu_item_xfn',''),(52,20,'_menu_item_url',''),(53,20,'_menu_item_orphaned','1401770143'),(54,21,'_menu_item_type','post_type'),(55,21,'_menu_item_menu_item_parent','0'),(56,21,'_menu_item_object_id','13'),(57,21,'_menu_item_object','page'),(58,21,'_menu_item_target',''),(59,21,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(60,21,'_menu_item_xfn',''),(61,21,'_menu_item_url',''),(62,21,'_menu_item_orphaned','1401770143'),(63,22,'_menu_item_type','post_type'),(64,22,'_menu_item_menu_item_parent','0'),(65,22,'_menu_item_object_id','4'),(66,22,'_menu_item_object','page'),(67,22,'_menu_item_target',''),(68,22,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(69,22,'_menu_item_xfn',''),(70,22,'_menu_item_url',''),(71,22,'_menu_item_orphaned','1401770143'),(72,23,'_menu_item_type','post_type'),(73,23,'_menu_item_menu_item_parent','0'),(74,23,'_menu_item_object_id','10'),(75,23,'_menu_item_object','page'),(76,23,'_menu_item_target',''),(77,23,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(78,23,'_menu_item_xfn',''),(79,23,'_menu_item_url',''),(80,23,'_menu_item_orphaned','1401770143'),(81,24,'_menu_item_type','post_type'),(82,24,'_menu_item_menu_item_parent','0'),(83,24,'_menu_item_object_id','4'),(84,24,'_menu_item_object','page'),(85,24,'_menu_item_target',''),(86,24,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(87,24,'_menu_item_xfn',''),(88,24,'_menu_item_url',''),(89,24,'_menu_item_orphaned','1401770285'),(90,25,'_menu_item_type','post_type'),(91,25,'_menu_item_menu_item_parent','0'),(92,25,'_menu_item_object_id','6'),(93,25,'_menu_item_object','page'),(94,25,'_menu_item_target',''),(95,25,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(96,25,'_menu_item_xfn',''),(97,25,'_menu_item_url',''),(99,26,'_menu_item_type','post_type'),(100,26,'_menu_item_menu_item_parent','0'),(101,26,'_menu_item_object_id','16'),(102,26,'_menu_item_object','page'),(103,26,'_menu_item_target',''),(104,26,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(105,26,'_menu_item_xfn',''),(106,26,'_menu_item_url',''),(108,27,'_menu_item_type','post_type'),(109,27,'_menu_item_menu_item_parent','0'),(110,27,'_menu_item_object_id','13'),(111,27,'_menu_item_object','page'),(112,27,'_menu_item_target',''),(113,27,'_menu_item_classes','a:1:{i:0;s:15:\"nav-call-action\";}'),(114,27,'_menu_item_xfn',''),(115,27,'_menu_item_url',''),(117,28,'_menu_item_type','post_type'),(118,28,'_menu_item_menu_item_parent','0'),(119,28,'_menu_item_object_id','4'),(120,28,'_menu_item_object','page'),(121,28,'_menu_item_target',''),(122,28,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(123,28,'_menu_item_xfn',''),(124,28,'_menu_item_url',''),(125,28,'_menu_item_orphaned','1401770285'),(135,30,'_edit_last','1'),(136,30,'_edit_lock','1405377117:1'),(137,30,'_wp_page_template','posts.php'),(138,32,'_menu_item_type','post_type'),(139,32,'_menu_item_menu_item_parent','0'),(140,32,'_menu_item_object_id','30'),(141,32,'_menu_item_object','page'),(142,32,'_menu_item_target',''),(143,32,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(144,32,'_menu_item_xfn',''),(145,32,'_menu_item_url',''),(148,6,'header_image','9'),(149,35,'_wp_attached_file','2014/06/stockvault-atlantic-sunset135250.jpg'),(150,35,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:1000;s:4:\"file\";s:44:\"2014/06/stockvault-atlantic-sunset135250.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"stockvault-atlantic-sunset135250-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"stockvault-atlantic-sunset135250-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:45:\"stockvault-atlantic-sunset135250-1024x682.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:682;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";d:22;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:12:\"Canon EOS 7D\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:2:\"12\";s:3:\"iso\";s:3:\"100\";s:13:\"shutter_speed\";s:3:\"0.5\";s:5:\"title\";s:0:\"\";}}'),(153,37,'_edit_last','1'),(154,37,'_edit_lock','1402367051:1'),(155,37,'cfs_fields','a:10:{i:0;a:8:{s:2:\"id\";s:1:\"7\";s:4:\"name\";s:12:\"project_type\";s:5:\"label\";s:12:\"Project Type\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:0;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:1;a:8:{s:2:\"id\";s:1:\"6\";s:4:\"name\";s:9:\"languages\";s:5:\"label\";s:9:\"Languages\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:1;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:2;a:8:{s:2:\"id\";s:1:\"8\";s:4:\"name\";s:4:\"role\";s:5:\"label\";s:4:\"Role\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:2;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:3;a:8:{s:2:\"id\";s:1:\"9\";s:4:\"name\";s:4:\"link\";s:5:\"label\";s:4:\"Link\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:3;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:4;a:8:{s:2:\"id\";i:10;s:4:\"name\";s:7:\"company\";s:5:\"label\";s:7:\"Company\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:4;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:5;a:8:{s:2:\"id\";i:11;s:4:\"name\";s:12:\"company_link\";s:5:\"label\";s:12:\"Company Link\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:5;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:6;a:8:{s:2:\"id\";s:1:\"2\";s:4:\"name\";s:11:\"screenshots\";s:5:\"label\";s:11:\"Screenshots\";s:4:\"type\";s:4:\"loop\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:6;s:7:\"options\";a:3:{s:11:\"row_display\";s:1:\"0\";s:9:\"row_label\";s:22:\"Screenshot - {caption}\";s:12:\"button_label\";s:7:\"Add Row\";}}i:7;a:8:{s:2:\"id\";s:1:\"3\";s:4:\"name\";s:9:\"thumbnail\";s:5:\"label\";s:9:\"Thumbnail\";s:4:\"type\";s:4:\"file\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:2;s:6:\"weight\";i:7;s:7:\"options\";a:2:{s:12:\"return_value\";s:3:\"url\";s:8:\"required\";s:1:\"0\";}}i:8;a:8:{s:2:\"id\";s:1:\"4\";s:4:\"name\";s:5:\"image\";s:5:\"label\";s:5:\"Image\";s:4:\"type\";s:4:\"file\";s:5:\"notes\";s:10:\"Real Image\";s:9:\"parent_id\";i:2;s:6:\"weight\";i:8;s:7:\"options\";a:2:{s:12:\"return_value\";s:3:\"url\";s:8:\"required\";s:1:\"0\";}}i:9;a:8:{s:2:\"id\";s:1:\"5\";s:4:\"name\";s:7:\"caption\";s:5:\"label\";s:7:\"Caption\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:2;s:6:\"weight\";i:9;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}}'),(156,37,'cfs_rules','a:1:{s:10:\"post_types\";a:2:{s:8:\"operator\";s:2:\"==\";s:6:\"values\";a:1:{i:0;s:7:\"project\";}}}'),(157,37,'cfs_extras','a:3:{s:5:\"order\";s:1:\"0\";s:7:\"context\";s:6:\"normal\";s:11:\"hide_editor\";s:1:\"0\";}'),(158,38,'_edit_last','1'),(159,38,'_edit_lock','1408399762:1'),(160,39,'_wp_attached_file','2014/06/th-77nrg.png'),(161,39,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:447;s:4:\"file\";s:20:\"2014/06/th-77nrg.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-77nrg-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-77nrg-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(162,40,'_wp_attached_file','2014/06/th-baton.png'),(163,40,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:450;s:4:\"file\";s:20:\"2014/06/th-baton.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-baton-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-baton-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(164,41,'_wp_attached_file','2014/06/th-carnegie-chart.png'),(165,41,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:451;s:6:\"height\";i:451;s:4:\"file\";s:29:\"2014/06/th-carnegie-chart.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"th-carnegie-chart-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"th-carnegie-chart-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(166,42,'_wp_attached_file','2014/06/th-enviro.png'),(167,42,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:448;s:4:\"file\";s:21:\"2014/06/th-enviro.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-enviro-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-enviro-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(168,43,'_wp_attached_file','2014/06/th-soundingboard.png'),(169,43,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:447;s:4:\"file\";s:28:\"2014/06/th-soundingboard.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-soundingboard-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-soundingboard-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(170,44,'_wp_attached_file','2014/06/th-tea-chart.png'),(171,44,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:448;s:4:\"file\";s:24:\"2014/06/th-tea-chart.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:24:\"th-tea-chart-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:24:\"th-tea-chart-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(172,45,'_wp_attached_file','2014/06/th-tea-timers.png'),(173,45,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:451;s:6:\"height\";i:449;s:4:\"file\";s:25:\"2014/06/th-tea-timers.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:25:\"th-tea-timers-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:25:\"th-tea-timers-300x298.png\";s:5:\"width\";i:300;s:6:\"height\";i:298;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(174,46,'_wp_attached_file','2014/06/th-tle.png'),(175,46,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:452;s:4:\"file\";s:18:\"2014/06/th-tle.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:18:\"th-tle-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:18:\"th-tle-298x300.png\";s:5:\"width\";i:298;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(200,47,'_wp_attached_file','2014/06/big-77-1.jpg'),(201,47,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:663;s:4:\"file\";s:20:\"2014/06/big-77-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-1-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-1-1024x565.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:565;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(202,48,'_wp_attached_file','2014/06/big-77-2.jpg'),(203,48,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:662;s:4:\"file\";s:20:\"2014/06/big-77-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-2-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-2-1024x564.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:564;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(204,49,'_wp_attached_file','2014/06/big-77-3.jpg'),(205,49,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:662;s:4:\"file\";s:20:\"2014/06/big-77-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-3-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-3-1024x564.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:564;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(206,50,'_wp_attached_file','2014/06/big-77-4.jpg'),(207,50,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:664;s:4:\"file\";s:20:\"2014/06/big-77-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-4-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-4-1024x566.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:566;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(208,51,'_wp_attached_file','2014/06/big-tle-1.jpg'),(209,51,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:760;s:4:\"file\";s:21:\"2014/06/big-tle-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"big-tle-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-tle-1-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:22:\"big-tle-1-1024x648.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:648;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(210,52,'_wp_attached_file','2014/06/big-tle-2.jpg'),(211,52,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:759;s:4:\"file\";s:21:\"2014/06/big-tle-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"big-tle-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-tle-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:22:\"big-tle-2-1024x647.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:647;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(212,53,'_wp_attached_file','2014/06/big-tle-3.jpg'),(213,53,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:756;s:4:\"file\";s:21:\"2014/06/big-tle-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"big-tle-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-tle-3-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:22:\"big-tle-3-1024x645.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:645;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(214,54,'_wp_attached_file','2014/06/big-tle-4.jpg'),(215,54,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:756;s:4:\"file\";s:21:\"2014/06/big-tle-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"big-tle-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-tle-4-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:22:\"big-tle-4-1024x645.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:645;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(216,55,'_wp_attached_file','2014/06/th-77-1.jpg'),(217,55,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:221;s:4:\"file\";s:19:\"2014/06/th-77-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-1-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(218,56,'_wp_attached_file','2014/06/th-77-2.jpg'),(219,56,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:221;s:4:\"file\";s:19:\"2014/06/th-77-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-2-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(220,57,'_wp_attached_file','2014/06/th-77-3.jpg'),(221,57,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:221;s:4:\"file\";s:19:\"2014/06/th-77-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-3-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(222,58,'_wp_attached_file','2014/06/th-77-4.jpg'),(223,58,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:221;s:4:\"file\";s:19:\"2014/06/th-77-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-4-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(226,60,'_wp_attached_file','2014/06/th-tle-2.jpg'),(227,60,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:20:\"2014/06/th-tle-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-tle-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-tle-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(228,61,'_wp_attached_file','2014/06/th-tle-3.jpg'),(229,61,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:252;s:4:\"file\";s:20:\"2014/06/th-tle-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-tle-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-tle-3-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(230,62,'_wp_attached_file','2014/06/th-tle-4.jpg'),(231,62,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:252;s:4:\"file\";s:20:\"2014/06/th-tle-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-tle-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-tle-4-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(244,63,'_edit_last','1'),(245,63,'_edit_lock','1408399696:1'),(403,64,'_edit_last','1'),(404,64,'_edit_lock','1408399706:1'),(429,65,'_edit_last','1'),(430,65,'_edit_lock','1408399721:1'),(437,66,'_edit_last','1'),(438,66,'_edit_lock','1402207887:1'),(445,67,'_edit_last','1'),(446,67,'_edit_lock','1408400264:1'),(465,68,'_edit_last','1'),(466,68,'_edit_lock','1408399747:1'),(473,69,'_edit_last','1'),(474,69,'_edit_lock','1408400342:1'),(481,70,'_edit_last','1'),(482,70,'_edit_lock','1408400531:1'),(489,71,'_edit_last','1'),(490,71,'_edit_lock','1408400324:1'),(497,72,'_wp_attached_file','2014/06/big-77-responsive.jpg'),(498,72,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:770;s:6:\"height\";i:1372;s:4:\"file\";s:29:\"2014/06/big-77-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-77-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-77-responsive-168x300.jpg\";s:5:\"width\";i:168;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:30:\"big-77-responsive-574x1024.jpg\";s:5:\"width\";i:574;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(499,73,'_wp_attached_file','2014/06/big-es-responsive.jpg'),(500,73,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:628;s:4:\"file\";s:29:\"2014/06/big-es-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-es-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-es-responsive-191x300.jpg\";s:5:\"width\";i:191;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(501,74,'_wp_attached_file','2014/06/th-77-responsive.jpg'),(502,74,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:649;s:4:\"file\";s:28:\"2014/06/th-77-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-77-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-77-responsive-184x300.jpg\";s:5:\"width\";i:184;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(523,76,'_wp_attached_file','2014/06/big-tle-responsive.jpg'),(524,76,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:763;s:6:\"height\";i:1200;s:4:\"file\";s:30:\"2014/06/big-tle-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:30:\"big-tle-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:30:\"big-tle-responsive-190x300.jpg\";s:5:\"width\";i:190;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:31:\"big-tle-responsive-651x1024.jpg\";s:5:\"width\";i:651;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(545,78,'_wp_attached_file','2014/06/big-bt-1.jpg'),(546,78,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:860;s:4:\"file\";s:20:\"2014/06/big-bt-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-bt-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-bt-1-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-bt-1-1024x733.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:733;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(547,79,'_wp_attached_file','2014/06/big-bt-2.jpg'),(548,79,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:860;s:4:\"file\";s:20:\"2014/06/big-bt-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-bt-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-bt-2-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-bt-2-1024x733.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:733;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(549,80,'_wp_attached_file','2014/06/big-bt-3.jpg'),(550,80,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:863;s:4:\"file\";s:20:\"2014/06/big-bt-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-bt-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-bt-3-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-bt-3-1024x736.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:736;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(551,81,'_wp_attached_file','2014/06/big-bt-4.jpg'),(552,81,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:661;s:4:\"file\";s:20:\"2014/06/big-bt-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-bt-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-bt-4-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-bt-4-1024x564.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:564;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(553,82,'_wp_attached_file','2014/06/big-cc-1.jpg'),(554,82,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:887;s:4:\"file\";s:20:\"2014/06/big-cc-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-cc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-cc-1-300x221.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:221;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-cc-1-1024x756.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:756;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(555,83,'_wp_attached_file','2014/06/big-cc-2.jpg'),(556,83,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:887;s:4:\"file\";s:20:\"2014/06/big-cc-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-cc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-cc-2-300x221.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:221;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-cc-2-1024x756.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:756;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(557,84,'_wp_attached_file','2014/06/big-cc-3.jpg'),(558,84,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:889;s:4:\"file\";s:20:\"2014/06/big-cc-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-cc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-cc-3-300x222.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:222;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-cc-3-1024x758.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:758;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(559,85,'_wp_attached_file','2014/06/big-cc-responsive.jpg'),(560,85,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:534;s:6:\"height\";i:1000;s:4:\"file\";s:29:\"2014/06/big-cc-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-cc-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-cc-responsive-160x300.jpg\";s:5:\"width\";i:160;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(561,86,'_wp_attached_file','2014/06/big-es-1.jpg'),(562,86,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:865;s:4:\"file\";s:20:\"2014/06/big-es-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-es-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-es-1-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-es-1-1024x738.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:738;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(563,87,'_wp_attached_file','2014/06/big-es-2.jpg'),(564,87,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:866;s:4:\"file\";s:20:\"2014/06/big-es-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-es-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-es-2-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-es-2-1024x738.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:738;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(565,88,'_wp_attached_file','2014/06/big-es-3.jpg'),(566,88,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:866;s:4:\"file\";s:20:\"2014/06/big-es-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-es-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-es-3-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-es-3-1024x738.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:738;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(567,89,'_wp_attached_file','2014/06/th-baton1.png'),(568,89,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:450;s:6:\"height\";i:450;s:4:\"file\";s:21:\"2014/06/th-baton1.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-baton1-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-baton1-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(569,90,'_wp_attached_file','2014/06/th-bt-1.jpg'),(570,90,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:287;s:4:\"file\";s:19:\"2014/06/th-bt-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-bt-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-bt-1-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(571,91,'_wp_attached_file','2014/06/th-bt-2.jpg'),(572,91,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:287;s:4:\"file\";s:19:\"2014/06/th-bt-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-bt-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-bt-2-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(573,92,'_wp_attached_file','2014/06/th-bt-3.jpg'),(574,92,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:288;s:4:\"file\";s:19:\"2014/06/th-bt-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-bt-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-bt-3-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(575,93,'_wp_attached_file','2014/06/th-bt-4.jpg'),(576,93,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:220;s:4:\"file\";s:19:\"2014/06/th-bt-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-bt-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-bt-4-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(577,94,'_wp_attached_file','2014/06/th-cc-1.jpg'),(578,94,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:296;s:4:\"file\";s:19:\"2014/06/th-cc-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-cc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-cc-1-300x222.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:222;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(579,95,'_wp_attached_file','2014/06/th-cc-2.jpg'),(580,95,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:296;s:4:\"file\";s:19:\"2014/06/th-cc-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-cc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-cc-2-300x222.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:222;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(581,96,'_wp_attached_file','2014/06/th-cc-3.jpg'),(582,96,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:296;s:4:\"file\";s:19:\"2014/06/th-cc-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-cc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-cc-3-300x222.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:222;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(585,98,'_wp_attached_file','2014/06/th-es-1.jpg'),(586,98,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:288;s:4:\"file\";s:19:\"2014/06/th-es-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-es-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-es-1-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(587,99,'_wp_attached_file','2014/06/th-es-2.jpg'),(588,99,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:289;s:4:\"file\";s:19:\"2014/06/th-es-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-es-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-es-2-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(589,100,'_wp_attached_file','2014/06/th-es-3.jpg'),(590,100,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:289;s:4:\"file\";s:19:\"2014/06/th-es-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-es-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-es-3-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(627,66,'project_type','Web Application'),(628,66,'languages','Ruby on Rails, Javascript, PostgreSQL'),(629,66,'role','Developer'),(630,66,'link','https://batonapp.com/'),(631,66,'company','Brightbit'),(632,66,'company_link','http://brightbit.com/'),(633,66,'thumbnail','90'),(634,66,'image','78'),(635,66,'caption','Home Page (No Icons)'),(636,66,'thumbnail','91'),(637,66,'image','79'),(638,66,'caption','Index View (No Icons)'),(639,66,'thumbnail','92'),(640,66,'image','80'),(641,66,'caption','Show View (No Icons)'),(642,66,'thumbnail','93'),(643,66,'image','81'),(644,66,'caption','Edit View (No Icons)'),(663,101,'_wp_attached_file','2014/06/big-kk-1.jpg'),(664,101,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:863;s:4:\"file\";s:20:\"2014/06/big-kk-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-kk-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-kk-1-300x215.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:215;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-kk-1-1024x736.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:736;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(665,102,'_wp_attached_file','2014/06/big-kk-2.jpg'),(666,102,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:759;s:4:\"file\";s:20:\"2014/06/big-kk-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-kk-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-kk-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-kk-2-1024x647.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:647;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(667,103,'_wp_attached_file','2014/06/big-kk-3.jpg'),(668,103,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:353;s:4:\"file\";s:20:\"2014/06/big-kk-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-kk-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"big-kk-3-300x88.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:88;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-kk-3-1024x301.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:301;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(669,104,'_wp_attached_file','2014/06/big-kk-4.jpg'),(670,104,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:483;s:4:\"file\";s:20:\"2014/06/big-kk-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-kk-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-kk-4-300x120.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:120;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-kk-4-1024x412.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:412;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(671,105,'_wp_attached_file','2014/06/big-mc-1.jpg'),(672,105,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:545;s:4:\"file\";s:20:\"2014/06/big-mc-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-mc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-mc-1-300x136.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:136;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-mc-1-1024x465.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:465;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(673,106,'_wp_attached_file','2014/06/big-mc-2.jpg'),(674,106,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:443;s:4:\"file\";s:20:\"2014/06/big-mc-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-mc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-mc-2-300x110.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:110;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-mc-2-1024x378.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:378;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(675,107,'_wp_attached_file','2014/06/big-sb-1.jpg'),(676,107,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:760;s:4:\"file\";s:20:\"2014/06/big-sb-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-sb-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-sb-1-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-sb-1-1024x648.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:648;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(677,108,'_wp_attached_file','2014/06/big-sb-2.jpg'),(678,108,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:764;s:4:\"file\";s:20:\"2014/06/big-sb-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-sb-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-sb-2-300x191.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:191;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-sb-2-1024x651.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:651;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(679,109,'_wp_attached_file','2014/06/big-sb-3.jpg'),(680,109,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:762;s:4:\"file\";s:20:\"2014/06/big-sb-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-sb-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-sb-3-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-sb-3-1024x650.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:650;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(681,110,'_wp_attached_file','2014/06/big-tc-1.jpg'),(682,110,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:823;s:4:\"file\";s:20:\"2014/06/big-tc-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tc-1-300x205.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:205;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tc-1-1024x702.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:702;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(683,111,'_wp_attached_file','2014/06/big-tc-2.jpg'),(684,111,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:819;s:4:\"file\";s:20:\"2014/06/big-tc-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tc-2-300x204.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:204;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tc-2-1024x698.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:698;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(685,112,'_wp_attached_file','2014/06/big-tc-3.jpg'),(686,112,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:822;s:4:\"file\";s:20:\"2014/06/big-tc-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tc-3-300x205.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:205;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tc-3-1024x701.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:701;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(687,113,'_wp_attached_file','2014/06/big-tc-responsive.jpg'),(688,113,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1090;s:6:\"height\";i:1484;s:4:\"file\";s:29:\"2014/06/big-tc-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-tc-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-tc-responsive-220x300.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:30:\"big-tc-responsive-752x1024.jpg\";s:5:\"width\";i:752;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(689,114,'_wp_attached_file','2014/06/big-tt-1.jpg'),(690,114,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:760;s:4:\"file\";s:20:\"2014/06/big-tt-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tt-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tt-1-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tt-1-1024x648.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:648;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(691,115,'_wp_attached_file','2014/06/big-tt-2.jpg'),(692,115,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:758;s:4:\"file\";s:20:\"2014/06/big-tt-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tt-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tt-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tt-2-1024x646.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:646;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(693,116,'_wp_attached_file','2014/06/big-tt-3.jpg'),(694,116,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:755;s:4:\"file\";s:20:\"2014/06/big-tt-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-tt-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-tt-3-300x188.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:188;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-tt-3-1024x644.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:644;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(695,117,'_wp_attached_file','2014/06/big-tt-responsive.jpg'),(696,117,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:790;s:6:\"height\";i:1478;s:4:\"file\";s:29:\"2014/06/big-tt-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-tt-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-tt-responsive-160x300.jpg\";s:5:\"width\";i:160;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:30:\"big-tt-responsive-547x1024.jpg\";s:5:\"width\";i:547;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(697,118,'_wp_attached_file','2014/06/th-kk-1.jpg'),(698,118,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:288;s:4:\"file\";s:19:\"2014/06/th-kk-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-kk-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-kk-1-300x216.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:216;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(699,119,'_wp_attached_file','2014/06/th-kk-2.jpg'),(700,119,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:19:\"2014/06/th-kk-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-kk-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-kk-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(701,120,'_wp_attached_file','2014/06/th-kk-3.jpg'),(702,120,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:118;s:4:\"file\";s:19:\"2014/06/th-kk-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-kk-3-150x118.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:118;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:18:\"th-kk-3-300x88.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:88;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(703,121,'_wp_attached_file','2014/06/th-kk-4.jpg'),(704,121,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:161;s:4:\"file\";s:19:\"2014/06/th-kk-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-kk-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-kk-4-300x120.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:120;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(705,122,'_wp_attached_file','2014/06/th-mc-1.jpg'),(706,122,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:182;s:4:\"file\";s:19:\"2014/06/th-mc-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-mc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-mc-1-300x136.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:136;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(707,123,'_wp_attached_file','2014/06/th-mc-2.jpg'),(708,123,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:148;s:4:\"file\";s:19:\"2014/06/th-mc-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-mc-2-150x148.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:148;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-mc-2-300x111.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:111;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(709,124,'_wp_attached_file','2014/06/th-sb-1.jpg'),(710,124,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:19:\"2014/06/th-sb-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-sb-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-sb-1-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(711,125,'_wp_attached_file','2014/06/th-sb-2.jpg'),(712,125,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:255;s:4:\"file\";s:19:\"2014/06/th-sb-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-sb-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-sb-2-300x191.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:191;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(713,126,'_wp_attached_file','2014/06/th-sb-3.jpg'),(714,126,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:254;s:4:\"file\";s:19:\"2014/06/th-sb-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-sb-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-sb-3-300x190.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(715,127,'_wp_attached_file','2014/06/th-tc-1.jpg'),(716,127,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:274;s:4:\"file\";s:19:\"2014/06/th-tc-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tc-1-300x205.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:205;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(717,128,'_wp_attached_file','2014/06/th-tc-2.jpg'),(718,128,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:273;s:4:\"file\";s:19:\"2014/06/th-tc-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tc-2-300x204.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:204;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(719,129,'_wp_attached_file','2014/06/th-tc-3.jpg'),(720,129,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:274;s:4:\"file\";s:19:\"2014/06/th-tc-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tc-3-300x205.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:205;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(721,130,'_wp_attached_file','2014/06/th-tc-responsive.jpg'),(722,130,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:545;s:4:\"file\";s:28:\"2014/06/th-tc-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-tc-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-tc-responsive-220x300.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(723,131,'_wp_attached_file','2014/06/th-tt-1.jpg'),(724,131,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:19:\"2014/06/th-tt-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tt-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tt-1-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(725,132,'_wp_attached_file','2014/06/th-tt-2.jpg'),(726,132,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:19:\"2014/06/th-tt-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tt-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tt-2-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(727,133,'_wp_attached_file','2014/06/th-tt-3.jpg'),(728,133,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:252;s:4:\"file\";s:19:\"2014/06/th-tt-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-tt-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-tt-3-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(729,134,'_wp_attached_file','2014/06/th-tt-responsive.jpg'),(730,134,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:748;s:4:\"file\";s:28:\"2014/06/th-tt-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-tt-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-tt-responsive-160x300.jpg\";s:5:\"width\";i:160;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(839,135,'_wp_attached_file','2014/06/th-cc-responsive.jpg'),(840,135,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:350;s:6:\"height\";i:655;s:4:\"file\";s:28:\"2014/06/th-cc-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-cc-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-cc-responsive-160x300.jpg\";s:5:\"width\";i:160;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(841,136,'_wp_attached_file','2014/06/th-es-responsive.jpg'),(842,136,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:350;s:6:\"height\";i:549;s:4:\"file\";s:28:\"2014/06/th-es-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-es-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-es-responsive-191x300.jpg\";s:5:\"width\";i:191;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(843,137,'_wp_attached_file','2014/06/th-tle-1.jpg'),(844,137,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:253;s:4:\"file\";s:20:\"2014/06/th-tle-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"th-tle-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-tle-1-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(845,138,'_wp_attached_file','2014/06/th-tle-responsive.jpg'),(846,138,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:350;s:6:\"height\";i:550;s:4:\"file\";s:29:\"2014/06/th-tle-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"th-tle-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"th-tle-responsive-190x300.jpg\";s:5:\"width\";i:190;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(901,139,'_edit_last','1'),(902,139,'_edit_lock','1402276997:1'),(903,139,'cfs_fields','a:4:{i:0;a:8:{s:2:\"id\";s:2:\"12\";s:4:\"name\";s:8:\"projects\";s:5:\"label\";s:8:\"Projects\";s:4:\"type\";s:4:\"loop\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:0;s:7:\"options\";a:3:{s:11:\"row_display\";s:1:\"0\";s:9:\"row_label\";s:17:\"Project - {label}\";s:12:\"button_label\";s:7:\"Add Row\";}}i:1;a:8:{s:2:\"id\";s:2:\"13\";s:4:\"name\";s:9:\"thumbnail\";s:5:\"label\";s:9:\"Thumbnail\";s:4:\"type\";s:4:\"file\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:12;s:6:\"weight\";i:1;s:7:\"options\";a:2:{s:12:\"return_value\";s:3:\"url\";s:8:\"required\";s:1:\"0\";}}i:2;a:8:{s:2:\"id\";s:2:\"14\";s:4:\"name\";s:5:\"label\";s:5:\"label\";s:5:\"Label\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:12;s:6:\"weight\";i:2;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:3;a:8:{s:2:\"id\";s:2:\"15\";s:4:\"name\";s:3:\"url\";s:5:\"label\";s:3:\"URL\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:12;s:6:\"weight\";i:3;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}}'),(904,139,'cfs_rules','a:1:{s:14:\"page_templates\";a:2:{s:8:\"operator\";s:2:\"==\";s:6:\"values\";a:1:{i:0;s:8:\"home.php\";}}}'),(905,139,'cfs_extras','a:3:{s:5:\"order\";s:1:\"0\";s:7:\"context\";s:6:\"normal\";s:11:\"hide_editor\";s:1:\"0\";}'),(936,140,'_wp_attached_file','2014/06/stockvault-dramatic-landscape106482.jpg'),(937,140,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:1000;s:4:\"file\";s:47:\"2014/06/stockvault-dramatic-landscape106482.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:47:\"stockvault-dramatic-landscape106482-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"stockvault-dramatic-landscape106482-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:48:\"stockvault-dramatic-landscape106482-1024x682.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:682;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";d:4.9000000000000004;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:5:\"E5600\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:4:\"5.69\";s:3:\"iso\";s:2:\"50\";s:13:\"shutter_speed\";s:18:\"0.0022805017103763\";s:5:\"title\";s:0:\"\";}}'),(940,141,'_wp_attached_file','2014/06/stockvault-path-in-nature124348.jpg'),(941,141,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:800;s:4:\"file\";s:43:\"2014/06/stockvault-path-in-nature124348.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:43:\"stockvault-path-in-nature124348-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:43:\"stockvault-path-in-nature124348-300x160.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:160;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:44:\"stockvault-path-in-nature124348-1024x546.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:546;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(946,142,'_edit_last','1'),(947,142,'_edit_lock','1402366993:1'),(954,30,'header_image','35'),(955,30,'post_type','project'),(956,145,'_wp_attached_file','2014/06/stockvault-cabot-trail-hdr133670.jpg'),(957,145,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1500;s:6:\"height\";i:800;s:4:\"file\";s:44:\"2014/06/stockvault-cabot-trail-hdr133670.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"stockvault-cabot-trail-hdr133670-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"stockvault-cabot-trail-hdr133670-300x160.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:160;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:45:\"stockvault-cabot-trail-hdr133670-1024x546.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:546;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(966,150,'_edit_last','1'),(967,150,'_edit_lock','1402369491:1'),(968,150,'cfs_fields','a:6:{i:0;a:8:{s:2:\"id\";s:2:\"17\";s:4:\"name\";s:10:\"categories\";s:5:\"label\";s:10:\"Categories\";s:4:\"type\";s:4:\"loop\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:0;s:6:\"weight\";i:0;s:7:\"options\";a:3:{s:11:\"row_display\";s:1:\"0\";s:9:\"row_label\";s:24:\"Skill - {category_title}\";s:12:\"button_label\";s:12:\"Add Category\";}}i:1;a:8:{s:2:\"id\";s:2:\"18\";s:4:\"name\";s:14:\"category_title\";s:5:\"label\";s:14:\"Category Title\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:17;s:6:\"weight\";i:1;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:2;a:8:{s:2:\"id\";s:2:\"22\";s:4:\"name\";s:5:\"color\";s:5:\"label\";s:5:\"Color\";s:4:\"type\";s:5:\"color\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:17;s:6:\"weight\";i:2;s:7:\"options\";a:1:{s:8:\"required\";s:1:\"0\";}}i:3;a:8:{s:2:\"id\";s:2:\"19\";s:4:\"name\";s:6:\"skills\";s:5:\"label\";s:6:\"Skills\";s:4:\"type\";s:4:\"loop\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:17;s:6:\"weight\";i:3;s:7:\"options\";a:3:{s:11:\"row_display\";s:1:\"0\";s:9:\"row_label\";s:31:\"Skill - {skill} - {percentage}%\";s:12:\"button_label\";s:9:\"Add Skill\";}}i:4;a:8:{s:2:\"id\";s:2:\"20\";s:4:\"name\";s:5:\"skill\";s:5:\"label\";s:5:\"Skill\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:19;s:6:\"weight\";i:4;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}i:5;a:8:{s:2:\"id\";s:2:\"21\";s:4:\"name\";s:10:\"percentage\";s:5:\"label\";s:10:\"Percentage\";s:4:\"type\";s:4:\"text\";s:5:\"notes\";s:0:\"\";s:9:\"parent_id\";i:19;s:6:\"weight\";i:5;s:7:\"options\";a:2:{s:13:\"default_value\";s:0:\"\";s:8:\"required\";s:1:\"0\";}}}'),(969,150,'cfs_rules','a:1:{s:14:\"page_templates\";a:2:{s:8:\"operator\";s:2:\"==\";s:6:\"values\";a:1:{i:0;s:10:\"skills.php\";}}}'),(970,150,'cfs_extras','a:3:{s:5:\"order\";s:1:\"0\";s:7:\"context\";s:6:\"normal\";s:11:\"hide_editor\";s:1:\"0\";}'),(1271,151,'_menu_item_type','custom'),(1272,151,'_menu_item_menu_item_parent','0'),(1273,151,'_menu_item_object_id','151'),(1274,151,'_menu_item_object','custom'),(1275,151,'_menu_item_target',''),(1276,151,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(1277,151,'_menu_item_xfn',''),(1278,151,'_menu_item_url','http://thesocietea.org/resume'),(1821,154,'_edit_last','1'),(1822,154,'_edit_lock','1409319062:1'),(1957,158,'_edit_last','1'),(1958,158,'_edit_lock','1403184805:1'),(1963,167,'_edit_last','1'),(1964,167,'_edit_lock','1404151981:1'),(2385,172,'_edit_last','1'),(2386,172,'_edit_lock','1409793896:1'),(2387,172,'_syntaxhighlighter_encoded','1'),(2774,74,'_edit_lock','1405377184:1'),(2775,206,'_wp_attached_file','2014/07/big-json-1.jpg'),(2776,206,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:720;s:6:\"height\";i:276;s:4:\"file\";s:22:\"2014/07/big-json-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-json-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-json-1-300x115.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:115;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2777,207,'_wp_attached_file','2014/07/big-json-2.jpg'),(2778,207,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:870;s:6:\"height\";i:212;s:4:\"file\";s:22:\"2014/07/big-json-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-json-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-json-2-300x73.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:73;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2779,208,'_wp_attached_file','2014/07/big-json-3.jpg'),(2780,208,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:334;s:4:\"file\";s:22:\"2014/07/big-json-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-json-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"big-json-3-300x83.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:83;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-json-3-1024x285.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:285;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2781,209,'_wp_attached_file','2014/07/big-json-4.jpg'),(2782,209,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:770;s:6:\"height\";i:808;s:4:\"file\";s:22:\"2014/07/big-json-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-json-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-json-4-285x300.jpg\";s:5:\"width\";i:285;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2783,210,'_wp_attached_file','2014/07/th-json-1.jpg'),(2784,210,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:153;s:4:\"file\";s:21:\"2014/07/th-json-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-json-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-json-1-300x114.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:114;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2785,211,'_wp_attached_file','2014/07/th-json-2.jpg'),(2786,211,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:657;s:6:\"height\";i:160;s:4:\"file\";s:21:\"2014/07/th-json-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-json-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-json-2-300x73.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:73;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2787,212,'_wp_attached_file','2014/07/th-json-3.jpg'),(2788,212,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:575;s:6:\"height\";i:160;s:4:\"file\";s:21:\"2014/07/th-json-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-json-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"th-json-3-300x83.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:83;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2789,213,'_wp_attached_file','2014/07/th-json-4.jpg'),(2790,213,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:420;s:4:\"file\";s:21:\"2014/07/th-json-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-json-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-json-4-285x300.jpg\";s:5:\"width\";i:285;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2791,214,'_edit_last','1'),(2792,214,'_edit_lock','1408399735:1'),(2811,215,'_wp_attached_file','2014/07/big-77-1.jpg'),(2812,215,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:686;s:4:\"file\";s:20:\"2014/07/big-77-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"big-77-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"big-77-1-300x171.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:171;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"big-77-1-1024x585.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:585;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2813,216,'_wp_attached_file','2014/07/big-77-responsive.jpg'),(2814,216,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:794;s:6:\"height\";i:1288;s:4:\"file\";s:29:\"2014/07/big-77-responsive.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:29:\"big-77-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:29:\"big-77-responsive-184x300.jpg\";s:5:\"width\";i:184;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:30:\"big-77-responsive-631x1024.jpg\";s:5:\"width\";i:631;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2815,217,'_wp_attached_file','2014/07/th-77-1.jpg'),(2816,217,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:229;s:4:\"file\";s:19:\"2014/07/th-77-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"th-77-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"th-77-1-300x171.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:171;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2817,218,'_wp_attached_file','2014/07/th-77-responsive.jpg'),(2818,218,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:649;s:4:\"file\";s:28:\"2014/07/th-77-responsive.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"th-77-responsive-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"th-77-responsive-184x300.jpg\";s:5:\"width\";i:184;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2861,220,'_edit_last','1'),(2862,220,'_edit_lock','1408729445:1'),(2863,220,'_syntaxhighlighter_encoded','1'),(2864,226,'_wp_attached_file','2014/07/vim_tutor.jpg'),(2865,226,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:500;s:6:\"height\";i:393;s:4:\"file\";s:21:\"2014/07/vim_tutor.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"vim_tutor-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"vim_tutor-300x235.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:235;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2870,16,'header_image','141'),(2871,16,'post_type','post'),(2872,233,'_edit_last','1'),(2873,233,'_edit_lock','1408624829:1'),(2874,233,'_syntaxhighlighter_encoded','1'),(2878,233,'dsq_thread_id','2929367235'),(2881,172,'dsq_thread_id','2929382650'),(2893,220,'dsq_thread_id','2932682347'),(2894,154,'dsq_thread_id','2932682419'),(2903,167,'dsq_thread_id','2933729832'),(2904,158,'dsq_thread_id','2933729884'),(2907,142,'dsq_thread_id','2933750176'),(2911,73,'_edit_lock','1408301920:1'),(2988,252,'_edit_last','1'),(2989,252,'_edit_lock','1408399686:1'),(2996,253,'_wp_attached_file','2014/08/big-odoc-1.jpg'),(2997,253,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:692;s:4:\"file\";s:22:\"2014/08/big-odoc-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-odoc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-odoc-1-300x173.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:173;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-odoc-1-1024x590.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:590;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(2998,254,'_wp_attached_file','2014/08/big-odoc-2.jpg'),(2999,254,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:691;s:4:\"file\";s:22:\"2014/08/big-odoc-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-odoc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-odoc-2-300x172.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:172;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-odoc-2-1024x589.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:589;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3000,255,'_wp_attached_file','2014/08/big-odoc-3.jpg'),(3001,255,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1200;s:6:\"height\";i:693;s:4:\"file\";s:22:\"2014/08/big-odoc-3.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-odoc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-odoc-3-300x173.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:173;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-odoc-3-1024x591.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:591;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3002,256,'_wp_attached_file','2014/08/big-odoc-4.jpg'),(3003,256,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:600;s:6:\"height\";i:1047;s:4:\"file\";s:22:\"2014/08/big-odoc-4.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"big-odoc-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"big-odoc-4-171x300.jpg\";s:5:\"width\";i:171;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"big-odoc-4-586x1024.jpg\";s:5:\"width\";i:586;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3004,257,'_wp_attached_file','2014/08/th-odoc-1.jpg'),(3005,257,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:231;s:4:\"file\";s:21:\"2014/08/th-odoc-1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-odoc-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-odoc-1-300x173.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:173;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3006,258,'_wp_attached_file','2014/08/th-odoc-2.jpg'),(3007,258,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:230;s:4:\"file\";s:21:\"2014/08/th-odoc-2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-odoc-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-odoc-2-300x172.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:172;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3008,259,'_wp_attached_file','2014/08/th-odoc-3.jpg'),(3009,259,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:231;s:4:\"file\";s:21:\"2014/08/th-odoc-3.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-odoc-3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-odoc-3-300x173.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:173;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3010,260,'_wp_attached_file','2014/08/th-odoc-4.jpg'),(3011,260,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:300;s:6:\"height\";i:524;s:4:\"file\";s:21:\"2014/08/th-odoc-4.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:21:\"th-odoc-4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:21:\"th-odoc-4-171x300.jpg\";s:5:\"width\";i:171;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(3048,252,'project_type','Web Site'),(3049,252,'languages','HTML5, Sass, Javascript, PHP (Wordpress)'),(3050,252,'role','Full-Stack Developer'),(3051,252,'link','http://new.okcommerce.gov/'),(3052,252,'company','Staplegun'),(3053,252,'company_link','http://staplegun.us/'),(3054,252,'thumbnail','257'),(3055,252,'image','253'),(3056,252,'caption','Home Page'),(3057,252,'thumbnail','258'),(3058,252,'image','254'),(3059,252,'caption','Subpage'),(3060,252,'thumbnail','259'),(3061,252,'image','255'),(3062,252,'caption','Popup Form'),(3063,252,'thumbnail','260'),(3064,252,'image','256'),(3065,252,'caption','Responsive Design'),(3066,63,'project_type','Web Site'),(3067,63,'languages','HTML5, Sass, Javascript, PHP (Wordpress)'),(3068,63,'role','Full-Stack Developer'),(3069,63,'link','http://77nrg.staplegun.us/'),(3070,63,'company','Staplegun'),(3071,63,'company_link','http://staplegun.us/'),(3072,63,'thumbnail','217'),(3073,63,'image','215'),(3074,63,'caption','Home Page Top (Video Background)'),(3075,63,'thumbnail','56'),(3076,63,'image','48'),(3077,63,'caption','Home Page Bottom (Parallax Background)'),(3078,63,'thumbnail','57'),(3079,63,'image','49'),(3080,63,'caption','Subpage'),(3081,63,'thumbnail','218'),(3082,63,'image','216'),(3083,63,'caption','Responsive Design'),(3084,64,'project_type','Web Site'),(3085,64,'languages','HTML5, Sass, Javascript, PHP (Wordpress)'),(3086,64,'role','Full-Stack Developer'),(3087,64,'link','http://www.enviro-ok.com/'),(3088,64,'company','Staplegun'),(3089,64,'company_link','http://staplegun.us/'),(3090,64,'thumbnail','98'),(3091,64,'image','86'),(3092,64,'caption','Home Page'),(3093,64,'thumbnail','99'),(3094,64,'image','87'),(3095,64,'caption','Subpage with Interactive 3D Images'),(3096,64,'thumbnail','100'),(3097,64,'image','88'),(3098,64,'caption','Subpage with Multiple Job Openings'),(3099,64,'thumbnail','136'),(3100,64,'image','73'),(3101,64,'caption','Responsive Design'),(3102,65,'project_type','Web Application'),(3103,65,'languages','Ember.js, Handlebars, Ruby on Rails, APIs, FayeJS, PostgreSQL'),(3104,65,'role','Back-End Developer - Team'),(3105,65,'link',''),(3106,65,'company','Brightbit'),(3107,65,'company_link','http://brightbit.com/'),(3108,65,'thumbnail','118'),(3109,65,'image','101'),(3110,65,'caption','Chat Room View'),(3111,65,'thumbnail','102'),(3112,65,'image','102'),(3113,65,'caption','Edit User View'),(3114,65,'thumbnail','120'),(3115,65,'image','103'),(3116,65,'caption','Edit Messages Instantly'),(3117,65,'thumbnail','121'),(3118,65,'image','104'),(3119,65,'caption','Log In View'),(3120,214,'project_type','Web Application'),(3121,214,'languages','Node.js, Faye.js'),(3122,214,'role','Back-End Developer'),(3123,214,'link','https://github.com/Staplegun-US/json-api-websocket-wrapper'),(3124,214,'company','Staplegun'),(3125,214,'company_link','http://staplegun.us/'),(3126,214,'thumbnail','213'),(3127,214,'image','209'),(3128,214,'caption','Example Stock Ticker Using JSON API Websocket Wrapper'),(3129,214,'thumbnail','212'),(3130,214,'image','208'),(3131,214,'caption','HTML Interface'),(3132,214,'thumbnail','210'),(3133,214,'image','206'),(3134,214,'caption','Server Logs'),(3135,214,'thumbnail','211'),(3136,214,'image','207'),(3137,214,'caption','Sample Config File'),(3138,68,'project_type','Ruby Gem'),(3139,68,'languages','Ruby'),(3140,68,'role','Back-End Developer'),(3141,68,'link','https://github.com/brightbit/markdown_checkboxes'),(3142,68,'company','Brightbit'),(3143,68,'company_link','http://brightbit.com/'),(3144,68,'thumbnail','123'),(3145,68,'image','106'),(3146,68,'caption','Rendering Markdown Checkboxes'),(3147,68,'thumbnail','122'),(3148,68,'image','105'),(3149,68,'caption','Editing Markdown Checkboxes Text'),(3150,38,'project_type','Web Site'),(3151,38,'languages','HTML5, Sass, Javascript, PHP (ModX)'),(3152,38,'role','Full-Stack Developer'),(3153,38,'link','http://totalenvironmentinc.com/'),(3154,38,'company','Staplegun'),(3155,38,'company_link','http://staplegun.us/'),(3156,38,'thumbnail','137'),(3157,38,'image','51'),(3158,38,'caption','Home Page'),(3159,38,'thumbnail','61'),(3160,38,'image','53'),(3161,38,'caption','Contact Page'),(3162,38,'thumbnail','62'),(3163,38,'image','54'),(3164,38,'caption','Sub Page with Lightbox'),(3165,38,'thumbnail','138'),(3166,38,'image','76'),(3167,38,'caption','Responsive Design'),(3168,67,'project_type','Web Application'),(3169,67,'languages','Ruby on Rails, Javascript, PostgreSQL, E-Commerce (Stripe)'),(3170,67,'role','Back-End Developer - Team'),(3171,67,'link','https://soundingboard.tv/'),(3172,67,'company','Brightbit'),(3173,67,'company_link','http://brightbit.com/'),(3174,67,'thumbnail','124'),(3175,67,'image','107'),(3176,67,'caption','Home Page'),(3177,67,'thumbnail','125'),(3178,67,'image','108'),(3179,67,'caption','Timeslots Index View'),(3180,67,'thumbnail','126'),(3181,67,'image','109'),(3182,67,'caption','New Booking View - Payments Handled via Stripe API'),(3183,71,'project_type','Web Site'),(3184,71,'languages','HTML5, CSS (Foundation), Javascript'),(3185,71,'role','Full-Stack Developer'),(3186,71,'link','http://thesocietea.org/carnegie_chart/'),(3187,71,'company','Personal Project'),(3188,71,'company_link',''),(3189,71,'thumbnail','94'),(3190,71,'image','82'),(3191,71,'caption','Interactive Chart View'),(3192,71,'thumbnail','95'),(3193,71,'image','83'),(3194,71,'caption','Descriptions View'),(3195,71,'thumbnail','96'),(3196,71,'image','84'),(3197,71,'caption','About View'),(3198,71,'thumbnail','135'),(3199,71,'image','85'),(3200,71,'caption','Responsive Design'),(3201,69,'project_type','Web Application'),(3202,69,'languages','HTML5, CSS (Bootstrap), Javascript'),(3203,69,'role','Full-Stack Developer'),(3204,69,'link','http://thesocietea.org/tea_timer/'),(3205,69,'company','Personal Project'),(3206,69,'company_link',''),(3207,69,'thumbnail','131'),(3208,69,'image','114'),(3209,69,'caption','Initial Page Load'),(3210,69,'thumbnail','132'),(3211,69,'image','115'),(3212,69,'caption','Timer Started'),(3213,69,'thumbnail','133'),(3214,69,'image','116'),(3215,69,'caption','Validations and Message'),(3216,69,'thumbnail','134'),(3217,69,'image','117'),(3218,69,'caption','Responsive Design'),(3219,70,'project_type','Web Site'),(3220,70,'languages','HTML5, CSS (Bootstrap), PHP'),(3221,70,'role','Full-Stack Developer'),(3222,70,'link','http://thesocietea.org/tea_steep_chart/'),(3223,70,'company','Personal Project'),(3224,70,'company_link',''),(3225,70,'thumbnail','127'),(3226,70,'image','110'),(3227,70,'caption','Cool Colors Theme'),(3228,70,'thumbnail','128'),(3229,70,'image','111'),(3230,70,'caption','Warm Colors Theme'),(3231,70,'thumbnail','129'),(3232,70,'image','112'),(3233,70,'caption','Color Coded Theme'),(3234,70,'thumbnail','130'),(3235,70,'image','113'),(3236,70,'caption','Responsive Design'),(3309,4,'thumbnail','257'),(3310,4,'label','OK Commerce'),(3311,4,'url','http://new.okcommerce.gov'),(3312,4,'thumbnail','137'),(3313,4,'label','Total Environment'),(3314,4,'url','http://totalenvironmentinc.com/'),(3315,4,'thumbnail','98'),(3316,4,'label','Enviro Systems'),(3317,4,'url','http://www.enviro-ok.com/'),(3318,4,'thumbnail','217'),(3319,4,'label','77 Energy'),(3320,4,'url','http://77nrg.com'),(3321,4,'thumbnail','90'),(3322,4,'label','Baton'),(3323,4,'url','https://batonapp.com/'),(3324,4,'thumbnail','131'),(3325,4,'label','Tea timers'),(3326,4,'url','http://thesocietea.org/tea_timer/'),(3327,4,'thumbnail','127'),(3328,4,'label','Tea Chart'),(3329,4,'url','http://thesocietea.org/tea_steep_chart/'),(3330,4,'thumbnail','94'),(3331,4,'label','Carnegie Chart'),(3332,4,'url','http://thesocietea.org/carnegie_chart/'),(3336,261,'_edit_last','1'),(3337,261,'_edit_lock','1409793418:1'),(3338,261,'_syntaxhighlighter_encoded','1'),(3351,261,'dsq_thread_id','2953640271'),(3363,282,'_edit_last','1'),(3364,282,'_edit_lock','1410983185:1'),(3365,282,'_syntaxhighlighter_encoded','1'),(3367,282,'dsq_thread_id','2966714576'),(3934,301,'_edit_last','1'),(3935,301,'_edit_lock','1410982554:1'),(4265,305,'_edit_last','1'),(4266,305,'_edit_lock','1409866484:1'),(4269,305,'_syntaxhighlighter_encoded','1'),(4359,305,'dsq_thread_id','2986163533'),(4459,13,'header_image','145'),(4460,13,'post_type',''),(4461,13,'category_title','Development'),(4462,13,'color','#00e7ad'),(4463,13,'skill','Ruby / Rails'),(4464,13,'percentage','98'),(4465,13,'skill','Ember.js'),(4466,13,'percentage','90'),(4467,13,'skill','PHP / CMS Development'),(4468,13,'percentage','90'),(4469,13,'skill','Angular.js'),(4470,13,'percentage','85'),(4471,13,'skill','Node.js'),(4472,13,'percentage','84'),(4473,13,'skill','Relational Databases'),(4474,13,'percentage','90'),(4475,13,'skill','NoSQL Databases'),(4476,13,'percentage','86'),(4477,13,'skill','Java'),(4478,13,'percentage','70'),(4479,13,'skill','C / C++'),(4480,13,'percentage','70'),(4481,13,'skill','REST APIs'),(4482,13,'percentage','95'),(4483,13,'category_title','Design'),(4484,13,'color','#146fe7'),(4485,13,'skill','HTML5'),(4486,13,'percentage','98'),(4487,13,'skill','CSS / Sass'),(4488,13,'percentage','96'),(4489,13,'skill','Javascript / jQuery'),(4490,13,'percentage','94'),(4491,13,'skill','Responsive Design'),(4492,13,'percentage','90'),(4493,13,'skill','D3.js'),(4494,13,'percentage','80'),(4495,13,'skill','Zurb Foundation'),(4496,13,'percentage','85'),(4497,13,'skill','Page & Image Optimization'),(4498,13,'percentage','94'),(4499,13,'skill','Browser Support (IE8+)'),(4500,13,'percentage','88'),(4501,13,'skill','Gimp'),(4502,13,'percentage','83'),(4503,13,'skill','SEO'),(4504,13,'percentage','80'),(4505,13,'skill','Accessibility'),(4506,13,'percentage','90'),(4507,13,'category_title','Dev Tools'),(4508,13,'color','#ff5e00'),(4509,13,'skill','Git'),(4510,13,'percentage','100'),(4511,13,'skill','Vim'),(4512,13,'percentage','98'),(4513,13,'skill','Shell'),(4514,13,'percentage','94'),(4515,13,'skill','Tmux'),(4516,13,'percentage','90'),(4517,13,'skill','Grunt.js'),(4518,13,'percentage','95'),(4519,13,'skill','Sass'),(4520,13,'percentage','94'),(4521,13,'skill','Coffeescript'),(4522,13,'percentage','90'),(4523,13,'skill','Haml / Slim'),(4524,13,'percentage','87'),(4525,13,'skill','Gtk+'),(4526,13,'percentage','84'),(4527,13,'skill','DNS'),(4528,13,'percentage','85'),(4529,13,'skill','Heroku'),(4530,13,'percentage','85');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=328 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (4,1,'2014-06-02 22:41:51','2014-06-02 22:41:51','','Home','','publish','open','open','','home','','','2014-08-19 13:47:23','2014-08-19 13:47:23','',0,'http://localhost:8000/?page_id=4',0,'page','',0),(5,1,'2014-06-02 22:41:51','2014-06-02 22:41:51','','Home','','inherit','open','open','','4-revision-v1','','','2014-06-02 22:41:51','2014-06-02 22:41:51','',4,'http://localhost:8000/?p=5',0,'revision','',0),(6,1,'2014-06-03 03:57:47','2014-06-03 03:57:47','','About','','publish','open','open','','about','','','2014-06-06 05:09:43','2014-06-06 05:09:43','',0,'http://localhost:8000/?page_id=6',0,'page','',1),(7,1,'2014-06-03 03:57:47','2014-06-03 03:57:47','','About','','inherit','open','open','','6-revision-v1','','','2014-06-03 03:57:47','2014-06-03 03:57:47','',6,'http://localhost:8000/?p=7',0,'revision','',0),(8,1,'2014-06-03 04:30:00','2014-06-03 04:30:00','','Subpage','','publish','closed','closed','','subpage','','','2014-06-10 23:14:17','2014-06-10 23:14:17','',0,'http://localhost:8000/?post_type=cfs&#038;p=8',0,'cfs','',0),(9,1,'2014-06-03 04:30:22','2014-06-03 04:30:22','','beer-header','','inherit','open','open','','beer-header','','','2014-06-03 04:30:22','2014-06-03 04:30:22','',6,'http://thesocietea.org/wp-content/uploads/2014/06/beer-header.jpg',0,'attachment','image/jpeg',0),(10,1,'2014-06-03 04:35:13','2014-06-03 04:35:13','','Resume','','publish','open','closed','','resume','','','2014-06-11 05:34:27','2014-06-11 05:34:27','',0,'http://localhost:8000/?page_id=10',0,'page','',0),(11,1,'2014-06-03 04:35:13','2014-06-03 04:35:13','','Blog','','inherit','open','open','','10-revision-v1','','','2014-06-03 04:35:13','2014-06-03 04:35:13','',10,'http://localhost:8000/?p=11',0,'revision','',0),(12,1,'2014-06-03 04:35:17','2014-06-03 04:35:17','','Resume','','inherit','open','open','','10-revision-v1','','','2014-06-03 04:35:17','2014-06-03 04:35:17','',10,'http://localhost:8000/?p=12',0,'revision','',0),(13,1,'2014-06-03 04:35:26','2014-06-03 04:35:26','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need. Feel free to <a href=\"mailto:alkrauss48@gmail.com\">shoot me an email</a> to learn more.\r\n\r\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools in the past, and currently give a <a title=\"Programming Speaking Outline\" href=\"/assets/documents/programming_speaking_outline.pdf\" target=\"_blank\">talk</a> that usually ranges from 30 - 40 minutes.','Hire Me','','publish','open','open','','hire-me','','','2014-09-18 01:30:08','2014-09-18 01:30:08','',0,'http://localhost:8000/?page_id=13',0,'page','',0),(14,1,'2014-06-03 04:35:26','2014-06-03 04:35:26','','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-03 04:35:26','2014-06-03 04:35:26','',13,'http://localhost:8000/?p=14',0,'revision','',0),(16,1,'2014-06-03 04:35:37','2014-06-03 04:35:37','Below you\'ll find my blog posts. You can also check out the <a title=\"RSS Feed\" href=\"http://thesocietea.org/feed/\">RSS feed</a> too.','Blog','','publish','open','closed','','blog','','','2014-07-28 01:55:02','2014-07-28 01:55:02','',0,'http://localhost:8000/?page_id=16',0,'page','',0),(17,1,'2014-06-03 04:35:37','2014-06-03 04:35:37','','Blog','','inherit','open','open','','16-revision-v1','','','2014-06-03 04:35:37','2014-06-03 04:35:37','',16,'http://localhost:8000/?p=17',0,'revision','',0),(18,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=18',1,'nav_menu_item','',0),(19,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=19',1,'nav_menu_item','',0),(20,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=20',1,'nav_menu_item','',0),(21,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=21',1,'nav_menu_item','',0),(22,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=22',1,'nav_menu_item','',0),(23,1,'2014-06-03 04:35:43','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:35:43','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=23',1,'nav_menu_item','',0),(24,1,'2014-06-03 04:38:05','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:38:05','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=24',1,'nav_menu_item','',0),(25,1,'2014-06-03 04:39:06','2014-06-03 04:39:06',' ','','','publish','open','open','','25','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=25',1,'nav_menu_item','',0),(26,1,'2014-06-03 04:39:06','2014-06-03 04:39:06',' ','','','publish','open','open','','26','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=26',2,'nav_menu_item','',0),(27,1,'2014-06-03 04:39:06','2014-06-03 04:39:06',' ','','','publish','open','open','','27','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=27',5,'nav_menu_item','',0),(28,1,'2014-06-03 04:38:05','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2014-06-03 04:38:05','0000-00-00 00:00:00','',0,'http://localhost:8000/?p=28',1,'nav_menu_item','',0),(30,1,'2014-06-03 04:44:37','2014-06-03 04:44:37','Check out some of the projects I\'ve worked on recently:','Projects','','publish','open','open','','projects','','','2014-06-10 02:25:43','2014-06-10 02:25:43','',0,'http://localhost:8000/?page_id=30',0,'page','',0),(31,1,'2014-06-03 04:44:37','2014-06-03 04:44:37','','Projects','','inherit','open','open','','30-revision-v1','','','2014-06-03 04:44:37','2014-06-03 04:44:37','',30,'http://localhost:8000/?p=31',0,'revision','',0),(32,1,'2014-06-03 04:44:54','2014-06-03 04:44:54',' ','','','publish','open','open','','32','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=32',3,'nav_menu_item','',0),(33,1,'2014-06-03 04:46:17','2014-06-03 04:46:17','<p style=\"color: #000000;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus luctus libero vel laoreet ornare. Vestibulum non porttitor eros. Curabitur nulla nulla, eleifend in mi ac, accumsan sodales est. Nulla et orci nec massa rhoncus ultrices. Praesent quis arcu et diam euismod consectetur vitae sed sapien. Suspendisse pulvinar tempor gravida. Cras urna felis, viverra aliquam magna ac, imperdiet sodales leo. Proin cursus condimentum mi eu lacinia. Aenean quis dolor volutpat, vehicula ante in, malesuada augue. Nunc purus purus, vulputate vitae ornare vitae, pellentesque nec nisl. Duis eu accumsan lacus, eu lobortis leo. Donec vel mi lacus. Nunc risus risus, ullamcorper sed mi vel, sodales viverra leo. Pellentesque tincidunt at tellus id dictum. Vivamus euismod tempus magna a venenatis. Nunc at sagittis metus, eu mollis urna.</p>\r\n<p style=\"color: #000000;\">Proin scelerisque at odio vitae porttitor. Aenean purus lorem, consequat sit amet magna et, tristique condimentum augue. Ut convallis dapibus volutpat. Sed interdum, velit eu feugiat euismod, purus nulla tincidunt lorem, at molestie arcu libero ac leo. Nam ultricies mauris neque, et tincidunt magna tincidunt eu. Morbi id elementum massa. Donec iaculis magna purus, vel scelerisque sem molestie nec. Pellentesque ipsum purus, posuere pretium rhoncus ac, lacinia sed enim. Morbi non feugiat dolor. Fusce bibendum ullamcorper urna, non volutpat neque pharetra ac. Morbi ut ipsum non lacus pharetra luctus suscipit eu diam. Curabitur sodales vitae mi ac feugiat. Nulla egestas vel enim eu dictum.</p>\r\n<p style=\"color: #000000;\">Integer urna leo, dapibus elementum malesuada ut, commodo id risus. Donec sed sem sit amet libero gravida bibendum. Nullam a faucibus velit. In viverra eu ante id fringilla. Fusce vulputate suscipit leo rhoncus molestie. Pellentesque non libero id velit cursus placerat. Maecenas ac neque mauris. Etiam faucibus lectus ante. Nam adipiscing tristique fermentum. Aenean dolor dui, ultrices sed enim sed, pretium tempus purus. In luctus massa neque, et luctus metus accumsan a. Sed sed commodo ante. Vestibulum tempus cursus tincidunt. Suspendisse non lorem sit amet lectus interdum gravida.</p>','About','','inherit','open','open','','6-revision-v1','','','2014-06-03 04:46:17','2014-06-03 04:46:17','',6,'http://localhost:8000/?p=33',0,'revision','',0),(34,1,'2014-06-06 05:09:43','2014-06-06 05:09:43','','About','','inherit','open','open','','6-revision-v1','','','2014-06-06 05:09:43','2014-06-06 05:09:43','',6,'http://localhost:8000/?p=34',0,'revision','',0),(35,1,'2014-06-06 18:05:54','2014-06-06 18:05:54','','stockvault--atlantic-sunset135250','','inherit','open','open','','stockvault-atlantic-sunset135250','','','2014-06-06 18:05:54','2014-06-06 18:05:54','',30,'http://thesocietea.org/wp-content/uploads/2014/06/stockvault-atlantic-sunset135250.jpg',0,'attachment','image/jpeg',0),(36,1,'2014-06-06 18:11:31','2014-06-06 18:11:31','Check out some of the projects I\'ve worked on recently:','Projects','','inherit','open','open','','30-revision-v1','','','2014-06-06 18:11:31','2014-06-06 18:11:31','',30,'http://localhost:8000/?p=36',0,'revision','',0),(37,1,'2014-06-06 18:14:38','2014-06-06 18:14:38','','Project Fields','','publish','closed','closed','','project-screenshots','','','2014-06-06 21:53:44','2014-06-06 21:53:44','',0,'http://localhost:8000/?post_type=cfs&#038;p=37',0,'cfs','',0),(38,1,'2014-06-06 18:15:59','2014-06-06 18:15:59','This is Total Environment Inc.','Total Environment Inc.','','publish','closed','closed','','total-environment-inc','','','2014-08-18 22:11:45','2014-08-18 22:11:45','',0,'http://localhost:8000/?post_type=project&#038;p=38',6,'project','',0),(39,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-77nrg','','inherit','open','open','','th-77nrg','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-77nrg.png',0,'attachment','image/png',0),(40,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-baton','','inherit','open','open','','th-baton','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-baton.png',0,'attachment','image/png',0),(41,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-carnegie-chart','','inherit','open','open','','th-carnegie-chart','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-carnegie-chart.png',0,'attachment','image/png',0),(42,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-enviro','','inherit','open','open','','th-enviro','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-enviro.png',0,'attachment','image/png',0),(43,1,'2014-06-06 18:30:10','2014-06-06 18:30:10','','th-soundingboard','','inherit','open','open','','th-soundingboard','','','2014-06-06 18:30:10','2014-06-06 18:30:10','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-soundingboard.png',0,'attachment','image/png',0),(44,1,'2014-06-06 18:30:11','2014-06-06 18:30:11','','th-tea-chart','','inherit','open','open','','th-tea-chart','','','2014-06-06 18:30:11','2014-06-06 18:30:11','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-tea-chart.png',0,'attachment','image/png',0),(45,1,'2014-06-06 18:30:11','2014-06-06 18:30:11','','th-tea-timers','','inherit','open','open','','th-tea-timers','','','2014-06-06 18:30:11','2014-06-06 18:30:11','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-tea-timers.png',0,'attachment','image/png',0),(46,1,'2014-06-06 18:30:11','2014-06-06 18:30:11','','th-tle','','inherit','open','open','','th-tle','','','2014-06-06 18:30:11','2014-06-06 18:30:11','',38,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle.png',0,'attachment','image/png',0),(47,1,'2014-06-06 21:03:45','2014-06-06 21:03:45','','big-77-1','','inherit','open','open','','big-77-1','','','2014-06-06 21:03:45','2014-06-06 21:03:45','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-1.jpg',0,'attachment','image/jpeg',0),(48,1,'2014-06-06 21:03:46','2014-06-06 21:03:46','','big-77-2','','inherit','open','open','','big-77-2','','','2014-06-06 21:03:46','2014-06-06 21:03:46','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-2.jpg',0,'attachment','image/jpeg',0),(49,1,'2014-06-06 21:03:46','2014-06-06 21:03:46','','big-77-3','','inherit','open','open','','big-77-3','','','2014-06-06 21:03:46','2014-06-06 21:03:46','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-3.jpg',0,'attachment','image/jpeg',0),(50,1,'2014-06-06 21:03:47','2014-06-06 21:03:47','','big-77-4','','inherit','open','open','','big-77-4','','','2014-06-06 21:03:47','2014-06-06 21:03:47','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-4.jpg',0,'attachment','image/jpeg',0),(51,1,'2014-06-06 21:03:47','2014-06-06 21:03:47','','big-tle-1','','inherit','open','open','','big-tle-1','','','2014-06-06 21:03:47','2014-06-06 21:03:47','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-1.jpg',0,'attachment','image/jpeg',0),(52,1,'2014-06-06 21:03:47','2014-06-06 21:03:47','','big-tle-2','','inherit','open','open','','big-tle-2','','','2014-06-06 21:03:47','2014-06-06 21:03:47','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-2.jpg',0,'attachment','image/jpeg',0),(53,1,'2014-06-06 21:03:48','2014-06-06 21:03:48','','big-tle-3','','inherit','open','open','','big-tle-3','','','2014-06-06 21:03:48','2014-06-06 21:03:48','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-3.jpg',0,'attachment','image/jpeg',0),(54,1,'2014-06-06 21:03:48','2014-06-06 21:03:48','','big-tle-4','','inherit','open','open','','big-tle-4','','','2014-06-06 21:03:48','2014-06-06 21:03:48','',0,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-4.jpg',0,'attachment','image/jpeg',0),(55,1,'2014-06-06 21:04:04','2014-06-06 21:04:04','','th-77-1','','inherit','open','open','','th-77-1','','','2014-06-06 21:04:04','2014-06-06 21:04:04','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-1.jpg',0,'attachment','image/jpeg',0),(56,1,'2014-06-06 21:04:04','2014-06-06 21:04:04','','th-77-2','','inherit','open','open','','th-77-2','','','2014-06-06 21:04:04','2014-06-06 21:04:04','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-2.jpg',0,'attachment','image/jpeg',0),(57,1,'2014-06-06 21:04:04','2014-06-06 21:04:04','','th-77-3','','inherit','open','open','','th-77-3','','','2014-06-06 21:04:04','2014-06-06 21:04:04','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-3.jpg',0,'attachment','image/jpeg',0),(58,1,'2014-06-06 21:04:05','2014-06-06 21:04:05','','th-77-4','','inherit','open','open','','th-77-4','','','2014-06-06 21:04:05','2014-06-06 21:04:05','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-4.jpg',0,'attachment','image/jpeg',0),(60,1,'2014-06-06 21:04:05','2014-06-06 21:04:05','','th-tle-2','','inherit','open','open','','th-tle-2','','','2014-06-06 21:04:05','2014-06-06 21:04:05','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-2.jpg',0,'attachment','image/jpeg',0),(61,1,'2014-06-06 21:04:05','2014-06-06 21:04:05','','th-tle-3','','inherit','open','open','','th-tle-3','','','2014-06-06 21:04:05','2014-06-06 21:04:05','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-3.jpg',0,'attachment','image/jpeg',0),(62,1,'2014-06-06 21:04:06','2014-06-06 21:04:06','','th-tle-4','','inherit','open','open','','th-tle-4','','','2014-06-06 21:04:06','2014-06-06 21:04:06','',0,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-4.jpg',0,'attachment','image/jpeg',0),(63,1,'2014-06-06 21:10:11','2014-06-06 21:10:11','This is 77 Energy','77 Energy','','publish','closed','closed','','77-energy','','','2014-08-18 22:10:40','2014-08-18 22:10:40','',0,'http://localhost:8000/?post_type=project&#038;p=63',0,'project','',0),(64,1,'2014-06-08 03:04:15','2014-06-08 03:04:15','','Enviro Systems','','publish','closed','closed','','enviro-systems','','','2014-08-18 22:10:49','2014-08-18 22:10:49','',0,'http://localhost:8000/?post_type=project&#038;p=64',1,'project','',0),(65,1,'2014-06-08 03:12:01','2014-06-08 03:12:01','','Kikuchat 2.0','','publish','closed','closed','','kikuchat-2-0','','','2014-08-18 22:11:05','2014-08-18 22:11:05','',0,'http://localhost:8000/?post_type=project&#038;p=65',2,'project','',0),(66,1,'2014-06-08 03:13:44','2014-06-08 03:13:44','','Baton','','publish','closed','closed','','baton','','','2014-06-08 06:13:48','2014-06-08 06:13:48','',0,'http://localhost:8000/?post_type=project&#038;p=66',5,'project','',0),(67,1,'2014-06-08 03:15:11','2014-06-08 03:15:11','','Soundingboard','','publish','closed','closed','','soundingboard','','','2014-08-18 22:20:08','2014-08-18 22:20:08','',0,'http://localhost:8000/?post_type=project&#038;p=67',7,'project','',0),(68,1,'2014-06-08 03:18:14','2014-06-08 03:18:14','','Markdown Checkboxes','','publish','closed','closed','','markdown-checkboxes','','','2014-08-18 22:11:30','2014-08-18 22:11:30','',0,'http://localhost:8000/?post_type=project&#038;p=68',4,'project','',0),(69,1,'2014-06-08 03:20:06','2014-06-08 03:20:06','','Tea Timers','','publish','closed','closed','','tea-timers','','','2014-08-18 22:21:25','2014-08-18 22:21:25','',0,'http://localhost:8000/?post_type=project&#038;p=69',9,'project','',0),(70,1,'2014-06-08 03:21:08','2014-06-08 03:21:08','','Tea Chart','','publish','closed','closed','','tea-chart','','','2014-08-18 22:21:39','2014-08-18 22:21:39','',0,'http://localhost:8000/?post_type=project&#038;p=70',10,'project','',0),(71,1,'2014-06-08 03:22:06','2014-06-08 03:22:06','','Dale Carnegie Chart','','publish','closed','closed','','dale-carnegie-chart','','','2014-08-18 22:21:08','2014-08-18 22:21:08','',0,'http://localhost:8000/?post_type=project&#038;p=71',8,'project','',0),(72,1,'2014-06-08 04:08:14','2014-06-08 04:08:14','','big-77-responsive','','inherit','open','open','','big-77-responsive','','','2014-06-08 04:08:14','2014-06-08 04:08:14','',63,'http://thesocietea.org/wp-content/uploads/2014/06/big-77-responsive.jpg',0,'attachment','image/jpeg',0),(73,1,'2014-06-08 04:08:15','2014-06-08 04:08:15','','big-es-responsive','','inherit','open','open','','big-es-responsive','','','2014-06-08 04:08:15','2014-06-08 04:08:15','',63,'http://thesocietea.org/wp-content/uploads/2014/06/big-es-responsive.jpg',0,'attachment','image/jpeg',0),(74,1,'2014-06-08 04:08:15','2014-06-08 04:08:15','','th-77-responsive','','inherit','open','open','','th-77-responsive','','','2014-06-08 04:08:15','2014-06-08 04:08:15','',63,'http://thesocietea.org/wp-content/uploads/2014/06/th-77-responsive.jpg',0,'attachment','image/jpeg',0),(76,1,'2014-06-08 05:59:32','2014-06-08 05:59:32','','big-tle-responsive','','inherit','open','open','','big-tle-responsive','','','2014-06-08 05:59:32','2014-06-08 05:59:32','',38,'http://thesocietea.org/wp-content/uploads/2014/06/big-tle-responsive.jpg',0,'attachment','image/jpeg',0),(78,1,'2014-06-08 06:09:38','2014-06-08 06:09:38','','big-bt-1','','inherit','open','open','','big-bt-1','','','2014-06-08 06:09:38','2014-06-08 06:09:38','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-bt-1.jpg',0,'attachment','image/jpeg',0),(79,1,'2014-06-08 06:09:39','2014-06-08 06:09:39','','big-bt-2','','inherit','open','open','','big-bt-2','','','2014-06-08 06:09:39','2014-06-08 06:09:39','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-bt-2.jpg',0,'attachment','image/jpeg',0),(80,1,'2014-06-08 06:09:39','2014-06-08 06:09:39','','big-bt-3','','inherit','open','open','','big-bt-3','','','2014-06-08 06:09:39','2014-06-08 06:09:39','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-bt-3.jpg',0,'attachment','image/jpeg',0),(81,1,'2014-06-08 06:09:39','2014-06-08 06:09:39','','big-bt-4','','inherit','open','open','','big-bt-4','','','2014-06-08 06:09:39','2014-06-08 06:09:39','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-bt-4.jpg',0,'attachment','image/jpeg',0),(82,1,'2014-06-08 06:09:39','2014-06-08 06:09:39','','big-cc-1','','inherit','open','open','','big-cc-1','','','2014-06-08 06:09:39','2014-06-08 06:09:39','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-cc-1.jpg',0,'attachment','image/jpeg',0),(83,1,'2014-06-08 06:09:40','2014-06-08 06:09:40','','big-cc-2','','inherit','open','open','','big-cc-2','','','2014-06-08 06:09:40','2014-06-08 06:09:40','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-cc-2.jpg',0,'attachment','image/jpeg',0),(84,1,'2014-06-08 06:09:40','2014-06-08 06:09:40','','big-cc-3','','inherit','open','open','','big-cc-3','','','2014-06-08 06:09:40','2014-06-08 06:09:40','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-cc-3.jpg',0,'attachment','image/jpeg',0),(85,1,'2014-06-08 06:09:40','2014-06-08 06:09:40','','big-cc-responsive','','inherit','open','open','','big-cc-responsive','','','2014-06-08 06:09:40','2014-06-08 06:09:40','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-cc-responsive.jpg',0,'attachment','image/jpeg',0),(86,1,'2014-06-08 06:09:40','2014-06-08 06:09:40','','big-es-1','','inherit','open','open','','big-es-1','','','2014-06-08 06:09:40','2014-06-08 06:09:40','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-es-1.jpg',0,'attachment','image/jpeg',0),(87,1,'2014-06-08 06:09:41','2014-06-08 06:09:41','','big-es-2','','inherit','open','open','','big-es-2','','','2014-06-08 06:09:41','2014-06-08 06:09:41','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-es-2.jpg',0,'attachment','image/jpeg',0),(88,1,'2014-06-08 06:09:41','2014-06-08 06:09:41','','big-es-3','','inherit','open','open','','big-es-3','','','2014-06-08 06:09:41','2014-06-08 06:09:41','',64,'http://thesocietea.org/wp-content/uploads/2014/06/big-es-3.jpg',0,'attachment','image/jpeg',0),(89,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-baton','','inherit','open','open','','th-baton-2','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-baton1.png',0,'attachment','image/png',0),(90,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-bt-1','','inherit','open','open','','th-bt-1','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-bt-1.jpg',0,'attachment','image/jpeg',0),(91,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-bt-2','','inherit','open','open','','th-bt-2','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-bt-2.jpg',0,'attachment','image/jpeg',0),(92,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-bt-3','','inherit','open','open','','th-bt-3','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-bt-3.jpg',0,'attachment','image/jpeg',0),(93,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-bt-4','','inherit','open','open','','th-bt-4','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-bt-4.jpg',0,'attachment','image/jpeg',0),(94,1,'2014-06-08 06:10:00','2014-06-08 06:10:00','','th-cc-1','','inherit','open','open','','th-cc-1','','','2014-06-08 06:10:00','2014-06-08 06:10:00','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-cc-1.jpg',0,'attachment','image/jpeg',0),(95,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-cc-2','','inherit','open','open','','th-cc-2','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-cc-2.jpg',0,'attachment','image/jpeg',0),(96,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-cc-3','','inherit','open','open','','th-cc-3','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-cc-3.jpg',0,'attachment','image/jpeg',0),(98,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-es-1','','inherit','open','open','','th-es-1','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-es-1.jpg',0,'attachment','image/jpeg',0),(99,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-es-2','','inherit','open','open','','th-es-2','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-es-2.jpg',0,'attachment','image/jpeg',0),(100,1,'2014-06-08 06:10:01','2014-06-08 06:10:01','','th-es-3','','inherit','open','open','','th-es-3','','','2014-06-08 06:10:01','2014-06-08 06:10:01','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-es-3.jpg',0,'attachment','image/jpeg',0),(101,1,'2014-06-09 00:32:37','2014-06-09 00:32:37','','big-kk-1','','inherit','open','open','','big-kk-1','','','2014-06-09 00:32:37','2014-06-09 00:32:37','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-kk-1.jpg',0,'attachment','image/jpeg',0),(102,1,'2014-06-09 00:32:37','2014-06-09 00:32:37','','big-kk-2','','inherit','open','open','','big-kk-2','','','2014-06-09 00:32:37','2014-06-09 00:32:37','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-kk-2.jpg',0,'attachment','image/jpeg',0),(103,1,'2014-06-09 00:32:37','2014-06-09 00:32:37','','big-kk-3','','inherit','open','open','','big-kk-3','','','2014-06-09 00:32:37','2014-06-09 00:32:37','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-kk-3.jpg',0,'attachment','image/jpeg',0),(104,1,'2014-06-09 00:32:37','2014-06-09 00:32:37','','big-kk-4','','inherit','open','open','','big-kk-4','','','2014-06-09 00:32:37','2014-06-09 00:32:37','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-kk-4.jpg',0,'attachment','image/jpeg',0),(105,1,'2014-06-09 00:32:38','2014-06-09 00:32:38','','big-mc-1','','inherit','open','open','','big-mc-1','','','2014-06-09 00:32:38','2014-06-09 00:32:38','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-mc-1.jpg',0,'attachment','image/jpeg',0),(106,1,'2014-06-09 00:32:38','2014-06-09 00:32:38','','big-mc-2','','inherit','open','open','','big-mc-2','','','2014-06-09 00:32:38','2014-06-09 00:32:38','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-mc-2.jpg',0,'attachment','image/jpeg',0),(107,1,'2014-06-09 00:32:38','2014-06-09 00:32:38','','big-sb-1','','inherit','open','open','','big-sb-1','','','2014-06-09 00:32:38','2014-06-09 00:32:38','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-sb-1.jpg',0,'attachment','image/jpeg',0),(108,1,'2014-06-09 00:32:38','2014-06-09 00:32:38','','big-sb-2','','inherit','open','open','','big-sb-2','','','2014-06-09 00:32:38','2014-06-09 00:32:38','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-sb-2.jpg',0,'attachment','image/jpeg',0),(109,1,'2014-06-09 00:32:39','2014-06-09 00:32:39','','big-sb-3','','inherit','open','open','','big-sb-3','','','2014-06-09 00:32:39','2014-06-09 00:32:39','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-sb-3.jpg',0,'attachment','image/jpeg',0),(110,1,'2014-06-09 00:32:39','2014-06-09 00:32:39','','big-tc-1','','inherit','open','open','','big-tc-1','','','2014-06-09 00:32:39','2014-06-09 00:32:39','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tc-1.jpg',0,'attachment','image/jpeg',0),(111,1,'2014-06-09 00:32:39','2014-06-09 00:32:39','','big-tc-2','','inherit','open','open','','big-tc-2','','','2014-06-09 00:32:39','2014-06-09 00:32:39','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tc-2.jpg',0,'attachment','image/jpeg',0),(112,1,'2014-06-09 00:32:39','2014-06-09 00:32:39','','big-tc-3','','inherit','open','open','','big-tc-3','','','2014-06-09 00:32:39','2014-06-09 00:32:39','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tc-3.jpg',0,'attachment','image/jpeg',0),(113,1,'2014-06-09 00:32:40','2014-06-09 00:32:40','','big-tc-responsive','','inherit','open','open','','big-tc-responsive','','','2014-06-09 00:32:40','2014-06-09 00:32:40','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tc-responsive.jpg',0,'attachment','image/jpeg',0),(114,1,'2014-06-09 00:32:40','2014-06-09 00:32:40','','big-tt-1','','inherit','open','open','','big-tt-1','','','2014-06-09 00:32:40','2014-06-09 00:32:40','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tt-1.jpg',0,'attachment','image/jpeg',0),(115,1,'2014-06-09 00:32:40','2014-06-09 00:32:40','','big-tt-2','','inherit','open','open','','big-tt-2','','','2014-06-09 00:32:40','2014-06-09 00:32:40','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tt-2.jpg',0,'attachment','image/jpeg',0),(116,1,'2014-06-09 00:32:41','2014-06-09 00:32:41','','big-tt-3','','inherit','open','open','','big-tt-3','','','2014-06-09 00:32:41','2014-06-09 00:32:41','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tt-3.jpg',0,'attachment','image/jpeg',0),(117,1,'2014-06-09 00:32:41','2014-06-09 00:32:41','','big-tt-responsive','','inherit','open','open','','big-tt-responsive','','','2014-06-09 00:32:41','2014-06-09 00:32:41','',65,'http://thesocietea.org/wp-content/uploads/2014/06/big-tt-responsive.jpg',0,'attachment','image/jpeg',0),(118,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-kk-1','','inherit','open','open','','th-kk-1','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-kk-1.jpg',0,'attachment','image/jpeg',0),(119,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-kk-2','','inherit','open','open','','th-kk-2','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-kk-2.jpg',0,'attachment','image/jpeg',0),(120,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-kk-3','','inherit','open','open','','th-kk-3','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-kk-3.jpg',0,'attachment','image/jpeg',0),(121,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-kk-4','','inherit','open','open','','th-kk-4','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-kk-4.jpg',0,'attachment','image/jpeg',0),(122,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-mc-1','','inherit','open','open','','th-mc-1','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-mc-1.jpg',0,'attachment','image/jpeg',0),(123,1,'2014-06-09 00:33:22','2014-06-09 00:33:22','','th-mc-2','','inherit','open','open','','th-mc-2','','','2014-06-09 00:33:22','2014-06-09 00:33:22','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-mc-2.jpg',0,'attachment','image/jpeg',0),(124,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-sb-1','','inherit','open','open','','th-sb-1','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-sb-1.jpg',0,'attachment','image/jpeg',0),(125,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-sb-2','','inherit','open','open','','th-sb-2','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-sb-2.jpg',0,'attachment','image/jpeg',0),(126,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-sb-3','','inherit','open','open','','th-sb-3','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-sb-3.jpg',0,'attachment','image/jpeg',0),(127,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-tc-1','','inherit','open','open','','th-tc-1','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tc-1.jpg',0,'attachment','image/jpeg',0),(128,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-tc-2','','inherit','open','open','','th-tc-2','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tc-2.jpg',0,'attachment','image/jpeg',0),(129,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-tc-3','','inherit','open','open','','th-tc-3','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tc-3.jpg',0,'attachment','image/jpeg',0),(130,1,'2014-06-09 00:33:23','2014-06-09 00:33:23','','th-tc-responsive','','inherit','open','open','','th-tc-responsive','','','2014-06-09 00:33:23','2014-06-09 00:33:23','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tc-responsive.jpg',0,'attachment','image/jpeg',0),(131,1,'2014-06-09 00:33:24','2014-06-09 00:33:24','','th-tt-1','','inherit','open','open','','th-tt-1','','','2014-06-09 00:33:24','2014-06-09 00:33:24','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tt-1.jpg',0,'attachment','image/jpeg',0),(132,1,'2014-06-09 00:33:24','2014-06-09 00:33:24','','th-tt-2','','inherit','open','open','','th-tt-2','','','2014-06-09 00:33:24','2014-06-09 00:33:24','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tt-2.jpg',0,'attachment','image/jpeg',0),(133,1,'2014-06-09 00:33:24','2014-06-09 00:33:24','','th-tt-3','','inherit','open','open','','th-tt-3','','','2014-06-09 00:33:24','2014-06-09 00:33:24','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tt-3.jpg',0,'attachment','image/jpeg',0),(134,1,'2014-06-09 00:33:24','2014-06-09 00:33:24','','th-tt-responsive','','inherit','open','open','','th-tt-responsive','','','2014-06-09 00:33:24','2014-06-09 00:33:24','',65,'http://thesocietea.org/wp-content/uploads/2014/06/th-tt-responsive.jpg',0,'attachment','image/jpeg',0),(135,1,'2014-06-09 00:59:45','2014-06-09 00:59:45','','th-cc-responsive','','inherit','open','open','','th-cc-responsive','','','2014-06-09 00:59:45','2014-06-09 00:59:45','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-cc-responsive.jpg',0,'attachment','image/jpeg',0),(136,1,'2014-06-09 00:59:45','2014-06-09 00:59:45','','th-es-responsive','','inherit','open','open','','th-es-responsive','','','2014-06-09 00:59:45','2014-06-09 00:59:45','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-es-responsive.jpg',0,'attachment','image/jpeg',0),(137,1,'2014-06-09 00:59:46','2014-06-09 00:59:46','','th-tle-1','','inherit','open','open','','th-tle-1','','','2014-06-09 00:59:46','2014-06-09 00:59:46','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-1.jpg',0,'attachment','image/jpeg',0),(138,1,'2014-06-09 00:59:46','2014-06-09 00:59:46','','th-tle-responsive','','inherit','open','open','','th-tle-responsive','','','2014-06-09 00:59:46','2014-06-09 00:59:46','',64,'http://thesocietea.org/wp-content/uploads/2014/06/th-tle-responsive.jpg',0,'attachment','image/jpeg',0),(139,1,'2014-06-09 01:10:49','2014-06-09 01:10:49','','Home Page Projects','','publish','closed','closed','','home-page-projects','','','2014-06-09 01:25:41','2014-06-09 01:25:41','',0,'http://localhost:8000/?post_type=cfs&#038;p=139',0,'cfs','',0),(140,1,'2014-06-09 22:27:46','2014-06-09 22:27:46','','stockvault-dramatic-landscape106482','','inherit','open','open','','stockvault-dramatic-landscape106482','','','2014-06-09 22:27:46','2014-06-09 22:27:46','',16,'http://thesocietea.org/wp-content/uploads/2014/06/stockvault-dramatic-landscape106482.jpg',0,'attachment','image/jpeg',0),(141,1,'2014-06-09 22:32:04','2014-06-09 22:32:04','','stockvault-path-in-nature124348','','inherit','open','open','','stockvault-path-in-nature124348','','','2014-06-09 22:32:04','2014-06-09 22:32:04','',16,'http://thesocietea.org/wp-content/uploads/2014/06/stockvault-path-in-nature124348.jpg',0,'attachment','image/jpeg',0),(142,1,'2014-06-09 22:58:48','2014-06-09 22:58:48','I have been drinking tea for about 6 years now, and the quality of tea I have chosen to drink has risen throughout those years. I have moved from purchasing local grocery store tea bags to buying \"whole leaf\" tea that is still in tea bags, all the way to purchasing loose leaf teas by the ounce at local tea stores and Teavana (Amazon, too!)\r\n\r\nHowever, as I have done more research about teas, I have learned that certain teas are kept in storage better than others, and some teas are freshest only in the first year of their life. That means from the moment they\'re picked, they will only have that superior magnificence for a single year. Since the vast majority of teas (not tisanes) are produced in Asia, it typically takes a while before the new season\'s tea leaves are shipped in great quantity to the United States and other western nations.\r\n\r\nI have never actually seen a tea company, be it a commercial tea bag producer, quality loose-leaf tea retailer like Teavana, and other online tea shops, disclose when their teas were plucked and/or shipped to them. However, I have found one tea retailer that goes above and beyond their call of duty to truly try to acquire the freshest and highest quality of tea leaves, and fully disclose all information related to tea quality:\r\n\r\n<a href=\"http://www.teatrekker.com\">Tea Trekker</a>\r\n\r\nMary Lou and Robert Heiss are the owners of this Massachusetts tea shop, and have been in the tea business for decades. They have established personal relationships with tea farmers in Asia and frequently travel to see the new season\'s pluck, as well as create more relationships with new tea farmers. This enables them to source incredibly high-quality teas and have them shipped to the United States very soon after plucking, which allows tea enthusiasts like me to purchase and drink them while knowing <em>exactly</em> when and in what region the tea leaves were plucked. This is perfect and almost necessary knowledge when trying to plan how long each tea can be stored in order to brew them while they are in the freshest state.\r\n\r\nThe Heiss\' also have a wonderful book, which much of The Societea\'s tea data is based off of:\r\n\r\n<a href=\"http://www.amazon.com/The-Tea-Enthusiasts-Handbook-Enjoying/dp/158008804X/ref=sr_1_1?ie=UTF8&amp;qid=1364663260&amp;sr=8-1&amp;keywords=the+tea+enthusiast%27s+handbook\">The Tea Enthusiast\'s Handbook</a>\r\n\r\nI have read this book front-to-back at least twice, and use it often as a reference. If you currently drink tea and wish to learn more about it, and possibly purchase high quality tea as well, then I highly encourage you to check out this book. Beware though, this is a no-fluff book which contains rock solid facts and detail; make sure you\'re in a mental state that\'s ready to learn!\r\n\r\nSo for those of you who have purchased tea in the past and are curious as to where a high-quality tea seller is, look no further; <a href=\"http://teatrekker.com\">Tea Trekker</a> has got you covered.','Where I Buy Tea','','publish','open','open','','where-i-buy-tea','','','2014-06-10 02:01:14','2014-06-10 02:01:14','',0,'http://localhost:8000/?p=142',0,'post','',1),(143,1,'2014-06-09 22:58:48','2014-06-09 22:58:48','I have been drinking tea for about 6 years now, and the quality of tea I have chosen to drink has risen throughout those years. I have moved from purchasing local grocery store tea bags to buying \"whole leaf\" tea that is still in tea bags, all the way to purchasing loose leaf teas by the ounce at local tea stores and Teavana (Amazon, too!)\r\n\r\nHowever, as I have done more research about teas, I have learned that certain teas are kept in storage better than others, and some teas are freshest only in the first year of their life. That means from the moment they\'re picked, they will only have that superior magnificence for a single year. Since the vast majority of teas (not tisanes) are produced in Asia, it typically takes a while before the new season\'s tea leaves are shipped in great quantity to the United States and other western nations.\r\n\r\nI have never actually seen a tea company, be it a commercial tea bag producer, quality loose-leaf tea retailer like Teavana, and other online tea shops, disclose when their teas were plucked and/or shipped to them. However, I have found one tea retailer that goes above and beyond their call of duty to truly try to acquire the freshest and highest quality of tea leaves, and fully disclose all information related to tea quality:\r\n\r\n<a href=\"http://www.teatrekker.com\">Tea Trekker</a>\r\n\r\nMary Lou and Robert Heiss are the owners of this Massachusetts tea shop, and have been in the tea business for decades. They have established personal relationships with tea farmers in Asia and frequently travel to see the new season\'s pluck, as well as create more relationships with new tea farmers. This enables them to source incredibly high-quality teas and have them shipped to the United States very soon after plucking, which allows tea enthusiasts like me to purchase and drink them while knowing &lt;i&gt;exactly&lt;/i&gt; when and in what region the tea leaves were plucked. This is perfect and almost necessary knowledge when trying to plan how long each tea can be stored in order to brew them while they are in the freshest state.\r\n\r\nThe Heiss\' also have a wonderful book, which much of The Societea\'s tea data is based off of:\r\n\r\n<a href=\"http://www.amazon.com/The-Tea-Enthusiasts-Handbook-Enjoying/dp/158008804X/ref=sr_1_1?ie=UTF8&amp;qid=1364663260&amp;sr=8-1&amp;keywords=the+tea+enthusiast%27s+handbook\">The Tea Enthusiast\'s Handbook</a>\r\n\r\nI have read this book front-to-back at least twice, and use it often as a reference. If you currently drink tea and wish to learn more about it, and possibly purchase high quality tea as well, then I highly encourage you to check out this book. Beware though, this is a no-fluff book which contains rock solid facts and detail; make sure you\'re in a mental state that\'s ready to learn!\r\n\r\nSo for those of you who have purchased tea in the past and are curious as to where a high-quality tea seller is, look no further; <a href=\"http://teatrekker.com\">Tea Trekker</a> has got you covered.','Where I Buy Tea','','inherit','open','open','','142-revision-v1','','','2014-06-09 22:58:48','2014-06-09 22:58:48','',142,'http://localhost:8000/?p=143',0,'revision','',0),(144,1,'2014-06-10 01:59:45','2014-06-10 01:59:45','I have been drinking tea for about 6 years now, and the quality of tea I have chosen to drink has risen throughout those years. I have moved from purchasing local grocery store tea bags to buying \"whole leaf\" tea that is still in tea bags, all the way to purchasing loose leaf teas by the ounce at local tea stores and Teavana (Amazon, too!)\r\n\r\nHowever, as I have done more research about teas, I have learned that certain teas are kept in storage better than others, and some teas are freshest only in the first year of their life. That means from the moment they\'re picked, they will only have that superior magnificence for a single year. Since the vast majority of teas (not tisanes) are produced in Asia, it typically takes a while before the new season\'s tea leaves are shipped in great quantity to the United States and other western nations.\r\n\r\nI have never actually seen a tea company, be it a commercial tea bag producer, quality loose-leaf tea retailer like Teavana, and other online tea shops, disclose when their teas were plucked and/or shipped to them. However, I have found one tea retailer that goes above and beyond their call of duty to truly try to acquire the freshest and highest quality of tea leaves, and fully disclose all information related to tea quality:\r\n\r\n<a href=\"http://www.teatrekker.com\">Tea Trekker</a>\r\n\r\nMary Lou and Robert Heiss are the owners of this Massachusetts tea shop, and have been in the tea business for decades. They have established personal relationships with tea farmers in Asia and frequently travel to see the new season\'s pluck, as well as create more relationships with new tea farmers. This enables them to source incredibly high-quality teas and have them shipped to the United States very soon after plucking, which allows tea enthusiasts like me to purchase and drink them while knowing <em>exactly</em> when and in what region the tea leaves were plucked. This is perfect and almost necessary knowledge when trying to plan how long each tea can be stored in order to brew them while they are in the freshest state.\r\n\r\nThe Heiss\' also have a wonderful book, which much of The Societea\'s tea data is based off of:\r\n\r\n<a href=\"http://www.amazon.com/The-Tea-Enthusiasts-Handbook-Enjoying/dp/158008804X/ref=sr_1_1?ie=UTF8&amp;qid=1364663260&amp;sr=8-1&amp;keywords=the+tea+enthusiast%27s+handbook\">The Tea Enthusiast\'s Handbook</a>\r\n\r\nI have read this book front-to-back at least twice, and use it often as a reference. If you currently drink tea and wish to learn more about it, and possibly purchase high quality tea as well, then I highly encourage you to check out this book. Beware though, this is a no-fluff book which contains rock solid facts and detail; make sure you\'re in a mental state that\'s ready to learn!\r\n\r\nSo for those of you who have purchased tea in the past and are curious as to where a high-quality tea seller is, look no further; <a href=\"http://teatrekker.com\">Tea Trekker</a> has got you covered.','Where I Buy Tea','','inherit','open','open','','142-revision-v1','','','2014-06-10 01:59:45','2014-06-10 01:59:45','',142,'http://localhost:8000/?p=144',0,'revision','',0),(145,1,'2014-06-10 02:32:09','2014-06-10 02:32:09','','stockvault-cabot-trail---hdr133670','','inherit','open','open','','stockvault-cabot-trail-hdr133670','','','2014-06-10 02:32:09','2014-06-10 02:32:09','',13,'http://thesocietea.org/wp-content/uploads/2014/06/stockvault-cabot-trail-hdr133670.jpg',0,'attachment','image/jpeg',0),(146,1,'2014-06-10 02:41:57','2014-06-10 02:41:57','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need.\n\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools, and have a base outli','Hire Me','','inherit','open','open','','13-autosave-v1','','','2014-06-10 02:41:57','2014-06-10 02:41:57','',13,'http://localhost:8000/?p=146',0,'revision','',0),(147,1,'2014-06-10 02:34:57','2014-06-10 02:34:57','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then you\'ve found your guy.','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-10 02:34:57','2014-06-10 02:34:57','',13,'http://localhost:8000/?p=147',0,'revision','',0),(148,1,'2014-06-10 02:43:56','2014-06-10 02:43:56','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need. Feel free to <a href=\"mailto:alkrauss48@gmail.com\">shoot me an email</a> as well.\r\n\r\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools in the past, and currently give a <a href=\"#\">talk</a> that usually ranges from 30 - 40 minutes.','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-10 02:43:56','2014-06-10 02:43:56','',13,'http://localhost:8000/?p=148',0,'revision','',0),(149,1,'2014-06-10 02:47:46','2014-06-10 02:47:46','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need. Feel free to <a href=\"mailto:alkrauss48@gmail.com\">shoot me an email</a> to learn more.\r\n\r\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools in the past, and currently give a <a href=\"#\">talk</a> that usually ranges from 30 - 40 minutes.','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-10 02:47:46','2014-06-10 02:47:46','',13,'http://localhost:8000/?p=149',0,'revision','',0),(150,1,'2014-06-10 02:50:33','2014-06-10 02:50:33','','Skills','','publish','closed','closed','','skills','','','2014-06-10 03:07:12','2014-06-10 03:07:12','',0,'http://localhost:8000/?post_type=cfs&#038;p=150',0,'cfs','',0),(151,1,'2014-06-10 04:18:26','2014-06-10 04:18:26','','Resume','','publish','open','open','','resume','','','2014-06-10 04:18:26','2014-06-10 04:18:26','',0,'http://localhost:8000/?p=151',4,'nav_menu_item','',0),(154,1,'2014-06-11 18:12:41','2014-06-11 18:12:41','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that vim has different modes such as insert, visual, and normal mode. Due to these different modes, vim allows you to never have to use the mouse to interact - it\'s all keyboard (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','publish','open','open','','vim-as-your-editor','','\nhttp://thesocietea.org/2014/07/how-to-learn-vim/','2014-08-29 13:33:20','2014-08-29 13:33:20','',0,'http://thesocietea.org/?p=154',0,'post','',1),(155,1,'2014-06-11 18:12:41','2014-06-11 18:12:41','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that you don\'t use the mouse to interact (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the best ways to learn Vim (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-revision-v1','','','2014-06-11 18:12:41','2014-06-11 18:12:41','',154,'http://thesocietea.org/2014/06/154-revision-v1/',0,'revision','',0),(156,1,'2014-06-17 02:42:59','2014-06-17 02:42:59','If you\'re looking for a full stack developer with specializations in open-source and other available technologies, then I can help you. I\'m available for remote contract or local, temporary gigs around the Oklahoma City metro area. Whether you need development work, design help, or even training, take a look below at my skill sets and see if I fit your need. Feel free to <a href=\"mailto:alkrauss48@gmail.com\">shoot me an email</a> to learn more.\r\n\r\nOn another note, I am also available as a speaker, specifically geared towards young adults with a serious interest in programming (and already have a little background knowledge). This includes students in AP high school programming classes, vocational classes, college classes, any local programming clubs or groups, and even not-in-education adults who are wanting to take the next step as a programmer. I have spoken at high schools in the past, and currently give a <a title=\"Programming Speaking Outline\" href=\"/assets/documents/programming_speaking_outline.pdf\" target=\"_blank\">talk</a> that usually ranges from 30 - 40 minutes.','Hire Me','','inherit','open','open','','13-revision-v1','','','2014-06-17 02:42:59','2014-06-17 02:42:59','',13,'http://thesocietea.org/2014/06/13-revision-v1/',0,'revision','',0),(158,1,'2014-06-19 03:07:34','2014-06-19 03:07:34','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h3>My Initial Planning</h3>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build tool like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build/rebuild out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phases of Wordpress acceptance:\r\n\r\n<strong>Phase 1</strong> - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n<strong>Phase 2</strong> - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n<strong>Phase 3</strong> - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS just to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h3>Cons of Using a CMS</h3>\r\nThere are some things that were very important to me that I can\'t reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Slower Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control Complexity</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','publish','open','open','','what-this-site-runs-on-part-1','','','2014-06-19 03:13:57','2014-06-19 03:13:57','',0,'http://thesocietea.org/?p=158',0,'post','',1),(159,1,'2014-06-18 23:20:28','2014-06-18 23:20:28','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h4>My Initial Planning</h4>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-18 23:20:28','2014-06-18 23:20:28','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(160,1,'2014-06-18 23:46:00','2014-06-18 23:46:00','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h4>My Initial Planning</h4>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phase of Wordpress acceptance:\r\n\r\n1 - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n2 - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n3 - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h4>Cons of Using a CMS</h4>\r\nThere are some things that were very important to me that I can\'t  reap the benefits of anymore due to using a CMS\r\n\r\n<strong>Slight speed boost</strong> - Since the site now interacts with a database, it\'s certainly not faster than a purely static page being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local du','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-18 23:46:00','2014-06-18 23:46:00','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(161,1,'2014-06-19 02:57:46','2014-06-19 02:57:46','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h4>My Initial Planning</h4>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phase of Wordpress acceptance:\r\n\r\n1 - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n2 - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n3 - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h4>Cons of Using a CMS</h4>\r\nThere are some things that were very important to me that I can\'t  reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Lightning Fast Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial on a new','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 02:57:46','2014-06-19 02:57:46','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(162,1,'2014-06-19 03:00:55','2014-06-19 03:00:55','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h4>My Initial Planning</h4>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phase of Wordpress acceptance:\r\n\r\n1 - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n2 - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n3 - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h4>Cons of Using a CMS</h4>\r\nThere are some things that were very important to me that I can\'t  reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Lightning Fast Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 03:00:55','2014-06-19 03:00:55','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(163,1,'2014-06-19 03:01:24','2014-06-19 03:01:24','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h3>My Initial Planning</h3>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build too like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phase of Wordpress acceptance:\r\n\r\n1 - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n2 - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n3 - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h3>Cons of Using a CMS</h3>\r\nThere are some things that were very important to me that I can\'t  reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Lightning Fast Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 03:01:24','2014-06-19 03:01:24','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(164,1,'2014-06-19 03:06:54','2014-06-19 03:06:54','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h3>My Initial Planning</h3>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build tool like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build/rebuild out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phases of Wordpress acceptance:\r\n\r\n<strong>Phase 1</strong> - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n<strong>Phase 2</strong> - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n<strong>Phase 3</strong> - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS just to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h3>Cons of Using a CMS</h3>\r\nThere are some things that were very important to me that I can\'t reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Lightning Fast Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 03:06:54','2014-06-19 03:06:54','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(165,1,'2014-06-19 03:13:57','2014-06-19 03:13:57','Having gained a lot of new front-end skills with my newish job at <a title=\"Staplegun\" href=\"http://staplegun.us\" target=\"_blank\">Staplegun</a>, I decided to give my site a revamp. The old site was a pretty minimal (ahem...terrible) landing page that just gave basic information about myself, as well as external links to some of my projects. Now, I felt like I could finally develop a site that houses more than just external links - so I decided to rebuild it all. I\'m pretty happy with it, and I thought I\'d share the tools, languages, and frameworks I used to build everything\r\n\r\nWhere does the name The Societea come from? We\'ll save that for another post.\r\n\r\nI\'m breaking this topic up into 2 posts; this one will specifically deal with my choice on whether I decided to use a database for my site, and furthermore, a CMS. Let\'s get to it:\r\n<h3>My Initial Planning</h3>\r\nI initially planned to revamp my site into a completely static project that was just straight HTML, CSS, and JS. I was planning to have a static page blog where each blog post would be its own Markdown file, and then to use a server-side build tool like <a title=\"Middleman\" href=\"http://middlemanapp.com/\" target=\"_blank\">Middleman</a> to use ERB and build/rebuild out the pages after each blog post. I would use nginx to load the pages super fast, and most importantly, I would only need a simple Git repo to manage the entire site; no database whatsoever.\r\n\r\nBut, then I started wanting to take it further. What if I wanted to tag my blog posts, and maybe even give some dynamic options on the page to filter blog posts based on tags? I also wanted to show off my projects that I\'ve worked on as well and give them sortable tags as well (languages used, role, company, etc.). Could I make the projects modular code-wise on the site, and split them up into template-like blocks so I didn\'t have to code the exact same html multiple times? Would it be difficult managing posts, projects, and other repeatable chunks? The more I got down to it, the more I felt like I needed to get a database involved.\r\n<h3>How It\'s Implemented</h3>\r\nBased on my needs, I ended up using a database. I ended up using a CMS. Yes, I ended up using <strong>Wordpress</strong>. I\'m using Wordpress, and it\'s exactly what I needed. Through a CMS I\'m able to handle code chunks incredibly easy with posts, projects, and more, and updating anything is so simple. I coded my projects page initially sans-CMS, and I was looking at over 150 lines easily since I was duplicating so much html. Now, by pulling my images and text from a database, that\'s down to 43 lines (including whitespace lines) -- and I\'m using the same template for my blog posts parent page!\r\n\r\nNow I know CMSs aren\'t the cool things developer-wise anymore, but I\'ve come to realize what they are. A tool - nothing more. As a developer, I\'ve gone through 3 phases of Wordpress acceptance:\r\n\r\n<strong>Phase 1</strong> - What\'s Wordpress? *is shown Wordpress* .... Wow, this is awesome! I can make a decent looking site in no time with free themes and plugins!!\r\n\r\n<strong>Phase 2</strong> - Wordpress? Nah, that\'s not cool once you\'re a <em>real</em> web developer. Custom build all the things!\r\n\r\n<strong>Phase 3</strong> - I know what I need. I know what Wordpress does. Wordpress is what I need to organize my site and manage the things I need to manage. I\'ll custom build the site structure and styles myself.\r\n\r\nSo, yes, this site runs on Wordpress, and I\'m loving it. I custom built the theme and have all the visual plugins running purely through javascript, so I\'m literally using a CMS just to manage the content that actually needs managing. Not everything though, mostly just repeatable things.\r\n<h3>Cons of Using a CMS</h3>\r\nThere are some things that were very important to me that I can\'t reap the benefits of anymore due to using a CMS:\r\n\r\n<strong>Slower Page Loads</strong> - Since the site now interacts with a database, it\'s certainly not faster than purely static pages being served up by nginx. Though I really can\'t tell much, I still know that\'s a fact.\r\n\r\n<strong>Version Control Complexity</strong> - Having a database complicates code management. I initially wanted to just be able to push my files up to a Git repo, clone it anywhere, and know it will just run as is. However, now I need to dump the DB into a local dump SQL file, put that in the repo, and then restore the DB based on the dump file. And, if it\'s an initial clone at a new location, I\'ll also need to create the DB user and the actual database itself. It\'s not too much extra work, but it\'s more complicated than just a \'git clone xxx\'.\r\n\r\nSo there you have it. My site uses a CMS, and while there are some cons associated with that, I chose to use one because the benefits outweigh the negatives by a longshot. I know I didn\'t cover much here, but I really wanted to explain my rationale and some of the struggles I was...well...struggling with as I was planning this site.\r\n\r\nNext post will cover specific tools I used to build the site, js plugins, preprocessors, and page optimization. Stay tuned!','What This Site Runs On - Part 1','','inherit','open','open','','158-revision-v1','','','2014-06-19 03:13:57','2014-06-19 03:13:57','',158,'http://thesocietea.org/2014/06/158-revision-v1/',0,'revision','',0),(167,1,'2014-06-30 18:11:26','2014-06-30 18:11:26','Now that we\'ve established that this site is running on Wordpress (wondering why I made that choice? <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\">Read about it</a>), I want to delve in further to talk about what else I\'m using, and the tools I used to build this site. We\'ll start off with languages, language plugins, and then general dev tools.\r\n<h2>Languages</h2>\r\nNo big surprises here:\r\n<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>Javascript</li>\r\n	<li>PHP</li>\r\n</ul>\r\n<h2>Language Plugins</h2>\r\n<a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> - I think this is a given.\r\n\r\n<a title=\"Sass\" href=\"http://sass-lang.com/\" target=\"_blank\">Sass</a> - Sass is a preprocessor for CSS which gives you a bunch of extra neat CSS enhancements such as modular mixins, functions, variables, style nesting, and even conditionals. It\'s ruby gem, so it integrates very well with Rails projects.\r\n\r\n<a title=\"Compass\" href=\"http://compass-style.org/\" target=\"_blank\">Compass</a> - Compass is a sass framework that gives you a lot of baseline modules for you to include in your CSS. I use it mostly so I don\'t have to write the same style 4 times when all that\'s changing are the prefix (incredibly handy for gradients).\r\n\r\n<a title=\"Susy\" href=\"http://susy.oddbird.net/\" target=\"_blank\">Susy</a> - Susy is a sass plugin that gives you grid control over your web page. No longer do you have to worry about floating and clearfixing things yourself, Susy will do that for you (and it makes for very, very easy responsive design).\r\n\r\n<a title=\"Skrollr\" href=\"https://github.com/Prinzhorn/skrollr\" target=\"_blank\">Skrollr</a> - Skrollr is a javascript parallax plugin. I use it largely on the <a title=\"About\" href=\"http://thesocietea.org/about/\" target=\"_blank\">about</a> page, but you can see it on every subpage header, and the home page. Very, very easy to use, given how powerful it is.\r\n\r\n<a title=\"Sidr\" href=\"http://www.berriart.com/sidr/\" target=\"_blank\">Sidr</a> - javascript plugin for the responsive nav. Don\'t know what I\'m talking about? View the site on a tablet, phone, or just shrink the screen down and see how the nav changes.\r\n\r\n<a title=\"Typed.js\" href=\"http://www.mattboldt.com/demos/typed-js/\" target=\"_blank\">Typed.js</a> - javascript plugin for the typing animation that you see at the top of the home page. It\'s a really cool effect, and the plugin is really simple to use.\r\n\r\n<a title=\"Magnific Popup\" href=\"http://dimsemenov.com/plugins/magnific-popup/\" target=\"_blank\">Magnific Popup</a> - javascript plugin for the lightbox functionality - you can see this on my <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page. Lightboxes allow you to show thumbnails on your page which are much smaller in size than the real image itself; this allows you to have a speedy page load and only load your images when the user shows they want to see them. It\'s responsive by default, and, yup you guessed it, very simple to use.\r\n<h2>Dev Tools</h2>\r\n<a title=\"Nginx\" href=\"http://nginx.com/\" target=\"_blank\">Nginx</a> - Lightning quick web server to serve up my pages. It\'s usually this or apache, and nginx always wins in my book.\r\n\r\n<a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">Grunt</a> - Grunt is a build automation tool which does so, so much for me. It automatically handles all of my SASS compilation and CSS minification, Coffeescript compilation and JS minification, image minification, and more. If you haven\'t looked into a build automation tool before, I highly recommend you look into Grunt. Your productivity will skyrocket.\r\n\r\nImage Minification - Not really a tool, but I specifically minified every single image on my site through Photoshop, and further through Grunt\'s <a title=\"Image Min\" href=\"https://github.com/gruntjs/grunt-contrib-imagemin\" target=\"_blank\">image min</a> plugin. Just as an example, my home page has over 10 images, and combined with the entire page load including CSS and JS, it\'s not even half a megabyte. Without image minification, that could easily top several megabytes. Check out the <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page too - it has almost 40 images and the whole page load is just barely over a megabyte!\r\n\r\n<a title=\"Real Favicon Generator\" href=\"http://realfavicongenerator.net/\" target=\"_blank\">Real Favicon Generator</a> - This favicon generator takes a square image that you have and builds out the 20+ favicons that your site needs to look good on every single device. It even gives you several tips and suggestions along the way.\r\n\r\n<a title=\"Vim\" href=\"http://www.vim.org/\" target=\"_blank\">Vim</a>, <a title=\"Zsh\" href=\"http://www.zsh.org/\" target=\"_blank\">Zsh</a>, and <a title=\"Tmux\" href=\"http://tmux.sourceforge.net/\" target=\"_blank\">Tmux</a> - I won\'t explain these since they\'re not related specifically to this site, but these 3 tools alone keep me incredibly productive.\r\n\r\nAnd that\'s it! Everything that my site currently runs on has been listed here and in the <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\" target=\"_blank\">previous blog post</a>. Hope you enjoyed reading about my tools, and let me know if you have anything else I should be checking out!','What This Site Runs On - Part 2','','publish','open','open','','what-this-site-runs-on-part-2','','http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\nhttp://thesocietea.org/about/','2014-06-30 18:15:25','2014-06-30 18:15:25','',0,'http://thesocietea.org/?p=167',0,'post','',0),(168,1,'2014-06-30 17:57:14','2014-06-30 17:57:14','Now that we\'ve established that this site is running on Wordpress (wondering why I made that choice? <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\">Read about it</a>), I want to delve in further to talk about what else I\'m using, and the tools I used to build this site. We\'ll start off with languages, language plugins, and then general dev tools.\r\n<h2>Languages</h2>\r\nNo big surprises here:\r\n<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>Javascript</li>\r\n	<li>PHP</li>\r\n</ul>\r\n<h2>Language Plugins</h2>\r\n<a title=\"Sass\" href=\"http://sass-lang.com/\" target=\"_blank\">Sass</a> - Sass is a preprocessor for CSS which gives you a bunch of extra neat CSS options such as modular mixins, functions, variables, style nesting, and even conditionals. It\'s ruby gem, so it integrates very well with Rails projects.\r\n\r\n<a title=\"Compass\" href=\"http://compass-style.org/\" target=\"_blank\">Compass</a> - Compass is a sass framework that gives you a lot of baseline modules for you to include in your CSS. I use it mostly so I don\'t have to write the same style 4 times when all that\'s changing are the prefix (incredibly handy for gradients).\r\n\r\n<a title=\"Susy\" href=\"http://susy.oddbird.net/\" target=\"_blank\">Susy</a> - Susy is a sass plugin that gives you grid control over your web page. No longer do you have to worry about floating and cleaffixing things yourself, Susy will do that for you (and it makes for very, very easy responsive design).\r\n\r\n<a title=\"Skrollr\" href=\"https://github.com/Prinzhorn/skrollr\" target=\"_blank\">Skrollr</a> - Skrollr is a javascript parallax plugin. I use it largely on the <a title=\"About\" href=\"http://thesocietea.org/about/\" target=\"_blank\">about</a> page, but you can see it on every subpage header, and the home page. Very, very easy to use, given how powerful it is.\r\n\r\n<a title=\"Sidr\" href=\"http://www.berriart.com/sidr/\" target=\"_blank\">Sidr</a> - javascript plugin for the responsive nav. Don\'t know what I\'m talking about? View the site on a tablet, phone, or just shrink the screen down and see how the nav changes.\r\n\r\n<a title=\"Typed.js\" href=\"http://www.mattboldt.com/demos/typed-js/\" target=\"_blank\">Typed.js</a> - javascript plugin for the typing animation that you see at the top of the home page. It\'s a really cool effect, and the plugin is really simple to use.\r\n\r\n<a title=\"Magnific Popup\" href=\"http://dimsemenov.com/plugins/magnific-popup/\" target=\"_blank\">Magnific Popup</a> - javascript plugin for the lightbox functionality - you can see this on my <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page. Lightboxes allow you to show thumbnails on your page which are much smaller in size than the real image itself; this allows you to have a speedy page load and only load your images when the user shows they want to see them. It\'s responsive by default, and, yup you guessed it, very simple to use.','What This Site Runs On - Part 2','','inherit','open','open','','167-revision-v1','','','2014-06-30 17:57:14','2014-06-30 17:57:14','',167,'http://thesocietea.org/2014/06/167-revision-v1/',0,'revision','',0),(169,1,'2014-06-30 18:11:26','2014-06-30 18:11:26','Now that we\'ve established that this site is running on Wordpress (wondering why I made that choice? <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\">Read about it</a>), I want to delve in further to talk about what else I\'m using, and the tools I used to build this site. We\'ll start off with languages, language plugins, and then general dev tools.\r\n<h2>Languages</h2>\r\nNo big surprises here:\r\n<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>Javascript</li>\r\n	<li>PHP</li>\r\n</ul>\r\n<h2>Language Plugins</h2>\r\n<a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> - I think this is a given.\r\n\r\n<a title=\"Sass\" href=\"http://sass-lang.com/\" target=\"_blank\">Sass</a> - Sass is a preprocessor for CSS which gives you a bunch of extra neat CSS enhancements such as modular mixins, functions, variables, style nesting, and even conditionals. It\'s ruby gem, so it integrates very well with Rails projects.\r\n\r\n<a title=\"Compass\" href=\"http://compass-style.org/\" target=\"_blank\">Compass</a> - Compass is a sass framework that gives you a lot of baseline modules for you to include in your CSS. I use it mostly so I don\'t have to write the same style 4 times when all that\'s changing are the prefix (incredibly handy for gradients).\r\n\r\n<a title=\"Susy\" href=\"http://susy.oddbird.net/\" target=\"_blank\">Susy</a> - Susy is a sass plugin that gives you grid control over your web page. No longer do you have to worry about floating and clearfixing things yourself, Susy will do that for you (and it makes for very, very easy responsive design).\r\n\r\n<a title=\"Skrollr\" href=\"https://github.com/Prinzhorn/skrollr\" target=\"_blank\">Skrollr</a> - Skrollr is a javascript parallax plugin. I use it largely on the <a title=\"About\" href=\"http://thesocietea.org/about/\" target=\"_blank\">about</a> page, but you can see it on every subpage header, and the home page. Very, very easy to use, given how powerful it is.\r\n\r\n<a title=\"Sidr\" href=\"http://www.berriart.com/sidr/\" target=\"_blank\">Sidr</a> - javascript plugin for the responsive nav. Don\'t know what I\'m talking about? View the site on a tablet, phone, or just shrink the screen down and see how the nav changes.\r\n\r\n<a title=\"Typed.js\" href=\"http://www.mattboldt.com/demos/typed-js/\" target=\"_blank\">Typed.js</a> - javascript plugin for the typing animation that you see at the top of the home page. It\'s a really cool effect, and the plugin is really simple to use.\r\n\r\n<a title=\"Magnific Popup\" href=\"http://dimsemenov.com/plugins/magnific-popup/\" target=\"_blank\">Magnific Popup</a> - javascript plugin for the lightbox functionality - you can see this on my <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page. Lightboxes allow you to show thumbnails on your page which are much smaller in size than the real image itself; this allows you to have a speedy page load and only load your images when the user shows they want to see them. It\'s responsive by default, and, yup you guessed it, very simple to use.\r\n<h2>Dev Tools</h2>\r\n<a title=\"Nginx\" href=\"http://nginx.com/\" target=\"_blank\">Nginx</a> - Lightning quick web server to serve up my pages. It\'s usually this or apache, and nginx always wins in my book.\r\n\r\n<a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">Grunt</a> - Grunt is a build automation tool which does so, so much for me. It automatically handles all of my SASS compilation and CSS minification, Coffeescript compilation and JS minification, image minification, and more. If you haven\'t looked into a build automation tool before, I highly recommend you look into Grunt. Your productivity will skyrocket.\r\n\r\nImage Minification - Not really a tool, but I specifically minified every single image on my site through Photoshop, and further through Grunt\'s <a title=\"Image Min\" href=\"https://github.com/gruntjs/grunt-contrib-imagemin\" target=\"_blank\">image min</a> plugin. Just as an example, my home page has over 10 images, and combined with the entire page load including CSS and JS, it\'s not even half a megabyte. Without image minification, that could easily top several megabytes. Check out the <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page too - it has almost 40 images and the whole page load is just barely over a megabyte!\r\n\r\n<a title=\"Real Favicon Generator\" href=\"http://realfavicongenerator.net/\" target=\"_blank\">Real Favicon Generator</a> - This favicon generator takes a square image that you have and builds out the 20+ favicons that your site needs to look good on every single device. It even gives you several tips and suggestions along the way.\r\n\r\n<a title=\"Vim\" href=\"http://www.vim.org/\" target=\"_blank\">Vim</a>, <a title=\"Zsh\" href=\"http://www.zsh.org/\" target=\"_blank\">Zsh</a>, and <a title=\"Tmux\" href=\"http://tmux.sourceforge.net/\" target=\"_blank\">Tmux</a> - I won\'t explain these since they\'re not related to specifically to this site, but these 3 tools alone keep me incredibly productive.\r\n\r\nAnd that\'s it! Everything that my site currently runs on has been listed here and in the <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\" target=\"_blank\">previous blog post</a>. Hope you enjoyed reading about my tools, and let me know if you have anything else I should be checking out!','What This Site Runs On - Part 2','','inherit','open','open','','167-revision-v1','','','2014-06-30 18:11:26','2014-06-30 18:11:26','',167,'http://thesocietea.org/2014/06/167-revision-v1/',0,'revision','',0),(170,1,'2014-06-30 18:15:25','2014-06-30 18:15:25','Now that we\'ve established that this site is running on Wordpress (wondering why I made that choice? <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\">Read about it</a>), I want to delve in further to talk about what else I\'m using, and the tools I used to build this site. We\'ll start off with languages, language plugins, and then general dev tools.\r\n<h2>Languages</h2>\r\nNo big surprises here:\r\n<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>Javascript</li>\r\n	<li>PHP</li>\r\n</ul>\r\n<h2>Language Plugins</h2>\r\n<a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> - I think this is a given.\r\n\r\n<a title=\"Sass\" href=\"http://sass-lang.com/\" target=\"_blank\">Sass</a> - Sass is a preprocessor for CSS which gives you a bunch of extra neat CSS enhancements such as modular mixins, functions, variables, style nesting, and even conditionals. It\'s ruby gem, so it integrates very well with Rails projects.\r\n\r\n<a title=\"Compass\" href=\"http://compass-style.org/\" target=\"_blank\">Compass</a> - Compass is a sass framework that gives you a lot of baseline modules for you to include in your CSS. I use it mostly so I don\'t have to write the same style 4 times when all that\'s changing are the prefix (incredibly handy for gradients).\r\n\r\n<a title=\"Susy\" href=\"http://susy.oddbird.net/\" target=\"_blank\">Susy</a> - Susy is a sass plugin that gives you grid control over your web page. No longer do you have to worry about floating and clearfixing things yourself, Susy will do that for you (and it makes for very, very easy responsive design).\r\n\r\n<a title=\"Skrollr\" href=\"https://github.com/Prinzhorn/skrollr\" target=\"_blank\">Skrollr</a> - Skrollr is a javascript parallax plugin. I use it largely on the <a title=\"About\" href=\"http://thesocietea.org/about/\" target=\"_blank\">about</a> page, but you can see it on every subpage header, and the home page. Very, very easy to use, given how powerful it is.\r\n\r\n<a title=\"Sidr\" href=\"http://www.berriart.com/sidr/\" target=\"_blank\">Sidr</a> - javascript plugin for the responsive nav. Don\'t know what I\'m talking about? View the site on a tablet, phone, or just shrink the screen down and see how the nav changes.\r\n\r\n<a title=\"Typed.js\" href=\"http://www.mattboldt.com/demos/typed-js/\" target=\"_blank\">Typed.js</a> - javascript plugin for the typing animation that you see at the top of the home page. It\'s a really cool effect, and the plugin is really simple to use.\r\n\r\n<a title=\"Magnific Popup\" href=\"http://dimsemenov.com/plugins/magnific-popup/\" target=\"_blank\">Magnific Popup</a> - javascript plugin for the lightbox functionality - you can see this on my <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page. Lightboxes allow you to show thumbnails on your page which are much smaller in size than the real image itself; this allows you to have a speedy page load and only load your images when the user shows they want to see them. It\'s responsive by default, and, yup you guessed it, very simple to use.\r\n<h2>Dev Tools</h2>\r\n<a title=\"Nginx\" href=\"http://nginx.com/\" target=\"_blank\">Nginx</a> - Lightning quick web server to serve up my pages. It\'s usually this or apache, and nginx always wins in my book.\r\n\r\n<a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">Grunt</a> - Grunt is a build automation tool which does so, so much for me. It automatically handles all of my SASS compilation and CSS minification, Coffeescript compilation and JS minification, image minification, and more. If you haven\'t looked into a build automation tool before, I highly recommend you look into Grunt. Your productivity will skyrocket.\r\n\r\nImage Minification - Not really a tool, but I specifically minified every single image on my site through Photoshop, and further through Grunt\'s <a title=\"Image Min\" href=\"https://github.com/gruntjs/grunt-contrib-imagemin\" target=\"_blank\">image min</a> plugin. Just as an example, my home page has over 10 images, and combined with the entire page load including CSS and JS, it\'s not even half a megabyte. Without image minification, that could easily top several megabytes. Check out the <a title=\"Projects\" href=\"http://thesocietea.org/projects/\" target=\"_blank\">projects</a> page too - it has almost 40 images and the whole page load is just barely over a megabyte!\r\n\r\n<a title=\"Real Favicon Generator\" href=\"http://realfavicongenerator.net/\" target=\"_blank\">Real Favicon Generator</a> - This favicon generator takes a square image that you have and builds out the 20+ favicons that your site needs to look good on every single device. It even gives you several tips and suggestions along the way.\r\n\r\n<a title=\"Vim\" href=\"http://www.vim.org/\" target=\"_blank\">Vim</a>, <a title=\"Zsh\" href=\"http://www.zsh.org/\" target=\"_blank\">Zsh</a>, and <a title=\"Tmux\" href=\"http://tmux.sourceforge.net/\" target=\"_blank\">Tmux</a> - I won\'t explain these since they\'re not related specifically to this site, but these 3 tools alone keep me incredibly productive.\r\n\r\nAnd that\'s it! Everything that my site currently runs on has been listed here and in the <a title=\"What This Site Runs On – Part 1\" href=\"http://thesocietea.org/2014/06/what-this-site-runs-on-part-1/\" target=\"_blank\">previous blog post</a>. Hope you enjoyed reading about my tools, and let me know if you have anything else I should be checking out!','What This Site Runs On - Part 2','','inherit','open','open','','167-revision-v1','','','2014-06-30 18:15:25','2014-06-30 18:15:25','',167,'http://thesocietea.org/2014/06/167-revision-v1/',0,'revision','',0),(172,1,'2014-07-11 02:03:02','2014-07-11 02:03:02','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible site means ensuring that all users - whether disabled in some way or not - can not only access your site but also interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind deficiencies, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s get into the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Use Semantic HTML5 Elements</h2>\r\nHTML5 added some new descriptive container elements that you should learn about if you don\'t know them already. These include nav, section, header, footer, article, and aside. Each of them function just like a div, but have different semantic meanings. For example, <em>nav</em> should be used for your page\'s navigation, <em>aside</em> should be used for non-relavant content, <em>section</em> is a large container which can contain a <em>header, footer, </em>and multiple <em>articles</em>, etc.\r\n\r\nWhile an average user won\'t usually see the difference, it makes for better design architecture, enhances your browser\'s understanding of the content inside of these containers, and allows for more rich screen reading.\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when a link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine are structured like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranomoly, which means they have difficulties seeing green. To learn more about the different types (Protanomoly, Deuteranomoly, Tritanomoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments. I have been using this extensively to test color issues on my web pages, and it\'s been incredibly insightful to see what real colorblind users see.\r\n\r\n<hr class=\"short\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed anything huge in this post.','Developing for Accessibility','','publish','open','open','','developing-for-accessibility','','\nhttp://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/','2014-07-11 21:37:10','2014-07-11 21:37:10','',0,'http://thesocietea.org/?p=172',0,'post','',0),(173,1,'2014-07-11 01:42:00','2014-07-11 01:42:00','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"color: #444444;\">[code language=\"html\"]</span><br style=\"color: #444444;\" />&lt;img src=\"some-source\" alt=\"A cool image of a penguin. Just chillin.\" /&gt;<br style=\"color: #444444;\" /><span style=\"color: #444444;\">[/code]</span>','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:42:00','2014-07-11 01:42:00','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(174,1,'2014-07-11 01:51:21','2014-07-11 01:51:21','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[code language=\"html\"]&lt;/span&gt;&lt;br style=&quot;color: #444444;&quot; /&gt;&amp;lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&amp;gt;&lt;br style=&quot;color: #444444;&quot; /&gt;&lt;span style=&quot;color: #444444;&quot;&gt;[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:51:21','2014-07-11 01:51:21','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(175,1,'2014-07-11 01:51:52','2014-07-11 01:51:52','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:51:52','2014-07-11 01:51:52','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(176,1,'2014-07-11 01:54:15','2014-07-11 01:54:15','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[php]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/php]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:54:15','2014-07-11 01:54:15','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(177,1,'2014-07-11 01:55:01','2014-07-11 01:55:01','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n\r\n[html]\r\n&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;\r\n[/html]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:55:01','2014-07-11 01:55:01','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(178,1,'2014-07-11 01:55:23','2014-07-11 01:55:23','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]\r\n&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;&lt;/pre&gt;\r\n&lt;pre&gt;&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;&lt;/pre&gt;\r\n&lt;pre&gt;&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;&lt;/pre&gt;\r\n&lt;pre&gt;\r\n[/html]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:55:23','2014-07-11 01:55:23','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(179,1,'2014-07-11 01:57:09','2014-07-11 01:57:09','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]\r\n&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;\r\n[/html]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 01:57:09','2014-07-11 01:57:09','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(180,1,'2014-07-11 02:02:38','2014-07-11 02:02:38','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n\r\n[code lang=\"js\"]your code here[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:02:38','2014-07-11 02:02:38','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(181,1,'2014-07-11 02:02:53','2014-07-11 02:02:53','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means.\r\n\r\nDeveloping an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing.\r\n\r\nLet\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n\r\n[code lang=\"js\"]var test;[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:02:53','2014-07-11 02:02:53','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(182,1,'2014-07-11 02:03:42','2014-07-11 02:03:42','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[code lang=\"js\"]var test;[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:03:42','2014-07-11 02:03:42','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(183,1,'2014-07-11 02:07:34','2014-07-11 02:07:34','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n<pre>```javascript\r\nvar test;\r\n```</pre>','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:07:34','2014-07-11 02:07:34','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(184,1,'2014-07-11 02:07:49','2014-07-11 02:07:49','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[code lang=\"js\"]`\r\nvar test;[/code]\r\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:07:49','2014-07-11 02:07:49','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(185,1,'2014-07-11 02:09:52','2014-07-11 02:09:52','<p>Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:</p>\n\n<h3>Image and Link Attributes If there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:</h3>\n\n<pre>```javascript\nvar test;\n```</pre>\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:09:52','2014-07-11 02:09:52','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(186,1,'2014-07-11 02:10:12','2014-07-11 02:10:12','<p>Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:</p>\n\n<h3>Image and Link Attributes</h3>\n\n<p>If there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:</p>\n\n<p><code>javascript\nvar test;</code></p>\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:10:12','2014-07-11 02:10:12','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(187,1,'2014-07-11 02:10:24','2014-07-11 02:10:24','<p>Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience. This doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development. Notice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:</p>\n\n<h3>Image and Link Attributes</h3>\n\n<p>If there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:</p>\n\n<p><code>var test;</code></p>\n','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:10:24','2014-07-11 02:10:24','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(188,1,'2014-07-11 02:11:36','2014-07-11 02:11:36','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<code>var test;</code>','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 02:11:36','2014-07-11 02:11:36','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(189,1,'2014-07-11 18:14:59','2014-07-11 18:14:59','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n[css autolinks=\"false\" classname=\"myclass\" collapse=\"false\" firstline=\"1\" gutter=\"true\" highlight=\"1-3,6,9\" htmlscript=\"false\" light=\"false\" padlinenumbers=\"false\" smarttabs=\"true\" tabsize=\"4\" toolbar=\"true\" title=\"example-filename.php\"]your code here[/css]\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:14:59','2014-07-11 18:14:59','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(190,1,'2014-07-11 18:22:54','2014-07-11 18:22:54','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\"> </span>\r\n\r\n[css autolinks=\"false\" classname=\"myclass\" collapse=\"false\" firstline=\"1\" gutter=\"true\" highlight=\"1-3,6,9\" htmlscript=\"false\" light=\"false\" padlinenumbers=\"false\" smarttabs=\"true\" tabsize=\"4\" toolbar=\"true\" title=\"example-filename.php\"]your code here[/css]\r\n\r\n\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:22:54','2014-07-11 18:22:54','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(191,1,'2014-07-11 18:23:55','2014-07-11 18:23:55','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\"> </span>\r\n\r\n[css autolinks=\"false\" classname=\"myclass\" collapse=\"false\" firstline=\"1\" gutter=\"true\" highlight=\"1-3,6,9\" htmlscript=\"false\" light=\"false\" padlinenumbers=\"false\" smarttabs=\"true\" tabsize=\"4\" toolbar=\"true\" title=\"example-filename.php\"]your code here[/css]\r\n\r\n\r\n\r\n[html 1=\"&lt;pre&gt;padlinenumbers=&quot;true&quot;&lt;/pre&gt;\" 2=\"&lt;pre&gt;\" language=\"&lt;/pre&gt;\"]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:23:55','2014-07-11 18:23:55','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(192,1,'2014-07-11 18:24:15','2014-07-11 18:24:15','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\"> </span>\r\n\r\n[css autolinks=\"false\" classname=\"myclass\" collapse=\"false\" firstline=\"1\" gutter=\"true\" highlight=\"1-3,6,9\" htmlscript=\"false\" light=\"false\" padlinenumbers=\"false\" smarttabs=\"true\" tabsize=\"4\" toolbar=\"true\"]your code here[/css]\r\n\r\n\r\n\r\n[html 1=\"&lt;pre&gt;padlinenumbers=&quot;true&quot;&lt;/pre&gt;\" 2=\"&lt;pre&gt;\" language=\"&lt;/pre&gt;\"]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:24:15','2014-07-11 18:24:15','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(193,1,'2014-07-11 18:25:09','2014-07-11 18:25:09','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n&nbsp;\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:25:09','2014-07-11 18:25:09','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(194,1,'2014-07-11 18:27:45','2014-07-11 18:27:45','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\n<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n</span>\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 18:27:45','2014-07-11 18:27:45','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(195,1,'2014-07-11 20:58:21','2014-07-11 20:58:21','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h3>Noticeable Focus Status for Links</h3>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]&lt;/pre&gt;\r\n&lt;pre&gt;&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 20:58:21','2014-07-11 20:58:21','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(196,1,'2014-07-11 20:59:13','2014-07-11 20:59:13','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h3>Image and Link Attributes</h3>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h3>Noticeable Focus Status for Links</h3>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 20:59:13','2014-07-11 20:59:13','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(197,1,'2014-07-11 20:59:48','2014-07-11 20:59:48','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n&nbsp;','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 20:59:48','2014-07-11 20:59:48','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(198,1,'2014-07-11 21:19:01','2014-07-11 21:19:01','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:19:01','2014-07-11 21:19:01','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(199,1,'2014-07-11 21:21:26','2014-07-11 21:21:26','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:21:26','2014-07-11 21:21:26','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(200,1,'2014-07-11 21:21:46','2014-07-11 21:21:46','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it really needs down in the actual build phase of development. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:21:46','2014-07-11 21:21:46','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(201,1,'2014-07-11 21:22:12','2014-07-11 21:22:12','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to in the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:22:12','2014-07-11 21:22:12','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(202,1,'2014-07-11 21:22:26','2014-07-11 21:22:26','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible is ensuring that all users - whether disabled in some way or not - can not only access your but interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:22:26','2014-07-11 21:22:26','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(203,1,'2014-07-11 21:28:37','2014-07-11 21:28:37','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible site means ensuring that all users - whether disabled in some way or not - can not only access your site but also interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind disorders, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s talk about the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Use Semantic HTML5 Elements</h2>\r\nHTML5 added some new descriptive container elements that you should learn about if you don\'t know them already. These include nav, section, header, footer, article, and aside. Each of them function just like a div, but have different semantic meanings. For example, <em>nav</em> should be used for your page\'s navigation, <em>aside</em> should be used for non-relavant content, <em>section</em> is a large container which can contain a <em>header, footer, </em>and multiple <em>articles</em>, etc.\r\n\r\nWhile an average user won\'t usually see the difference, it makes for better design architecture, enhances your browser\'s understanding for the content inside of these containers, and allows for more rich screen reading.\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when the link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine look like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is basically a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranamoly, which means they have difficulties seeing green. To learn more about the different types (Protanamoly, Deuteranamoly, Tritanamoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed something huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:28:37','2014-07-11 21:28:37','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(204,1,'2014-07-11 21:34:50','2014-07-11 21:34:50','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible site means ensuring that all users - whether disabled in some way or not - can not only access your site but also interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind deficiencies, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s get into the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Use Semantic HTML5 Elements</h2>\r\nHTML5 added some new descriptive container elements that you should learn about if you don\'t know them already. These include nav, section, header, footer, article, and aside. Each of them function just like a div, but have different semantic meanings. For example, <em>nav</em> should be used for your page\'s navigation, <em>aside</em> should be used for non-relavant content, <em>section</em> is a large container which can contain a <em>header, footer, </em>and multiple <em>articles</em>, etc.\r\n\r\nWhile an average user won\'t usually see the difference, it makes for better design architecture, enhances your browser\'s understanding of the content inside of these containers, and allows for more rich screen reading.\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when a link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine are structured like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranomoly, which means they have difficulties seeing green. To learn more about the different types (Protanomoly, Deuteranomoly, Tritanomoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments. I have been using this extensively to test color issues on my web pages, and it\'s been incredibly insightful to see what real colorblind users see.\r\n\r\n<hr class=\"&quot;mini\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed anything huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:34:50','2014-07-11 21:34:50','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(205,1,'2014-07-11 21:35:37','2014-07-11 21:35:37','Accessibility is one of those topics that everyone always <em>aims</em> for and remarks how important it is as far as development goes, but it never really gets thought of as much as it needs to during the actual build phase. But wait a minute, let\'s define what accessibility for the web really means. Developing an accessible site means ensuring that all users - whether disabled in some way or not - can not only access your site but also interact with it with the best possible user experience.\r\n\r\nThis doesn\'t entail responsiveness as much (which should always be staple of a new web project these days), but focuses more on building a well structured website so that it is keyboard-navigable, parseable with screen readers, visible to users with color-blind deficiencies, etc. Sure, these users won\'t make up a majority of the users on your sites, but we all know that\'s just an excuse to get out of a little extra planning for development.\r\n\r\nNotice how I said <em>planning for development</em> instead of actual <em>development</em>. That\'s because there\'s really no extra development involved with making an accessible webpage, as long as you know what you\'re doing. Let\'s get into the key areas where developers should focus on in order to make their sites fully accessible:\r\n<h2>Image and Link Attributes</h2>\r\nIf there\'s one thing you know about accessibility, it\'s to put alt tags on your images. Something like this:\r\n\r\n[html]&lt;img src=&quot;some-source&quot; alt=&quot;A cool image of a penguin. Just chillin.&quot; /&gt;[/html]\r\n\r\nBut, don\'t forget about your anchor tags too. Instead of alt attributes, you need to add title attributes here. This isn\'t necessary for all links, but make sure you do them for your icon-font anchors - you know, things like your facebook, twitter, and responsive nav icon:\r\n\r\n[html]&lt;a class=&quot;facebook-icon&quot; title=&quot;Facebook&quot;&gt;&lt;a/&gt;[/html]\r\n\r\n<h2>Use Semantic HTML5 Elements</h2>\r\nHTML5 added some new descriptive container elements that you should learn about if you don\'t know them already. These include nav, section, header, footer, article, and aside. Each of them function just like a div, but have different semantic meanings. For example, <em>nav</em> should be used for your page\'s navigation, <em>aside</em> should be used for non-relavant content, <em>section</em> is a large container which can contain a <em>header, footer, </em>and multiple <em>articles</em>, etc.\r\n\r\nWhile an average user won\'t usually see the difference, it makes for better design architecture, enhances your browser\'s understanding of the content inside of these containers, and allows for more rich screen reading.\r\n<h2>Noticeable Focus Status for Links</h2>\r\nYou probably know about some of the states that an html anchor can be in such as hover or visited, but you may not know about the focus state. The focus state is shown when ... yup, you guesssed it, when a link is focused. Many users don\'t see this phase because it\'s when your keyboard is focused on the element. This is the state when you are typing into an input element, and the state that the \'Submit\' link has when you tab onto it to hit enter.\r\n\r\nMany users do actually use the tab key to navigate through your site, whether for accessibility purposes or just sheer speed, and you need to account for that. There are 2 things I usually do here.\r\n\r\nFirst - I put a default style on all focused links:\r\n\r\n[css]a:focus { outline: 1px solid #ffa500!important; }[/css]\r\n\r\nNext, I usually find the elements that have unique hover effects, and I often times just use the same hover effect for the focus effect. So some elements of mine are structured like this:\r\n\r\n[css]\r\n&amp;:hover, &amp;:focus {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n[/css]\r\n\r\n<h2> Skip Menus</h2>\r\nEvery accessible page should be complete with a skip menu. A skip menu is a menu that is invisible, but becomes visible after you start tabbing through the page. It allows users to skip to certain portions of your page content - this is very important for users who use screen readers or can\'t scroll well. Here\'s an <a href=\"http://new.okcommerce.gov/smart-move/\" target=\"_blank\">example</a> of a solid skip menu I built here at Staplegun. Just start tabbing through the page and you\'ll see what I mean.\r\n\r\nThe code involved is very simple, but I won\'t cloud up this post with it. See my <a title=\"Skip Menu Gist\" href=\"https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666\" target=\"_blank\">skip menu gist</a> if you\'d like to see how to easily build one.\r\n<h2>Test Your Site With a Screen Reader</h2>\r\nMany users require the use of a screen reader to interactive with your site. Luckily, if you\'ve followed the advice laid out thus far, then most of your site should already work fine with a screen reader. This is where you\'ll figure out what links need titles, what images need alt tags, and if you need to fix any of your page layout structure.\r\n\r\nIf you\'re testing in Chrome, I like the screen reader <a title=\"Chrome Vox\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn\" target=\"_blank\">Chrome Vox</a> which is a Chrome extension. It\'s very easy to use from a development standpoint.\r\n<h2>Test For Color Blind Users</h2>\r\nColor blindness isn\'t incredibly common, but common enough that to be a good front-end developer, you need to account for it. This means following a good color scheme where the colors fit together for maximum viewing accessibility. Usually if you use a <a href=\"http://paletton.com/\" target=\"_blank\">color scheme designer</a> of some sort and stick with it, then you\'re in pretty good shape already.\r\n\r\nMost users who are color blind fall into the category of deuteranomoly, which means they have difficulties seeing green. To learn more about the different types (Protanomoly, Deuteranomoly, Tritanomoly, etc.), check out the main <a title=\"Colorblind Types\" href=\"http://www.colourblindawareness.org/colour-blindness/types-of-colour-blindness/\" target=\"_blank\">Colorblind Awareness site</a>.\r\n\r\nSince most developers aren\'t colorblind, it\'s tough to test for without being in a colorblind user\'s shoes. Well now you can be, with <a title=\"NoCoffee Chrome Extension\" href=\"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US\" target=\"_blank\">NoCoffee</a> - a vision simulator that will easily show you what your web pages look like from the viewpoint of several vision impairments. I have been using this extensively to test color issues on my web pages, and it\'s been incredibly insightful to see what real colorblind users see.\r\n\r\n<hr class=\"short\" />\r\n\r\nAnd that\'s the gist of it! A little bit more than just adding alt tags to your images, but not enough to where you can\'t handle it. Now go out there and develop fully accessible web pages, and get in touch with me if I missed anything huge in this post.','Developing for Accessibility','','inherit','open','open','','172-revision-v1','','','2014-07-11 21:35:37','2014-07-11 21:35:37','',172,'http://thesocietea.org/2014/07/172-revision-v1/',0,'revision','',0),(206,1,'2014-07-14 22:27:34','2014-07-14 22:27:34','','big-json-1','','inherit','open','open','','big-json-1','','','2014-07-14 22:27:34','2014-07-14 22:27:34','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-json-1.jpg',0,'attachment','image/jpeg',0),(207,1,'2014-07-14 22:27:34','2014-07-14 22:27:34','','big-json-2','','inherit','open','open','','big-json-2','','','2014-07-14 22:27:34','2014-07-14 22:27:34','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-json-2.jpg',0,'attachment','image/jpeg',0),(208,1,'2014-07-14 22:27:35','2014-07-14 22:27:35','','big-json-3','','inherit','open','open','','big-json-3','','','2014-07-14 22:27:35','2014-07-14 22:27:35','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-json-3.jpg',0,'attachment','image/jpeg',0),(209,1,'2014-07-14 22:27:35','2014-07-14 22:27:35','','big-json-4','','inherit','open','open','','big-json-4','','','2014-07-14 22:27:35','2014-07-14 22:27:35','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-json-4.jpg',0,'attachment','image/jpeg',0),(210,1,'2014-07-14 22:27:45','2014-07-14 22:27:45','','th-json-1','','inherit','open','open','','th-json-1','','','2014-07-14 22:27:45','2014-07-14 22:27:45','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-json-1.jpg',0,'attachment','image/jpeg',0),(211,1,'2014-07-14 22:27:45','2014-07-14 22:27:45','','th-json-2','','inherit','open','open','','th-json-2','','','2014-07-14 22:27:45','2014-07-14 22:27:45','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-json-2.jpg',0,'attachment','image/jpeg',0),(212,1,'2014-07-14 22:27:46','2014-07-14 22:27:46','','th-json-3','','inherit','open','open','','th-json-3','','','2014-07-14 22:27:46','2014-07-14 22:27:46','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-json-3.jpg',0,'attachment','image/jpeg',0),(213,1,'2014-07-14 22:27:46','2014-07-14 22:27:46','','th-json-4','','inherit','open','open','','th-json-4','','','2014-07-14 22:27:46','2014-07-14 22:27:46','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-json-4.jpg',0,'attachment','image/jpeg',0),(214,1,'2014-07-14 22:30:01','2014-07-14 22:30:01','','JSON API Websocket Wrapper','','publish','closed','closed','','json-api-websocket-wrapper','','','2014-08-18 22:11:18','2014-08-18 22:11:18','',0,'http://thesocietea.org/?post_type=project&#038;p=214',3,'project','',0),(215,1,'2014-07-14 22:36:58','2014-07-14 22:36:58','','big-77-1','','inherit','open','open','','big-77-1-2','','','2014-07-14 22:36:58','2014-07-14 22:36:58','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-77-1.jpg',0,'attachment','image/jpeg',0),(216,1,'2014-07-14 22:36:59','2014-07-14 22:36:59','','big-77-responsive','','inherit','open','open','','big-77-responsive-2','','','2014-07-14 22:36:59','2014-07-14 22:36:59','',0,'http://thesocietea.org/wp-content/uploads/2014/07/big-77-responsive.jpg',0,'attachment','image/jpeg',0),(217,1,'2014-07-14 22:36:59','2014-07-14 22:36:59','','th-77-1','','inherit','open','open','','th-77-1-2','','','2014-07-14 22:36:59','2014-07-14 22:36:59','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-77-1.jpg',0,'attachment','image/jpeg',0),(218,1,'2014-07-14 22:37:00','2014-07-14 22:37:00','','th-77-responsive','','inherit','open','open','','th-77-responsive-2','','','2014-07-14 22:37:00','2014-07-14 22:37:00','',0,'http://thesocietea.org/wp-content/uploads/2014/07/th-77-responsive.jpg',0,'attachment','image/jpeg',0),(220,1,'2014-07-24 18:18:14','2014-07-24 18:18:14','Finally, 7 months later, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning vim (which would be <em>awesome</em>), or you just came here of your own random volition. Either works for me, but if you have heard of vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\n<strong>Prerequisite</strong>: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<img class=\"alignnone wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" />\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn vim, and if so, then continue using it to get familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and is a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it as your editor.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a section of code for pasting), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe vim community is very, very active and is completely focused on productivity. You can find vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','publish','open','open','','how-to-learn-vim','','\nhttp://thesocietea.org/2014/06/vim-as-your-editor/','2014-08-22 17:46:28','2014-08-22 17:46:28','',0,'http://thesocietea.org/?p=220',0,'post','',0),(221,1,'2014-07-24 17:40:24','2014-07-24 17:40:24','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n\r\n[shell]vimtutor[/shell]\r\n','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 17:40:24','2014-07-24 17:40:24','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(222,1,'2014-07-24 17:45:13','2014-07-24 17:45:13','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n\r\n[shell]vimtutor[/shell]\r\n\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 17:45:13','2014-07-24 17:45:13','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(223,1,'2014-07-24 17:54:44','2014-07-24 17:54:44','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n<h2>Plugins</h2>\r\nThe Vim community is very, very active and is completely focused on productivity.','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 17:54:44','2014-07-24 17:54:44','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(224,1,'2014-07-24 18:00:17','2014-07-24 18:00:17','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe Vim community is very, very active and is completely focused on productivity. You can find Vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base Vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, Git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (Very similar to a ruby Gemfile).','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:00:17','2014-07-24 18:00:17','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(225,1,'2014-07-24 18:08:45','2014-07-24 18:08:45','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe Vim community is very, very active and is completely focused on productivity. You can find Vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base Vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, Git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (Very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:08:45','2014-07-24 18:08:45','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(226,1,'2014-07-24 18:11:37','2014-07-24 18:11:37','','vim_tutor','','inherit','open','open','','vim_tutor','','','2014-07-24 18:11:37','2014-07-24 18:11:37','',220,'http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg',0,'attachment','image/jpeg',0),(227,1,'2014-07-24 18:11:51','2014-07-24 18:11:51','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<a href=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\"><img class=\"alignright wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" /></a>\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe Vim community is very, very active and is completely focused on productivity. You can find Vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base Vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, Git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (Very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:11:51','2014-07-24 18:11:51','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(228,1,'2014-07-24 18:12:24','2014-07-24 18:12:24','Finally, 7 months latter, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning Vim (which would be **awesome**), or you just came here of your own random volition. Either works for me, but if you have heard of Vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\nPrerequisite: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<a href=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\"><img class=\"alignnone wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" /></a>\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn Vim, and if so, then to start getting familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and gives you a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for Vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a line into your copy buffer), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using Vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using Vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe Vim community is very, very active and is completely focused on productivity. You can find Vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base Vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, Git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (Very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:12:24','2014-07-24 18:12:24','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(229,1,'2014-07-24 18:18:14','2014-07-24 18:18:14','Finally, 7 months later, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning vim (which would be <em>awesome</em>), or you just came here of your own random volition. Either works for me, but if you have heard of vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\n<strong>Prerequisite</strong>: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<a href=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\"><img class=\"alignnone wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" /></a>\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn vim, and if so, then continue using it to get familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and is a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it as your editor.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a section of code for pasting), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe vim community is very, very active and is completely focused on productivity. You can find vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-07-24 18:18:14','2014-07-24 18:18:14','',220,'http://thesocietea.org/2014/07/220-revision-v1/',0,'revision','',0),(230,1,'2014-07-28 01:53:58','2014-07-28 01:53:58','Below you\'ll find my blog posts. You can also check out the <a title=\"RSS Feed\" href=\"http://thesocietea.org/feed/\">RSS feed</a> too.','Blog','','inherit','open','open','','16-autosave-v1','','','2014-07-28 01:53:58','2014-07-28 01:53:58','',16,'http://thesocietea.org/2014/07/16-autosave-v1/',0,'revision','',0),(231,1,'2014-07-28 01:55:02','2014-07-28 01:55:02','Below you\'ll find my blog posts. You can also check out the <a title=\"RSS Feed\" href=\"http://thesocietea.org/feed/\">RSS feed</a> too.','Blog','','inherit','open','open','','16-revision-v1','','','2014-07-28 01:55:02','2014-07-28 01:55:02','',16,'http://thesocietea.org/2014/07/16-revision-v1/',0,'revision','',0),(233,1,'2014-08-15 03:00:44','2014-08-15 03:00:44','Lately I\'ve been getting into build automation quite a bit and trying to maximize my workflow productivity without having to worry about the not-fun things like ensuring that I\'m including all my files, concatenating scripts together, and manually running build tasks. I\'ve been using <a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt</a> for a while now, which has been key for speeding up my workflow when I\'m working with new web projects, but I knew there was more out there to explore. I had heard <strong>bower</strong> and <strong>browserify</strong> thrown around on Twitter and at local dev meetings, and I knew that my fellow developers were making use of these tools, so I decided to check them out. Man ... I\'m glad I did, because these are tools that every full-stack developer should know about.\r\n\r\nWhile bower and browserify aren\'t necessarily related, I use them together quite a bit because they\'re both geared specifically towards client-side development, and it\'s this bond which makes them such a powerful combo. Let\'s start off with a bio of what they both are:\r\n<h2>Bower</h2>\r\n<a title=\"Bower\" href=\"bower.io\" target=\"_blank\">Bower</a> is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to fetch.  It gathers<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a <strong>bower_components</strong> directory at the root of where you run the install command. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Normalize-SCSS. Notice how there\'s both javascript and sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that bower retrieves are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nSo what makes bower any better than the other common package managers like NPM and RubyGems? Well, none of them are necessarily <em>better</em> than the other - they all handle specific types of packages. All three of these package managers allow you to list out your dependencies and versions, and will ensure that the full dependency tree is met. However, NPM and RubyGems are more geared towards server-side development and also allow the installation of global executable commands. Bower is much simpler in that it is only meant to find the front-end packages that you need, and dish them out for you.\r\n\r\nNow that we\'ve discussed how to gather our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter browserify.\r\n<h2>Browserify</h2>\r\n<a title=\"Browserify\" href=\"http://browserify.org/\" target=\"_blank\">Browserify</a> is a tool which, just like bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify is honestly really simple; it only does two things for you:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together and compile them down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jQuery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I\'m using. By setting jQuery to a variable, I am able to use the standard <strong>$</strong> operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can access their source files directly with the help of browserify. This is similar to using the @import function in sass, but because browserify accounts for modularity, these files will only be accessible in the scope that you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\nThis will run through our main.js file, gather all of the required files, and build it all into a file called bundle.js. This would be the file that you include in your html, and it will be written in browser-compatible javascript. That\'s how you do node - the browser way.\r\n\r\n<hr class=\"short\" />\r\n\r\nSo at this point, we\'ve established a good footing on bower and browserify, both of which are tools geared towards making your front-end workflow as efficient and clean as possible. We also discussed how you can install vendor packages with bower and then include them directly into your javascript using browserify, allowing you to write modular front-end code. Now this is a big improvement over manually finding and downloading vendor packages from the internet and muddying up your html by including multiple libraries (not to mention ignoring the concept of scope altogether), but we can still improve on this workflow. After all, we\'re having to manually run the browserify command every time we want to rebundle our files - and we don\'t enjoy manual labor like that.\r\n\r\nSo what can we do? Well, I mentioned I\'ve been getting into build automation lately, so I bet we can standardize this workflow and give instructions to a tool like grunt to do all the work for us. We covered our basics here, so next time we can get into maximizing our javascript building by incorporating a task runner (as well as a few other tricks I\'ll show you).\r\n\r\nStay tuned for the next post: Building Javascript with Grunt, Bower, Browserify.','Getting Familiar with Bower and Browserify','','publish','open','open','','getting-familiar-with-bower-and-browserify','','','2014-08-15 03:00:44','2014-08-15 03:00:44','',0,'http://thesocietea.org/?p=233',0,'post','',0),(234,1,'2014-08-14 22:47:24','2014-08-14 22:47:24','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple \r\n[code]bower install &lt;package&gt;[/code]\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:47:24','2014-08-14 22:47:24','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(235,1,'2014-08-14 22:47:28','2014-08-14 22:47:28','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[code]bower install &lt;package&gt;[/code]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:47:28','2014-08-14 22:47:28','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(236,1,'2014-08-14 22:52:44','2014-08-14 22:52:44','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n<pre>[<span style=\"color: #444444;\">sourcecode language=\"plain\"</span>]bower install &lt;package&gt;[/sourcecode]</pre>\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:52:44','2014-08-14 22:52:44','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(237,1,'2014-08-14 22:52:58','2014-08-14 22:52:58','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[code 1=\"style=&quot;color:\" 2=\"#444444;&quot;&gt;\" 3=\"language=&quot;plain&quot;&lt;/span&gt;\" language=\"&lt;span\"]bower install &lt;package&gt;[/code]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:52:58','2014-08-14 22:52:58','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(238,1,'2014-08-14 22:53:11','2014-08-14 22:53:11','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[code 1=\"style=&quot;color:\" 2=\"#444444;&quot;&gt;\" 3=\"language=&quot;bash&quot;&lt;/span&gt;\" language=\"&lt;span\"]bower install &lt;package&gt;[/code]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:53:11','2014-08-14 22:53:11','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(239,1,'2014-08-14 22:53:17','2014-08-14 22:53:17','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[code 1=\"style=&quot;color:\" 2=\"#444444;&quot;&gt;\" 3=\"language=&quot;php&quot;&lt;/span&gt;\" language=\"&lt;span\"]bower install &lt;package&gt;[/code]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:53:17','2014-08-14 22:53:17','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(240,1,'2014-08-14 22:53:33','2014-08-14 22:53:33','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\n, or you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 22:53:33','2014-08-14 22:53:33','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(241,1,'2014-08-14 23:00:23','2014-08-14 23:00:23','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[shell]&lt;/pre&gt;\r\n&lt;pre style=&quot;color: #000000;&quot;&gt;{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}&lt;/pre&gt;\r\n&lt;pre&gt;[/shell]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:00:23','2014-08-14 23:00:23','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(242,1,'2014-08-14 23:00:41','2014-08-14 23:00:41','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[shell]{&lt;/pre&gt;\r\n&lt;pre style=&quot;color: #000000;&quot;&gt;  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/shell]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:00:41','2014-08-14 23:00:41','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(243,1,'2014-08-14 23:01:06','2014-08-14 23:01:06','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[shell]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/shell]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:01:06','2014-08-14 23:01:06','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(244,1,'2014-08-14 23:01:54','2014-08-14 23:01:54','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it.</span>\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n\r\n[shell]bower install[/shell]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:01:54','2014-08-14 23:01:54','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(245,1,'2014-08-14 23:09:52','2014-08-14 23:09:52','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n\r\n[shell]bower install[/shell]\r\n\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. This tool seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while writing purely front-end code','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:09:52','2014-08-14 23:09:52','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(246,1,'2014-08-14 23:15:46','2014-08-14 23:15:46','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll write and eventually compile with browserify:\r\n\r\n[javascript]&lt;/pre&gt;\r\n&lt;pre style=&quot;color: #000000;&quot;&gt;var $ = require(\'./jquery.min.js\');\r\n\r\n// External Libs\r\nrequire(\'./lib/console-support.js\');\r\nrequire(\'./lib/outbound.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});&lt;/pre&gt;\r\n&lt;pre&gt;[/javascript]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:15:46','2014-08-14 23:15:46','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(247,1,'2014-08-14 23:16:32','2014-08-14 23:16:32','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll write and eventually compile with browserify:\r\n\r\n[javascript]\r\nvar $ = require(\'./jquery.min.js\');\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./lib/console-support.js\');\r\nrequire(\'./lib/outbound.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:16:32','2014-08-14 23:16:32','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(248,1,'2014-08-14 23:26:12','2014-08-14 23:26:12','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll write and eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jquery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I am using. By setting jquery to a variable, I am able to use the standard $ operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can modularly access their source files directly with the help of browserify. This is similar to using the @import function in sass, but browserify accounts for modularity, so these files will only be accessible in the scope in which you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\n\r\nThis will run through our main.js file, gather all of the requirements, and build it all into the file bundle.js. This would be the file that you include in your html, and it will be fully built as browser-compatible javascript. That\'s how you do Node - the browser way.\r\n\r\n<hr class=\"short\"/>\r\n\r\n&nbsp;','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:26:12','2014-08-14 23:26:12','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(249,1,'2014-08-14 23:31:41','2014-08-14 23:31:41','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about not-fun things like manually including files, concatenating scripts together, and manually running build tasks. I\'ve been into Grunt for a while now, which has been key for speeding up my workflow when I\'m working with projects that don\'t have build automation built in (like Rails or Ember-CLI). I had heard \'Bower\' and \'Browserify\' thrown around a on Twitter and local dev meetings, and I knew that my fellow developers were making use of them, so I decided to check them out. Boy am I glad I did, because these are tools that every developer dealing with the client-side should know about.\r\n\r\nWhile Bower and Browserify aren\'t related themselves, I use them together quite a bit which is what makes this combo so powerful. Let\'s start off with a brief bio of what they both are:\r\n<h2>Bower</h2>\r\nBower is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to download.  It fetches<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell Bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a directory at the root of where you run your command into a bower_components directory. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both Javascript and Sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that Bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nNow that we\'ve discussed how to get our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\nBrowserify is a tool which, just like Bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify only allows you to do two things:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll write and eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jquery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I am using. By setting jquery to a variable, I am able to use the standard $ operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can modularly access their source files directly with the help of browserify. This is similar to using the @import function in sass, but browserify accounts for modularity, so these files will only be accessible in the scope in which you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\nThis will run through our main.js file, gather all of the requirements, and build it all into the file bundle.js. This would be the file that you include in your html, and it will be fully built as browser-compatible javascript. That\'s how you do Node - the browser way.\r\n\r\n<hr class=\"short\" />\r\n\r\nSo at this point, we\'ve established a good footing on bower and browserify, both of which are tools geared towards making your front-end workflow as efficient and clean as possible. We also showed how you can install vendor packages with bower and then include them into your files using browserify, all while writing modular javascript. Now this is a big improvement over manually finding and downloading vendor packages from the internet, and muddying up your html by including multiple unminimized libraries (not to mention ignoring the concept of scope altogether), but we can still improve on this method. After all, we\'re having to manually run the browserify command every time we want to rebundle our files - and we don\'t like manual labor like that.\r\n\r\nSo stay tuned, we\'ve got our basics covered here, and next time we can get into maximizing your javascript building by incorporating build automation (as well as a few other tricks I\'ll show you).','Bower and Browserify = Super Asset Building','','inherit','open','open','','233-revision-v1','','','2014-08-14 23:31:41','2014-08-14 23:31:41','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(250,1,'2014-08-15 02:46:25','2014-08-15 02:46:25','Lately I\'ve been getting very into build automation and trying to maximize my workflow productivity without having to worry about the not-fun things like ensuring I\'m including all my files, concatenating scripts together, and manually running build tasks. I\'ve been into grunt for a while now, which has been key for speeding up my workflow when I\'m working with new web projects, but I knew there was more out there to explore. I had heard \'bower\' and \'browserify\' thrown around a on Twitter and at local dev meetings, and I knew that my fellow developers were making use of these tools, so I decided to check them out. Man ... I\'m glad I did, because these are tools that every full-stack developer should know about.\r\n\r\nWhile bower and browserify aren\'t necessarily related, I use them together quite a bit because they\'re both geared specifically towards client-side development, and it\'s this bond which makes them such a powerful combo. Let\'s start off with a bio of what they both are:\r\n<h2>Bower</h2>\r\n<a title=\"Bower\" href=\"bower.io\" target=\"_blank\">Bower</a> is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to fetch.  It gathers<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a \'bower_components\' directory at the root of where you run your command. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Noramlize-SCSS. Notice how there\'s both javascript and sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that bower gets are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nSo what makes Bower any better than the other common package managers like NPM and RubyGems? Well, none of them are necessarily <em>better</em> than the other - they all handle specific types of packages. All three of these package managers allow you to list out your dependencies and versions, and will ensure that the full dependency tree is met. However, NPM and RubyGems are more geared towards server-side development and also allow the installation of global executable commands. Bower is much simpler in that it is only meant to find the front-end packages that you need, and dish them out for you.\r\n\r\nNow that we\'ve discussed how to gather our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter Browserify.\r\n<h2>Browserify</h2>\r\n<a title=\"Browserify\" href=\"http://browserify.org/\" target=\"_blank\">Browserify</a> is a tool which, just like bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify is simple; only does two things for you:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together, and compile them down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jquery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I am using. By setting jquery to a variable, I am able to use the standard <strong>$</strong> operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can modularly access their source files directly with the help of browserify. This is similar to using the @import function in sass, but because browserify accounts for modularity, these files will only be accessible in the scope that you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\nThis will run through our main.js file, gather all of the requirements, and build it all into a file called bundle.js. This would be the file that you include in your html, and it will be written in browser-compatible javascript. That\'s how you do node - the browser way.\r\n\r\n<hr class=\"short\" />\r\n\r\nSo at this point, we\'ve established a good footing on bower and browserify, both of which are tools geared towards making your front-end workflow as efficient and clean as possible. We also discussed how you can install vendor packages with bower and then include them directly into your javascript using browserify, allowing you to write modular front-end code. Now this is a big improvement over manually finding and downloading vendor packages from the internet and muddying up your html by including multiple unminimized libraries (not to mention ignoring the concept of scope altogether), but we can still improve on this workflow. After all, we\'re having to manually run the browserify command every time we want to rebundle our files - and we don\'t enjoy manual labor like that.\r\n\r\nSo what can we do? Well, I mentioned I\'ve been getting into build automation lately, so I bet we can standardize this workflow and give instructions to a tool like Grunt to do all the work for us. We covered our basics here, so next time we can get into maximizing our javascript building by incorporating build automation (as well as a few other tricks I\'ll show you).\r\n\r\nStay tuned for the next post: Building Javascript with Grunt, Bower, Browserify.','Getting Familiar with Bower and Browserify','','inherit','open','open','','233-revision-v1','','','2014-08-15 02:46:25','2014-08-15 02:46:25','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(251,1,'2014-08-15 03:00:44','2014-08-15 03:00:44','Lately I\'ve been getting into build automation quite a bit and trying to maximize my workflow productivity without having to worry about the not-fun things like ensuring that I\'m including all my files, concatenating scripts together, and manually running build tasks. I\'ve been using <a title=\"Grunt\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt</a> for a while now, which has been key for speeding up my workflow when I\'m working with new web projects, but I knew there was more out there to explore. I had heard <strong>bower</strong> and <strong>browserify</strong> thrown around on Twitter and at local dev meetings, and I knew that my fellow developers were making use of these tools, so I decided to check them out. Man ... I\'m glad I did, because these are tools that every full-stack developer should know about.\r\n\r\nWhile bower and browserify aren\'t necessarily related, I use them together quite a bit because they\'re both geared specifically towards client-side development, and it\'s this bond which makes them such a powerful combo. Let\'s start off with a bio of what they both are:\r\n<h2>Bower</h2>\r\n<a title=\"Bower\" href=\"bower.io\" target=\"_blank\">Bower</a> is a front-end package manager, and works similar to NPM or RubyGems. You can either install packages one-by-one with a simple\r\n\r\n[shell]bower install &lt;package&gt;[/shell]\r\n\r\nOr you can create a bower.json file in which you specify lists of packages and their versions that you want to fetch.  It gathers<span style=\"color: #543729;\"> and installs packages from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. No longer do you need to manually download front-end packages from the source site or GitHub - now you just tell bower to do it. Install it with NPM:</span>\r\n\r\n[shell]npm install -g bower[/shell]\r\n\r\nSimilar to NPM, bower will install all packages inside of a <strong>bower_components</strong> directory at the root of where you run the install command. Here\'s what a sample bower.json would look like:\r\n\r\n[code]\r\n{\r\n  &quot;name&quot;: &quot;Package Name&quot;,\r\n  &quot;version&quot;: &quot;0.0.1&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~1.11.1&quot;,\r\n    &quot;modernizr&quot;: &quot;~2.8.3&quot;,\r\n    &quot;normalize-scss&quot;: &quot;~3.0.1&quot;\r\n  }\r\n}[/code]\r\n\r\nAnd would be installed with a simple\r\n\r\n[shell]bower install[/shell]\r\n\r\nThis will fetch the specificed version of jQuery, Modernizr, and Normalize-SCSS. Notice how there\'s both javascript and sass in there? Bower isn\'t language specific, so you can get javascript, css, sass, less, and much more. The files that bower retrieves are meant to be physically included into your project, so the bower_components directory is very clean and well structured.\r\n\r\nSo what makes bower any better than the other common package managers like NPM and RubyGems? Well, none of them are necessarily <em>better</em> than the other - they all handle specific types of packages. All three of these package managers allow you to list out your dependencies and versions, and will ensure that the full dependency tree is met. However, NPM and RubyGems are more geared towards server-side development and also allow the installation of global executable commands. Bower is much simpler in that it is only meant to find the front-end packages that you need, and dish them out for you.\r\n\r\nNow that we\'ve discussed how to gather our client-side packages in a clean, agile, and no-hassle manner, let\'s talk about how we can build them all together and include just one bundle into our main html. Enter browserify.\r\n<h2>Browserify</h2>\r\n<a title=\"Browserify\" href=\"http://browserify.org/\" target=\"_blank\">Browserify</a> is a tool which, just like bower, gives your client-side workflow a serious improvement; this tool, however, is javascript specific. Browserify seems to be steeped in a lot of mystery and confusion, and a lot of developers stray away from it without really understanding the benefits. Browserify is honestly really simple; it only does two things for you:\r\n<ul>\r\n	<li>It allows you to use node-style require() calls in your client-side javascript</li>\r\n	<li>It gives you a CLI to bundle those files together and compile them down into javascript that the browser can understand</li>\r\n</ul>\r\nThat\'s it! With browserify, you can write modular code the \'node way\' while at the same time writing purely front-end code. Here\'s how to install it:\r\n\r\n[shell]npm install -g browserify[/shell]\r\n\r\nAnd here\'s an example file that we\'ll eventually compile with browserify:\r\n\r\n[javascript title=\"main.js\"]\r\nvar $ = require(\'jquery\');\r\n\r\n// External Libs&lt;/pre&gt;\r\nrequire(\'./bower_components/lib1/lib1.js\');\r\nrequire(\'./bower_components/lib2/lib2.js\');\r\n\r\n$(document).ready(function(){\r\n  $(\'body\').append(\'&lt;p&gt;This Works&lt;/p&gt;\');\r\n});\r\n[/javascript]\r\n\r\nThis file includes jQuery (required in a way that assumes it\'s installed as a node package), as well as two external libs that I\'m using. By setting jQuery to a variable, I am able to use the standard <strong>$</strong> operator and have it only be accessible within the scope of this file. Because the other two files aren\'t set to variables, they are loaded just within the general scope of the file, as if they had already been included in that page\'s html.\r\n\r\nBy having these external files installed with bower, I can access their source files directly with the help of browserify. This is similar to using the @import function in sass, but because browserify accounts for modularity, these files will only be accessible in the scope that you require them.\r\n\r\nLast but not least, let\'s build this puppy:\r\n\r\n[shell]browserify main.js -o bundle.js[/shell]\r\n\r\nThis will run through our main.js file, gather all of the required files, and build it all into a file called bundle.js. This would be the file that you include in your html, and it will be written in browser-compatible javascript. That\'s how you do node - the browser way.\r\n\r\n<hr class=\"short\" />\r\n\r\nSo at this point, we\'ve established a good footing on bower and browserify, both of which are tools geared towards making your front-end workflow as efficient and clean as possible. We also discussed how you can install vendor packages with bower and then include them directly into your javascript using browserify, allowing you to write modular front-end code. Now this is a big improvement over manually finding and downloading vendor packages from the internet and muddying up your html by including multiple libraries (not to mention ignoring the concept of scope altogether), but we can still improve on this workflow. After all, we\'re having to manually run the browserify command every time we want to rebundle our files - and we don\'t enjoy manual labor like that.\r\n\r\nSo what can we do? Well, I mentioned I\'ve been getting into build automation lately, so I bet we can standardize this workflow and give instructions to a tool like grunt to do all the work for us. We covered our basics here, so next time we can get into maximizing our javascript building by incorporating a task runner (as well as a few other tricks I\'ll show you).\r\n\r\nStay tuned for the next post: Building Javascript with Grunt, Bower, Browserify.','Getting Familiar with Bower and Browserify','','inherit','open','open','','233-revision-v1','','','2014-08-15 03:00:44','2014-08-15 03:00:44','',233,'http://thesocietea.org/2014/08/233-revision-v1/',0,'revision','',0),(252,1,'2014-08-18 21:57:29','2014-08-18 21:57:29','','Oklahoma Department of Commerce','','publish','closed','closed','','oklahoma-department-of-commerce','','','2014-08-18 22:10:29','2014-08-18 22:10:29','',0,'http://thesocietea.org/?post_type=project&#038;p=252',0,'project','',0),(253,1,'2014-08-18 21:55:25','2014-08-18 21:55:25','','big-odoc-1','','inherit','open','open','','big-odoc-1','','','2014-08-18 21:55:25','2014-08-18 21:55:25','',252,'http://thesocietea.org/wp-content/uploads/2014/08/big-odoc-1.jpg',0,'attachment','image/jpeg',0),(254,1,'2014-08-18 21:55:26','2014-08-18 21:55:26','','big-odoc-2','','inherit','open','open','','big-odoc-2','','','2014-08-18 21:55:26','2014-08-18 21:55:26','',252,'http://thesocietea.org/wp-content/uploads/2014/08/big-odoc-2.jpg',0,'attachment','image/jpeg',0),(255,1,'2014-08-18 21:55:26','2014-08-18 21:55:26','','big-odoc-3','','inherit','open','open','','big-odoc-3','','','2014-08-18 21:55:26','2014-08-18 21:55:26','',252,'http://thesocietea.org/wp-content/uploads/2014/08/big-odoc-3.jpg',0,'attachment','image/jpeg',0),(256,1,'2014-08-18 21:55:27','2014-08-18 21:55:27','','big-odoc-4','','inherit','open','open','','big-odoc-4','','','2014-08-18 21:55:27','2014-08-18 21:55:27','',252,'http://thesocietea.org/wp-content/uploads/2014/08/big-odoc-4.jpg',0,'attachment','image/jpeg',0),(257,1,'2014-08-18 21:55:28','2014-08-18 21:55:28','','th-odoc-1','','inherit','open','open','','th-odoc-1','','','2014-08-18 21:55:28','2014-08-18 21:55:28','',252,'http://thesocietea.org/wp-content/uploads/2014/08/th-odoc-1.jpg',0,'attachment','image/jpeg',0),(258,1,'2014-08-18 21:55:28','2014-08-18 21:55:28','','th-odoc-2','','inherit','open','open','','th-odoc-2','','','2014-08-18 21:55:28','2014-08-18 21:55:28','',252,'http://thesocietea.org/wp-content/uploads/2014/08/th-odoc-2.jpg',0,'attachment','image/jpeg',0),(259,1,'2014-08-18 21:55:28','2014-08-18 21:55:28','','th-odoc-3','','inherit','open','open','','th-odoc-3','','','2014-08-18 21:55:28','2014-08-18 21:55:28','',252,'http://thesocietea.org/wp-content/uploads/2014/08/th-odoc-3.jpg',0,'attachment','image/jpeg',0),(260,1,'2014-08-18 21:55:29','2014-08-18 21:55:29','','th-odoc-4','','inherit','open','open','','th-odoc-4','','','2014-08-18 21:55:29','2014-08-18 21:55:29','',252,'http://thesocietea.org/wp-content/uploads/2014/08/th-odoc-4.jpg',0,'attachment','image/jpeg',0),(261,1,'2014-08-28 14:00:39','2014-08-28 14:00:39','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re ready to get our hands dirty with them both by using them with grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am choosing to stick with grunt as it currently still has a larger plugin community.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~5.10.1&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"bower.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\nNow that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is to create a bundle from a file like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ol>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ol>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to look for (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to using: $ and Modernizr. Lastly, we tell browserify to run browserify-shim prior to building out the files, which is what allows all of this to happen.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will this javascript work?\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nYup, 100% as long as we\'re using grunt to build our javascript.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using <strong>bower</strong> to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using <strong>browserify-shim</strong> to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using <strong>browserify</strong> to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through <strong>grunt</strong> to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do the work for us, another thing to consider is that now we can really true modular code. That\'s a best practice in every language, and having that at our disposal allows us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','publish','open','open','','building-javascript-with-grunt-bower-browserify','','\nhttp://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/','2014-09-04 01:16:58','2014-09-04 01:16:58','',0,'http://thesocietea.org/?p=261',0,'post','',0),(262,1,'2014-08-21 12:52:15','2014-08-21 12:52:15','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\n\r\nNow that we have the grunt CLI installed,','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 12:52:15','2014-08-21 12:52:15','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(263,1,'2014-08-21 12:58:12','2014-08-21 12:58:12','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n<pre>[json]\r\n\"devDependencies\": {\r\n  \"grunt-bower-task\": \"0.4.0\",\r\n  \"grunt-browserify\": \"2.1.4\",\r\n  \"grunt-pagespeed\": \"0.3.0\",\r\n  \"grunt-concurrent\": \"0.5.0\",\r\n  \"browserify\": \"~4.2.3\"\r\n}\r\n[\\json]</pre>','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 12:58:12','2014-08-21 12:58:12','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(264,1,'2014-08-21 12:58:32','2014-08-21 12:58:32','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n<pre>[javascript][/javascript]\r\n\"devDependencies\": {\r\n  \"grunt-bower-task\": \"0.4.0\",\r\n  \"grunt-browserify\": \"2.1.4\",\r\n  \"grunt-pagespeed\": \"0.3.0\",\r\n  \"grunt-concurrent\": \"0.5.0\",\r\n  \"browserify\": \"~4.2.3\"\r\n}\r\n[\\javascript]</pre>','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 12:58:32','2014-08-21 12:58:32','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(265,1,'2014-08-21 12:58:42','2014-08-21 12:58:42','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[javascript][/javascript]\r\n\r\n\"devDependencies\": { \"grunt-bower-task\": \"0.4.0\", \"grunt-browserify\": \"2.1.4\", \"grunt-pagespeed\": \"0.3.0\", \"grunt-concurrent\": \"0.5.0\", \"browserify\": \"~4.2.3\" } [\\javascript]','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 12:58:42','2014-08-21 12:58:42','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(266,1,'2014-08-21 13:00:09','2014-08-21 13:00:09','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code]\r\n&quot;devDependencies&quot;: {\r\n  &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n  &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n  &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n}\r\n[/code]\r\n\r\n','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:00:09','2014-08-21 13:00:09','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(267,1,'2014-08-21 13:00:28','2014-08-21 13:00:28','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n&quot;devDependencies&quot;: {\r\n  &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n  &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n  &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n}\r\n[/code]\r\n','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:00:28','2014-08-21 13:00:28','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(268,1,'2014-08-21 13:10:37','2014-08-21 13:10:37','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. <strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions.\r\n\r\nTo install:\r\n\r\n[shell]npm install[/shell]\r\n\r\nNow that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNothing exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:10:37','2014-08-21 13:10:37','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(269,1,'2014-08-21 13:16:25','2014-08-21 13:16:25','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions.Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNothing exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:16:25','2014-08-21 13:16:25','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(270,1,'2014-08-21 13:29:16','2014-08-21 13:29:16','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping as many vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files\r\n\r\n&nbsp;','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:29:16','2014-08-21 13:29:16','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(271,1,'2014-08-21 13:37:18','2014-08-21 13:37:18','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping as many vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\n&nbsp;','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:37:18','2014-08-21 13:37:18','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(272,1,'2014-08-21 13:37:41','2014-08-21 13:37:41','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping as many vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\n.\r\n.\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n.\r\n.\r\n[/javascript]\r\n\r\n&nbsp;','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:37:41','2014-08-21 13:37:41','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(273,1,'2014-08-21 13:38:00','2014-08-21 13:38:00','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping as many vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\n&nbsp;','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-21 13:38:00','2014-08-21 13:38:00','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(274,1,'2014-08-22 17:46:28','2014-08-22 17:46:28','Finally, 7 months later, I\'m following up with my first vim blog post about <a title=\"Vim as Your Editor?\" href=\"http://thesocietea.org/2014/06/vim-as-your-editor/\">why you should use vim</a>. If you\'ve made it here, then you\'re either seriously interested in learning vim (which would be <em>awesome</em>), or you just came here of your own random volition. Either works for me, but if you have heard of vim and are just a little bit hesitant to learn it, then fear no more. I\'m going to teach you the best methods to learn vim.\r\n\r\n<strong>Prerequisite</strong>: You must have vim installed if it isn\'t already. You can do this through the homebrew, apt-get, yum, or any other package manager your system supports. You do not need graphical vim (GVim or MacVim).\r\n<h3>Vim Tutor</h3>\r\n<img class=\"alignnone wp-image-226 size-full\" src=\"http://thesocietea.org/wp-content/uploads/2014/07/vim_tutor.jpg\" alt=\"vim_tutor\" width=\"500\" height=\"393\" />\r\n\r\nIf you open up your shell, type in the command\r\n\r\n[shell]vimtutor[/shell]\r\n\r\nThis will open up the Vim Tutor, which is a nice little interactive program that teaches you how to use Vim. This is my preferred way to learn Vim, and if you are on your first go around, it will probably take about 30 minutes to complete. You don\'t need any other resources - just your terminal (not even a mouse!).\r\n\r\nWhen I initially learned vim, I completed this short course about 4-5 times the full way through. Naturally after the first time, you get much quicker, and the lessons become more of a refresher. I suggest using the Vim Tutor initially to see if you really want to learn vim, and if so, then continue using it to get familiar with the basics.\r\n\r\n<strong>Note:</strong> Vim is not difficult to learn, but you will be slow for the first week or so. That\'s natural. Roger Federer didn\'t win Wimbledon his professional first year either.\r\n<h3>Vim Golf</h3>\r\n<a title=\"Vim Golf\" href=\"http://www.vimgolf.com/\" target=\"_blank\">Vim Golf</a> is a ruby gem which you can install and is a game-based method to learning vim. A common concept of vim is considering how many keystrokes you need to use in order to get something done; obviously, the less you use, the quicker you are, and therefore you want as few as possible. This the idea behind Vim Golf - you are trying to get a <em>low</em> keystroke score.\r\n\r\nFor installation and running, please check out their website. There you can see some of the challenges and other people\'s scores, and the whole Vim Golf project is also on github. I haven\'t personally used Vim Golf, but I know people who have, and they had great success with it.\r\n<h3>Just Start Using It</h3>\r\nThere are a plethora of other tutorials out there for vim because people know it\'s not the simplest thing in the world to grasp, but in my experience, once you start to understand the basics (which you will through the Vim Tutor) then I suggest just getting out there and trying to really use it as your editor.\r\n\r\nRemember, you will be slow, and you will forget things. And certain things will seem more difficult than they should be at first (like copying a section of code for pasting), but trust me, if anything seems unnecessarily hard in vim, then there\'s definitely an easier way to do it and I encourage you to Google it.\r\n\r\nOnce you get out there and really start using vim, give yourself 2 weeks to really see how you feel. If you\'re on a huge project on a short deadline, then use your preferred editor to get your work done quickly, but make sure you don\'t forget about using vim. It takes some practice to learn...but it is so incredibly rewarding.\r\n\r\n&nbsp;\r\n<h2>Extras</h2>\r\n<h3>Plugins</h3>\r\nThe vim community is very, very active and is completely focused on productivity. You can find vim channels on StackOverflow, as well as various twitter accounts created solely for publishing cool vim stuff.\r\n\r\nVim by itself is powerful, but relatively basic. You can add on so much to the base vim installation through plugins. For example, my editor has autocomplete (like Microsoft\'s Intellisense), shortcuts based on what file type I\'m in, custom color scheming, commenting shortcuts, git diff integration, auto coloring of hex values, and so much more.\r\n\r\nThese all can be found on Github, and I recommend using the powerful <a title=\"Vundle\" href=\"https://github.com/gmarik/Vundle.vim\" target=\"_blank\">Vundle</a> tool for downloading and installing plugins (very similar to a ruby Gemfile).\r\n<h3>Plugin/Colorscheme Distributions</h3>\r\nIf you don\'t want to worry about customizing your vim colorschemes and plugins, then guess what ... you don\'t have to! There are 2 massively popular vim distrubutions which come complete with multiple colorschemes and very useful plugins. The two are:\r\n<ul>\r\n	<li><a title=\"Janus\" href=\"https://github.com/carlhuda/janus\" target=\"_blank\">Janus</a></li>\r\n	<li><a title=\"Spf13\" href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\">Spf13</a></li>\r\n</ul>\r\nWhile I currently have my own set of vim customizations that sit on top of <a title=\"Thoughtbot Dotfiles\" href=\"https://github.com/thoughtbot/dotfiles\" target=\"_blank\">Thoughtbot\'s minimal vim config</a>, I previously used Janus for a little over a year. I really, really liked it, and it was the moment that I started feeling comfortable with vim that I started to check it out. Let me just say, my productivity skyrocketed.\r\n\r\nBoth distributions come with a base set of colorschemes and awesome plugins, and you can even add more plugins on top of that if you find some you\'d like to use. I highly recommend using a vim distribution as your first step at getting into vim customization.\r\n\r\nThat\'s it! I hope you start using vim, and if you do, <a title=\"Aaron Krauss Twitter\" href=\"https://twitter.com/thecodeboss\" target=\"_blank\">tweet at me</a> to let me know!','How to Learn Vim','','inherit','open','open','','220-revision-v1','','','2014-08-22 17:46:28','2014-08-22 17:46:28','',220,'http://thesocietea.org/2014/08/220-revision-v1/',0,'revision','',0),(276,1,'2014-08-24 00:12:48','2014-08-24 00:12:48','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\n&nbsp;\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is something like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ul>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require Common-JS style scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ul>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own Common-JS style scripts? No, absolutely not! We can fix this with an awesome browserify plugin called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\nBrowserify-shim','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-24 00:12:48','2014-08-24 00:12:48','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(277,1,'2014-08-24 00:34:39','2014-08-24 00:34:39','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re about to get dirty with them both by incorporating them both into grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is something like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ul>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ul>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, here browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to use (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to: $ and Modernizr. Lastly, we tell browserify to implement the browserify-shim transformation prior to building out the files.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will our javascript file above work? Yup, 100%.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using bower to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using browserify-shim to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using browserify to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through a task-runner to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do a lot of work for us, another thing to consider is that now we can really write modular code. That\'s a best practice in every language, and having that at our disposal will allow us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-24 00:34:39','2014-08-24 00:34:39','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(278,1,'2014-08-24 00:35:49','2014-08-24 00:35:49','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re ready to get our hands dirty with them both by using them with grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am currently choosing to stick with grunt as it still currently maintains a higher market share of adoption.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\n<strong>Note:</strong> As of the writing of this post, version 5.x.x of browserify exists. I am choosing to use browserify v4 because of compatibility issues with another plugin that we\'ll cover in the next blog post. Hopefully this compatibility issue gets resolved quickly, as everyone wants to use the latest versions. Now that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is something like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ul>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ul>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, here browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to use (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to: $ and Modernizr. Lastly, we tell browserify to implement the browserify-shim transformation prior to building out the files.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will our javascript file above work? Yup, 100%.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using bower to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using browserify-shim to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using browserify to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through a task-runner to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do a lot of work for us, another thing to consider is that now we can really write modular code. That\'s a best practice in every language, and having that at our disposal will allow us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-24 00:35:49','2014-08-24 00:35:49','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(279,1,'2014-08-24 00:50:36','2014-08-24 00:50:36','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re ready to get our hands dirty with them both by using them with grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am choosing to stick with grunt as it currently still has a larger plugin community.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~4.2.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"bower.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\nNow that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is to create a bundle from a file like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ol>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ol>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to look for (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to using: $ and Modernizr. Lastly, we tell browserify to run browserify-shim prior to building out the files, which is what allows all of this to happen.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will this javascript work?\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nYup, 100% as long as we\'re using grunt to build our javascript.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using <strong>bower</strong> to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using <strong>browserify-shim</strong> to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using <strong>browserify</strong> to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through <strong>grunt</strong> to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do the work for us, another thing to consider is that now we can really true modular code. That\'s a best practice in every language, and having that at our disposal allows us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-24 00:50:36','2014-08-24 00:50:36','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(281,1,'2014-08-25 12:19:06','2014-08-25 12:19:06','This post is continuation of a previous post covering bower and browserify; if you haven\'t read it yet, I highly recommend you start off by reading <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">Getting Familiar with Bower and Browserify</a> before starting here. Let\'s review our goals regarding javascript building that we landed upon at the end of the last post:\r\n\r\n<strong>Goal:</strong> We want to automate the gathering actions of bower and javascript-building actions of browserify in our workflow to make for a seriously powerful javascript pipeline that we don\'t have to continually maintain.\r\n\r\nWe\'ve covered a brief intro into bower and browserify, and now we\'re ready to get our hands dirty with them both by using them with grunt.\r\n<h2>Installing Grunt</h2>\r\nIf you\'re unfamiliar with what grunt.js is, or build automation in general, please check out the <a title=\"Grunt.js\" href=\"http://gruntjs.com/\" target=\"_blank\">grunt.js homepage</a> for an introduction. Despite the rising popularity of Gulp (another build automation tool), I am choosing to stick with grunt as it currently still has a larger plugin community.\r\n\r\nAssuming you already have bower and browserify installed (if you don\'t, see the <a title=\"Getting Familiar with Bower and Browserify\" href=\"http://thesocietea.org/2014/08/getting-familiar-with-bower-and-browserify/\" target=\"_blank\">last post</a>), then all we need to install is the grunt CLI:\r\n\r\n[shell]npm install -g grunt-cli[/shell]\r\n\r\nNow that we have the grunt CLI installed, we need to establish a package.json file for our project in order to install the rest of the grunt plugins we\'ll use.\r\n<h2>Installing Grunt Plugins</h2>\r\nCreate a new package.json at the root of your project folder, or update your existing one, to include the following devDependencies:\r\n\r\n[code title=\"package.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt-bower-task&quot;: &quot;0.4.0&quot;,\r\n    &quot;grunt-browserify&quot;: &quot;2.1.4&quot;,\r\n    &quot;browserify&quot;: &quot;~5.10.1&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nLet\'s also create a bare bones bower.json file with some base libraries:\r\n\r\n[code title=\"bower.json\"]\r\n{\r\n  &quot;name&quot;: &quot;project name&quot;,\r\n  &quot;dependencies&quot;: {\r\n    &quot;jquery&quot;: &quot;~2.1.1&quot;,,\r\n    modernizr&quot;: &quot;~2.8.3&quot;\r\n  }\r\n}\r\n[/code]\r\n\r\nTo install node modules:\r\n\r\n[shell]npm install[/shell]\r\n\r\nThis will install the bower and browserify grunt tasks, as well as verifying that you have the regular browserify module installed. Let\'s hold off on installing our bower components yet, we\'ll let grunt take care of that.\r\n\r\nNow that we have everything set up, we can finally start our Gruntfile. Let\'s start off with the basics:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n  })\r\n}\r\n[/javascript]\r\n\r\n<h2>Creating the Gruntfile</h2>\r\nWe don\'t have anything exciting yet - just a basic Gruntfile skeleton. Let\'s start off our workflow by automating our bower component installation:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    pkg: grunt.file.readJSON(\'package.json\')\r\n    bower : {\r\n      install : {\r\n        options : {\r\n          targetDir : \'vendor/bower_components\',\r\n          layout : \'byComponent\',\r\n          verbose: true,\r\n          cleanup: true\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n[/javascript]\r\n\r\nThese settings are customizable, but I\'m a fan of dumping all my vendor packages into a /vendor directory. The layout attribute states that the package will be within its own folder (as opposed to default js/css/etc. folders that bower likes to use), and the cleanup option ensurse that prior to the install command being run, the directory will be wiped out.\r\n\r\nNow we can install our bower components like so:\r\n\r\n[shell]grunt bower:install[/shell]\r\n\r\nWe will now have jQuery and Modernizr installed in /vendor/bower_components. Perfect - now let\'s get to using those files with the help of browserify. Let\'s add this to our Gruntfile:\r\n\r\n[javascript title=\"Gruntfile.js\"]\r\nbrowserify : {\r\n  app : {\r\n    files : { \'build/app.js\' : [\'src/js/app.js\'] }\r\n  }\r\n}\r\n[/javascript]\r\n\r\nThis will take a javascript source file (or many) and build it out into a browserify bundle that is browser friendly. So our end goal is to create a bundle from a file like this:\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nBut can we do this? Alas, no, not yet. We have three problems:\r\n<ol>\r\n	<li>While we have jQuery and modernizr installed through bower, browserify has no idea where they\'re located, so we can\'t just require them like we are - we would need to require exact script locations.</li>\r\n	<li>With modular programming, we would need to assign jQuery to the <strong>$</strong> variable, and modernizr to the <strong>Modernizr</strong> variable before we could use them in that way.</li>\r\n	<li>Browserify can only require <a title=\"CommonJS\" href=\"http://requirejs.org/docs/commonjs.html\" target=\"_blank\">CommonJS style</a> scripts ... so basically modules, and while the scripts we have for jQuery and modernizr <em>may be</em> built as modules, we can\'t be sure. Plus, we still want to be able to require other vendor scripts even if they\'re not modules.</li>\r\n</ol>\r\nSo have we come this far for me to tell you we can\'t do anything, and you can only use browserify for your own CommonJS style scripts? No, absolutely not! We can fix this with an awesome node module called browserify-shim.\r\n<h2>Adding Browserify-Shim</h2>\r\n<a title=\"Browserify-Shim\" href=\"https://github.com/thlorenz/browserify-shim\" target=\"_blank\">Browserify-shim</a> is a node module which allows you to include non-CommonJS style scripts into browserify\'s require command, and to also assign them to aliases that you can use in your scripts. You can check out the GitHub repo to see all the features, but we\'ll just go over installation and implementation here.\r\n\r\nInstall (as a devDependency here):\r\n\r\n[shell]npm install -D browserify-shim[/shell]\r\n\r\nAnd then add this to your package.json:\r\n\r\n[code title=\"package.json\"]\r\n&quot;browser&quot;: {\r\n  &quot;jquery&quot;: &quot;./vendor/bower_components/jquery/jquery.js&quot;,\r\n  &quot;modernizr&quot;: &quot;./vendor/bower_components/modernizr/modernizr.js&quot;\r\n},\r\n&quot;browserify-shim&quot;: {\r\n  &quot;jquery&quot;: &quot;$&quot;,\r\n  &quot;modernizr&quot;: &quot;Modernizr&quot;\r\n},\r\n&quot;browserify&quot;: {\r\n  &quot;transform&quot;: [ &quot;browserify-shim&quot; ]\r\n}\r\n[/code]\r\n\r\nIn a nutshell, browserify-shim is exposing our jQuery and modernizr packages as a different name for browserify to look for (jquery and modernizr, respectively), and then we are aliasing the modules to the variables we\'re used to using: $ and Modernizr. Lastly, we tell browserify to run browserify-shim prior to building out the files, which is what allows all of this to happen.\r\n\r\nBrowserify-shim can do even more than this, but that\'s all we need it for. Now will this javascript work?\r\n\r\n[javascript title=\"src/js/app.js\"]\r\nrequire(\'jquery\');\r\nrequire(\'modernizr\');\r\n\r\n$(document).ready(function){\r\n  // do stuff!\r\n});\r\n[/javascript]\r\n\r\nYup, 100% as long as we\'re using grunt to build our javascript.\r\n<h2>Summary</h2>\r\nI know we\'ve covered a lot here, but if you can implement this workflow into your javascript pipeline, you\'ll seriously boost your productivity. To review everything we\'re doing here:\r\n<ul>\r\n	<li>Using <strong>bower</strong> to simplify how we get our vendor scripts, as well as managing versions easily.</li>\r\n	<li>Using <strong>browserify-shim</strong> to turn all non-CommonJS scripts into browserify-compatible modules.</li>\r\n	<li>Using <strong>browserify</strong> to write modular javascript code, and build everything we want into a small amount of organized bundles.</li>\r\n	<li>Running everything through <strong>grunt</strong> to handle all the tedious work for us, so we can concentrate on the fun stuff.</li>\r\n</ul>\r\nWhile the big benefit here is that we have really improved our workflow to allow powerful services to do the work for us, another thing to consider is that now we can really true modular code. That\'s a best practice in every language, and having that at our disposal allows us to write clean, beautiful javascript that is very readable and very debuggable.\r\n\r\nYou made it to the end, and now at least have some familiarity with using bower and browserify in your project. Give it a try and see how you feel about your new javascript build process. I promise you won\'t be disappointed!','Building Javascript with Grunt, Bower, Browserify','','inherit','open','open','','261-revision-v1','','','2014-08-25 12:19:06','2014-08-25 12:19:06','',261,'http://thesocietea.org/2014/08/261-revision-v1/',0,'revision','',0),(282,1,'2014-09-18 14:00:37','2014-09-18 14:00:37','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/labs/tree/master/geojson-demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','publish','open','open','','using-geojson-files-with-google-maps-api','','\nhttp://thesocietea.org/2014/06/where-i-buy-tea/','2014-09-09 23:58:01','2014-09-09 23:58:01','',0,'http://thesocietea.org/?p=282',0,'post','',0),(283,1,'2014-08-27 18:09:28','2014-08-27 18:09:28','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n\r\n[html]\r\n\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n// Set basic map attributes\r\nvar map, polys = [];\r\nvar mapOptions = {\r\nzoom: 5,\r\ncenter: new google.maps.LatLng(39.16,-100.72)\r\n\r\n};\r\n\r\nmap = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n\r\n[/html]\r\n\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n\r\n&nbsp;','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:09:28','2014-08-27 18:09:28','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(284,1,'2014-08-27 18:10:18','2014-08-27 18:10:18','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n\r\n&nbsp;','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:10:18','2014-08-27 18:10:18','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(285,1,'2014-08-27 18:20:26','2014-08-27 18:20:26','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are .geo.json files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n\r\n[json title=\"arkansas.geo.json\r\n{\r\n\"type\":\"FeatureCollection\",\r\n\"features\":[\r\n{\r\n\"type\":\"Feature\",\r\n\"id\":\"USA-AR\",\r\n\"properties\":{\"fips\":\"05\",\"name\":\"Arkansas\"},\r\n\"geometry\":{\r\n\"type\":\"Polygon\",\r\n\"coordinates\":[[[-94.473842,36.501861],[-90.152536,36.496384],[-90.064905,36.304691],...\r\n}\r\n[/json]','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:20:26','2014-08-27 18:20:26','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(286,1,'2014-08-27 18:22:41','2014-08-27 18:22:41','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are .geo.json files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n<pre>[json title=\"arkansas.geo.json]\r\n{\r\n  \"type\":\"FeatureCollection\",\r\n  \"features\":[\r\n    {\r\n      \"type\":\"Feature\",\r\n      \"id\":\"USA-AR\",\r\n      \"properties\":{\"fips\":\"05\",\"name\":\"Arkansas\"},\r\n      \"geometry\":{\r\n        \"type\":\"Polygon\",\r\n        \"coordinates\":[[[-94.473842,36.501861],[-90.152536,36.496384],[-90.064905,36.304691],...\r\n      }\r\n    } \r\n  ] \r\n}\r\n[/json]</pre>','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:22:41','2014-08-27 18:22:41','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(287,1,'2014-08-27 18:23:14','2014-08-27 18:23:14','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are .geo.json files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n<pre>[code language=\"title=&quot;arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],...\r\n      }\r\n    } \r\n  ] \r\n}\r\n[/code]</pre>','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:23:14','2014-08-27 18:23:14','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(288,1,'2014-08-27 18:24:34','2014-08-27 18:24:34','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are .geo.json files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],...\r\n      }\r\n    } \r\n  ] \r\n}\r\n[/code]\r\n','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:24:34','2014-08-27 18:24:34','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(289,1,'2014-08-27 18:25:51','2014-08-27 18:25:51','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n','Using .geo.json files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-27 18:25:51','2014-08-27 18:25:51','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(290,1,'2014-08-28 12:36:57','2014-08-28 12:36:57','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style the maps you may want to use as you build them out - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var map, polys = [];\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nHowever, while the Google Maps API is certainly awesome, there are some limitations to it - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China the tea you purchase is from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that would show the coordinates for Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 12:36:57','2014-08-28 12:36:57','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(291,1,'2014-08-28 13:05:30','2014-08-28 13:05:30','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the outline of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" Well, you\'re in luck. While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you see fit. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or honestly whatever we want! Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any styles. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\nThese files are what I used to build a small demo app:\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:05:30','2014-08-28 13:05:30','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(292,1,'2014-08-28 13:06:33','2014-08-28 13:06:33','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we have a rendering Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the outline of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" Well, you\'re in luck. While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you see fit. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or honestly whatever we want! Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any styles. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\nThese files are what I used to build a small demo app:\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:06:33','2014-08-28 13:06:33','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(293,1,'2014-08-28 13:10:05','2014-08-28 13:10:05','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, there are countless ways you can use it in your projects. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we have a rendering Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the outline of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\nThese files are what I used to build a small demo app:\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:10:05','2014-08-28 13:10:05','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(294,1,'2014-08-28 13:15:12','2014-08-28 13:15:12','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files with the extension <strong>.geo.json</strong>.\r\n<h2> What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the outline of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\nThese files are what I used to build a small demo app:\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API if you want to see what we discussed here in action.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:15:12','2014-08-28 13:15:12','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(295,1,'2014-08-28 13:20:19','2014-08-28 13:20:19','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"mini\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:20:19','2014-08-28 13:20:19','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(296,1,'2014-08-28 13:20:37','2014-08-28 13:20:37','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/google_maps_api_demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-08-28 13:20:37','2014-08-28 13:20:37','',282,'http://thesocietea.org/2014/08/282-revision-v1/',0,'revision','',0),(297,1,'2014-08-29 00:02:31','2014-08-29 00:02:31','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that you don\'t use the mouse to interact (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-revision-v1','','','2014-08-29 00:02:31','2014-08-29 00:02:31','',154,'http://thesocietea.org/2014/08/154-revision-v1/',0,'revision','',0),(298,1,'2014-08-29 13:30:34','2014-08-29 13:30:34','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\n\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that vim has different modes such as insert, visual, and normal mode. Due to these different modes, this largely comes off as meaning you don\'t have use the mouse to interact (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\n<ul>\n	<li>Vim makes you lightning fast</li>\n</ul>\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\n<ul>\n	<li>Vim is super customizable</li>\n</ul>\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\n<ul>\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\n</ul>\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\n<ul>\n	<li>Vim is absolutely free</li>\n</ul>\nNo Gimmicks. Nuff\' said here.\n<ul>\n	<li>Vim is used in the terminal itself</li>\n</ul>\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\n\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-autosave-v1','','','2014-08-29 13:30:34','2014-08-29 13:30:34','',154,'http://thesocietea.org/2014/08/154-autosave-v1/',0,'revision','',0),(299,1,'2014-08-29 13:31:15','2014-08-29 13:31:15','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that vim has different modes such as insert, visual, and normal mode. Due to these different modes, vim allows you to never have use the mouse to interact - it\'s all keyboard (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-revision-v1','','','2014-08-29 13:31:15','2014-08-29 13:31:15','',154,'http://thesocietea.org/2014/08/154-revision-v1/',0,'revision','',0),(300,1,'2014-08-29 13:33:20','2014-08-29 13:33:20','I\'ve been using Vim as my editor for the past couple years, and just like most people who use it, I\'ve grown to live and die by it. Vim is a wonderful text editor specifically geared towards coding (even though I\'m known to use it for building shopping lists, and other gangster....lists), and you should really check it out if you work with the Linux terminal a lot.\r\n\r\nLet\'s review what <a href=\"http://vim.org\">Vim</a> is. Vim is a modal text editor that is incredibly customizable - you can pick your own color schemes, look and feel, key mappings, plugins, and even build your own plugins as well. Modal means that vim has different modes such as insert, visual, and normal mode. Due to these different modes, vim allows you to never have to use the mouse to interact - it\'s all keyboard (this might blow your mind if you\'ve never heard of this concept before). People use Vim for a variety of reasons, and usually don\'t ever look back once they\'ve started using it. Let\'s review why you should start using Vim, if you don\'t already:\r\n<ul>\r\n	<li>Vim makes you lightning fast</li>\r\n</ul>\r\nIt\'s true, the top reason people love vim is because once you\'ve gotten decently good at it, you become so quick at editing code. Vim is also a skill that you can keep getting better at, so that means you can keep getting faster and faster. Being able to completely, and I mean completely, code all day without ever having to lift a single finger off of your keyboard....that\'s power, my friend. Raw power\r\n<ul>\r\n	<li>Vim is super customizable</li>\r\n</ul>\r\nYes, I\'m sure your editor allows you to choose color themes. If you\'re using one of the proprietary text editors like TextMate and Sublime Text, I\'m sure you are granted a lot of customizable options as well, but vim...it\'s just different. Sure you can customize your colors and key shortcuts, but that\'s just baby steps. Vim has such a following of developers that build cool plugins...it\'s just amazing. You can find such powerful plugins (and powerful pre-built combinations of plugins like <a href=\"https://github.com/carlhuda/janus\">Janus</a> or <a href=\"https://github.com/spf13/spf13-vim\">spf13</a>) that allow you to do exactly what you need, with nothing but a few keystrokes. Heck, you can even develop your own plugins if you\'re badass enough.\r\n<ul>\r\n	<li>Vim is cross-platform completely (Even for you Windows guys)</li>\r\n</ul>\r\nYou can use Vim on any platform - Windows. Mac OS, and all the Linux distributions. TextMate is a popular editor (costs about $50), but it only works on Mac. Sublime Text is also a big editor that is indeed cross-platform too, but still costs a good $70ish bucks for a full license to use it. This leads me to my next point...\r\n<ul>\r\n	<li>Vim is absolutely free</li>\r\n</ul>\r\nNo Gimmicks. Nuff\' said here.\r\n<ul>\r\n	<li>Vim is used in the terminal itself</li>\r\n</ul>\r\nThis might not be as a big of a deal to some developers, but if you program on a VPS that uses linux (sorry TextMate), then it\'s often much easier to do everything you need to by just ssh-ing into your server and coding straight from the terminal. This is where vim is in its native environment, and thrives like a pure machine. Sure, vim has a graphical version as well (MacVim for Mac OS, GVim for everything else), but it\'s basically the same as Vim with a larger default color sets. If you do own a VPS and don\'t use vim, then I really recommend you look into it.\r\n\r\nThere are many more reasons why you could and would want to use vim, but if I haven\'t convinced you already, then nothing\'s gonna do it. Do some googling on vim though and see if you want to check it out. If you do, then stay tuned; the next blog post will be on the <a title=\"How to Learn Vim\" href=\"http://thesocietea.org/2014/07/how-to-learn-vim/\">best ways to learn Vim</a> (and trust me, there\'s a bunch of them).','Vim as Your Editor?','','inherit','open','open','','154-revision-v1','','','2014-08-29 13:33:20','2014-08-29 13:33:20','',154,'http://thesocietea.org/2014/08/154-revision-v1/',0,'revision','',0),(301,1,'2014-09-17 19:37:56','0000-00-00 00:00:00','As we continue to use more advanced programming languages, we\'re able to get some seriously powerful development done with significantly less code that does increasingly more awesome stuff, but that comes at a price. Since we don\'t deal as often with low-level computation and processing anymore, it\'s only normal that we don\'t have understanding about topics like what the stack is versus the heap, or how compilation really works, or what static vs dynamic typing is, or type introspection, or garbage collection, etc. Now I\'m not saying every developer is ignorant of these, as most of us certainly aren\'t, but I do feel like it\'s worth revisiting some of the <em>old-school</em> important topics that we may miss out on these days.\r\n\r\nI know I\'ve opened up a wormhole of topics just now, but right now I\'m only focusing on one: <strong>the</strong> <strong>stack vs. the heap</strong>. Both the stack and the heap refer to different locations where memory (typically variables) is managed, with significantly different strategies\r\n<h2>The Stack</h2>\r\nThe stack is a special region of memory that exists on every thread that your application is running on. It works in a LIFO (Last In, First Out) fashion, meaning that as soon as you allocate - or \"push\" - memory on to the stack, that chunk of memory will be the first to be deallocated - or \"popped.\"Every time a function declares a new variable, it is \"pushed\" onto the stack, and after that variable falls out of scope (such as when the function closes), that variable will be deallocated from the stack. Once a stack variable is freed, that region of memory becomes available for other stack variables.\r\n\r\nDue to the pushing and popping nature of the stack, memory management is very logical and is able to be handled completely by the CPU; this makes it very quick, especially since each byte in the stack tends to be reused very frequently which means it tends to be mapped to the processor\'s cache. However, there are some cons to this form of strict management. The size of the stack is a fixed value, and is decided when the thread is created, and each variable has a maximum size that it can occupy based on its data type; this prevents certain variables such as integers from ever growing beyond a certain value, and forces more complex data types such as arrays to know how large they will be prior to runtime because they can\'t ever be resized. Variables allocated on the stack also are always local in nature, since variables placed on the stack are always next in line to be popped (unless more variables are pushed prior to the popping of earlier variables).\r\n\r\nOverall, the stack exceeds in managing memory with all static and predefined in terms of size, and not global in nature. But what if you need data structures with a more dynamic nature, or global variables? This is where the heap comes into play.\r\n<h2>The Heap</h2>','Stack vs Heap: What Are They?','','draft','open','open','','','','','2014-09-17 19:37:56','2014-09-17 19:37:56','',0,'http://thesocietea.org/?p=301',0,'post','',0),(302,1,'2014-08-31 06:04:37','2014-08-31 06:04:37','Being a developer, we often throw around a lot of words that sounds like nonsense to other people. When I say something like \"So I\'ll just make a POST request from the client-side to a server-side API, and that will return the JSON necessary for me to create a client-side object,\" I may be talking in a language that a lot of developers understand, but let\'s not pretend like we\'re magic - there\'s still a lot of terminology that we don\'t know.\r\n\r\nI\'d like to take a step back from the stuff we\'re used to, and really dig into some key terms and concepts that we probably hear a lot, but may be unfamiliar about everything that it entails; I specifically want to hone in on topics that are at the core of modern-day programming that we don\'t necessarily have to deal with or know (but it always make us better developers to know more)\r\n\r\nAs we continue to use more advanced programming languages, we\'re able to get some seriously powerful development done with significantly less code that does increasingly more awesome stuff, but that comes at a price. Since we don\'t deal as often with low-level computation and processing anymore, it\'s only normal that we don\'t have understanding about topics like what the stack is versus the heap, or how compilation really works, or what static vs dynamic typing is, or type introspection, or garbage collection, etc. Now I\'m not saying every developer is ignorant of these, as most of us certainly aren\'t, but I do feel like it\'s worth revisiting some of the \'old-school\' topics that we may miss out on these days, but are very important.\r\n\r\nThis will probably turn into a series, as today I\'m only focusing on one topic: <strong>the</strong> <strong>stack vs. the heap</strong>.\r\n\r\n&nbsp;','Stack vs Heap: What Are They?','','inherit','open','open','','301-revision-v1','','','2014-08-31 06:04:37','2014-08-31 06:04:37','',301,'http://thesocietea.org/2014/08/301-revision-v1/',0,'revision','',0),(303,1,'2014-08-31 16:13:56','2014-08-31 16:13:56','Being a developer, we often throw around a lot of words that sound like nonsense to other people. When I say something like \"So I\'ll just make a POST request from the client-side to a server-side API, and that will return the JSON necessary for me to create a client-side object,\" I may be talking in a language that a lot of developers understand, but let\'s not pretend we\'re magic - there\'s still a lot of terminology that we don\'t know.\r\n\r\nI\'d like to take a step back from the stuff we\'re used to, and really dig into some key terms and concepts that we probably hear a lot, but may be a little unfamiliar with; I specifically want to hone in on topics that are at the core of modern-day programming that we don\'t necessarily have to deal with or know (but it always make us better developers to know more).\r\n\r\nAs we continue to use more advanced programming languages, we\'re able to get some seriously powerful development done with significantly less code that does increasingly more awesome stuff, but that comes at a price. Since we don\'t deal as often with low-level computation and processing anymore, it\'s only normal that we don\'t have understanding about topics like what the stack is versus the heap, or how compilation really works, or what static vs dynamic typing is, or type introspection, or garbage collection, etc. Now I\'m not saying every developer is ignorant of these, as most of us certainly aren\'t, but I do feel like it\'s worth revisiting some of the <em>old-school</em> important topics that we may miss out on these days.\r\n\r\nThis may easily turn into a series, as right now I\'m only focusing on one topic: <strong>the</strong> <strong>stack vs. the heap</strong>.\r\n\r\n&nbsp;','Stack vs Heap: What Are They?','','inherit','open','open','','301-revision-v1','','','2014-08-31 16:13:56','2014-08-31 16:13:56','',301,'http://thesocietea.org/2014/08/301-revision-v1/',0,'revision','',0),(305,1,'2014-09-04 14:00:19','2014-09-04 14:00:19','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -0 -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <b>-0</b> option forces xargs to be line-oriented, and therefore it will accept arguments based on a full new line (this is <strong>very</strong> important; you probably don\'t want xargs breaking up args based on spaces in the same line). The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -0 -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -0 -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','publish','open','open','','power-tools-using-grep-xargs-and-sed','','','2014-09-04 19:50:49','2014-09-04 19:50:49','',0,'http://thesocietea.org/?p=305',0,'post','',3),(306,1,'2014-09-02 16:58:11','2014-09-02 16:58:11','I was recently inspired to write this post after I came across a situation where I needed to do a change to multiple files where all I was doing was changing all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a good deal of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\n&nbsp;\r\n<h2>Xargs</h2>\r\n<h2>Sed</h2>\r\n<h2>Combining Them</h2>','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-02 16:58:11','2014-09-02 16:58:11','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(307,1,'2014-09-02 17:13:00','2014-09-02 17:13:00','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the -G flag:\r\n\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\n<h2>Sed</h2>\r\n<h2>Combining Them</h2>','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-02 17:13:00','2014-09-02 17:13:00','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(308,1,'2014-09-02 17:40:13','2014-09-02 17:40:13','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\n<h2>Combining Them</h2>','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-02 17:40:13','2014-09-02 17:40:13','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(309,1,'2014-09-03 19:25:14','2014-09-03 19:25:14','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>.\r\n<h2>Combining Them</h2>\r\nBy combining these three base commands that are common across all *nix systems, we can do','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-03 19:25:14','2014-09-03 19:25:14','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(310,1,'2014-09-04 00:44:41','2014-09-04 00:44:41','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to do a filter of some sort to find the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level tex editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three base commands that are common across all *nix systems, we can do','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:44:41','2014-09-04 00:44:41','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(311,1,'2014-09-04 00:54:05','2014-09-04 00:54:05','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:54:05','2014-09-04 00:54:05','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(312,1,'2014-09-04 00:56:08','2014-09-04 00:56:08','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the\r\n\r\nbase shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:56:08','2014-09-04 00:56:08','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(313,1,'2014-09-04 00:56:17','2014-09-04 00:56:17','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <strong>grep</strong>, <strong>xargs</strong>, and <strong>sed</strong>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:56:17','2014-09-04 00:56:17','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(314,1,'2014-09-04 00:58:15','2014-09-04 00:58:15','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou\'ve probably heard of these before, and easily could already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase, and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surring the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 00:58:15','2014-09-04 00:58:15','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(315,1,'2014-09-04 01:00:37','2014-09-04 01:00:37','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -G \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 01:00:37','2014-09-04 01:00:37','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(316,1,'2014-09-04 01:01:52','2014-09-04 01:01:52','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the -l tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and just print out the filenames. Grep can do much, much more than this, but using it in this way is probably how most developers will use it. Other tools such as Ack and Ag exist that are arguably better than grep, but I wanted to stick with grep since it\'s a common tool that exists on all *nix devices.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - it runs the same command multiple times, but passes in different arguments based on what you gave it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nHere\'s a base example\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the ls command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow, xargs will no longer defaultly pass in the argument at the end of the line, and we instead now have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, short for stream editor, is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, and it will write the output to the standard output, and won\'t update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored; you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 01:01:52','2014-09-04 01:01:52','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(317,1,'2014-09-04 01:13:30','2014-09-04 01:13:30','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands can\'t be ignored seeing as how you\'ll most likely use them much more often than you would sed. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 01:13:30','2014-09-04 01:13:30','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(318,1,'2014-09-04 01:16:47','2014-09-04 01:16:47','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 01:16:47','2014-09-04 01:16:47','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(319,1,'2014-09-04 19:48:33','2014-09-04 19:48:33','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\n\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\n\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\n\n<hr class=\"short\" />\n\n<h2>Grep</h2>\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\n\n[shell]cat index.html | grep footer[/shell]\n\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\n\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\n\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\n\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\n\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\n<h2>Xargs</h2>\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\n\nSound too wordy? An example is worth a thousand words:\n\n[shell]ls | xargs -0 -n 1 echo[/shell]\n\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <b>-0</b> option forces xargs to only accepThe <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\n\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\n\n[shell]ls | xargs -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\n\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\n\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\n<h2>Sed</h2>\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\n\n[shell]sed \'s/start/end/g\' ./*[/shell]\n\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\n\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\n\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\n<h2>Combining Them</h2>\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\n\n[shell]grep vim ./* -l | xargs -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\n\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\n\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-autosave-v1','','','2014-09-04 19:48:33','2014-09-04 19:48:33','',305,'http://thesocietea.org/2014/09/305-autosave-v1/',0,'revision','',0),(320,1,'2014-09-04 19:49:50','2014-09-04 19:49:50','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -0 -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <b>-0</b> option forces xargs to be line-oriented, and therefore accept arguments based on a full line (this is very important; you probably don\'t want xargs breaking up args based on spaces). The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -0 -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -0 -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 19:49:50','2014-09-04 19:49:50','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(321,1,'2014-09-04 19:50:49','2014-09-04 19:50:49','I was recently inspired to write this post after I came across a situation where I needed to edit multiple files and change all instances of one word to another (in this case I was changing the word <strong>vim</strong> just to <strong>v</strong>). While this sounds like a simple task, let\'s break this up for a second to see what\'s all entailed: We\'re having to filter the files that contain this word, then we need to spin through each of these files and open them up individually, modify them, and rewrite the file inline to the same filename. It may still sound simple, but we do have a lot of moving parts going on here.\r\n\r\nMany high-level text editors and IDE\'s have the ability to do this for you, which is certainly nice, but what happens if you\'re in an environment where you don\'t have access to those tools? You may say that you\'ll never work away from your personal machine, but it\'s very possible you could log into a VPS or ssh into another user\'s machine where all you have access to are terminal tools. Additionally, the need to do this is not necessarily developer-specific, so if you\'re a systems administrator for example, you easily might not have higher-level editors installed - but you probably have some shell skills. That\'s where three tools come in that are included in the base shell languages we use today: <a title=\"Grep\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?grep\" target=\"_blank\">grep</a>, <a title=\"Xargs\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?xargs\" target=\"_blank\">xargs</a>, and <a title=\"Sed\" href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?sed\" target=\"_blank\">sed</a>.\r\n\r\nYou easily could ahve heard of these before and already know how to use them, and if so, then carry on friend! You\'ve probably nothing more to gain here. But if you\'d like to know just a little bit about how to use them, read on.\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Grep</h2>\r\nGrep is base unix search command which will spin through one or many files in order to tell you which files contain your phrase and a little info about where they are located. Here\'s an example of a standard way to use grep:\r\n\r\n[shell]cat index.html | grep footer[/shell]\r\n\r\nThis would print out each line in index.html that contained the word footer. You can also search for phrases that include spaces by surrounding the phrase with quotation marks (they won\'t count as part of the search query). Or you can use grep as a sole command, and not pipe anything to it:\r\n\r\n[shell]grep &quot;this is a phrase&quot; ./*.txt[/shell]\r\n\r\nThis would print out each line in every text file in the current directory that contained the phrase \"this is a phrase.\" Additionally, if we\'re searching through multiple files, we can pass in the <strong>-l</strong> tag to get just the filenames. Grep also has support for regular expressions which can be used with the <strong>-G</strong> option:\r\n\r\n[shell]grep -Gl \'ngrok \\d000$\' ./*[/shell]\r\n\r\nThis would find all instances of a line that ends in \'ngrok *000\' where the * represents any digit, and only the filenames will be printed out. Grep can do much, much more than this, but using as shown here is probably the most common. Other search tools such as <a title=\"Ack\" href=\"http://beyondgrep.com/\" target=\"_blank\">Ack</a> and <a title=\"Ag\" href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\">Ag</a> exist that are geared towards filtering source code, but I wanted to stick with grep since it\'s a common tool that exists on all *nix systems.\r\n<h2>Xargs</h2>\r\nXargs is an awesome command which basically has one job - you give it a command, and it runs that same command multiple times for a certain number of arguments that you give it. If you\'re a programmer, think of it as a loop that executes through a list. Per the man page of xargs, it takes delimited strings from the standard input and executes a utility with the strings as arguments; the utility is repeatedly executed until standard input is exhausted.\r\n\r\nSound too wordy? An example is worth a thousand words:\r\n\r\n[shell]ls | xargs -0 -n 1 echo[/shell]\r\n\r\nThis will run run the echo command as many times as you have files in the current directory, and it will pass in the filename (piped in by the <strong>ls</strong> command) to the echo command, so that it will echo each individual file name. The <b>-0</b> option forces xargs to be line-oriented, and therefore it will accept arguments based on a full new line (this is <strong>very</strong> important; you probably don\'t want xargs breaking up args based on spaces in the same line). The <strong>-n 1</strong> option is used to tell xargs that you want to split the arguments to call only one argument per command iteration. If you specified 2, then you would echo 2 filenames on the same line, and if you leave out the option altogether, then you will just echo once, listing every filename on the same line.\r\n\r\nBy default, xargs adds in the arguments at the end of the command call, but what if we need to use that argument at the beginning or the middle of the line? Well, that\'s completely doable with the <strong>-I</strong> option.\r\n\r\n[shell]ls | xargs -0 -n 1 -I my_var echo &quot;my_var is a file&quot;[/shell]\r\n\r\nNow xargs will no longer defaultly pass in the argument at the end of the line, and we instead have a placeholder for our arguments that we can use wherever we please for our command.\r\n\r\nPretty simple. Xargs does have some more options, but this is the crux of what you use it for: splitting up incoming arguments to be used as a part of another command.\r\n<h2>Sed</h2>\r\nSed, just like xargs, has one job that it does very well. Short for stream editor, sed is a handy little command which will read one or more files (or standard input, if no file is given), apply changes to those files based on a series of commands, and then write the output either in place of the file or to the standard output. How this applies to the user is that you can very easily and quickly replace text in multiple files with this one command. Here\'s a simple example:\r\n\r\n[shell]sed \'s/start/end/g\' ./*[/shell]\r\n\r\nThis will spin through every file in the current directory and replace every instance of the word <strong>start</strong> with <strong>end</strong>, but it will write the output to the standard output and not update the actual files. If we wanted to open up the files, make the changes, and then save them in place (probably how you want to use sed), then we just need to throw in one little option:\r\n\r\n[shell]sed -i \'\' \'s/start/end/g\' ./*[/shell]\r\n\r\nThe <strong>-i</strong> option states that we want to write the files in place and save the backups to the same filename appended by a certain extension. By passing in empty quotes, we skip saving the backups and are only left with the changes to our files. This tool is very powerful; it probably doesn\'t seem like you\'re doing much - but when you can change every instance a phrase to another phrase in 100+ files at a time, with a command under 20 characters, it\'s crazy to think about. Now with great power comes great responsibility. Due to its simplicity, it\'s easy to get carried away with things or not double check yourself. There\'s no undo here, so if you do use sed, make sure you do a dry run without the <strong>-i</strong> option first, and it would be even better if you make these changes in a versioned environment (using something like git) so you can revert changes if you need to.\r\n<h2>Combining Them</h2>\r\nBy combining these three small commands that are common across all *nix systems, we can do some pretty powerful text replacement. Most of the action comes from using sed, but the other commands help gather and prepare everything. So let\'s put together what we\'ve learned into a single command that we can actually use:\r\n\r\n[shell]grep vim ./* -l | xargs -0 -n 1 sed -i \'\' \'s/vim/v/g\'[/shell]\r\n\r\nLook familiar at all? This was the command I mentioned at the beginning of the post that I ran to change all instances of <em>vim</em> to just be <i>v</i> instead. It\'s true, for this particular situation, I could have gotten away with using only sed, but that\'s only because I was searching for the exact term that I was wanting to change. If I wanted to search for all the files that had the phrase <em>Hallabaloo</em>, but still wanted to change the word <em>vim</em> to <em>v</em>, then I would need to write a full command like this.\r\n\r\nSo will you always need to run a command like this? No, but you probably will at some point, and even if you have an easier way to do it than remembering this multipart command, I hope you\'ve at least learned a little bit more about how you can use grep, xargs, and sed in your workflow.','Power Tools: Using Grep, Xargs, and Sed','','inherit','open','open','','305-revision-v1','','','2014-09-04 19:50:49','2014-09-04 19:50:49','',305,'http://thesocietea.org/2014/09/305-revision-v1/',0,'revision','',0),(322,1,'2014-09-05 12:33:20','2014-09-05 12:33:20','Some of you may be familiar with using the client-side <a title=\"Google Maps API\" href=\"https://developers.google.com/maps/\" target=\"_blank\">Google Maps API</a> in your site\'s javascript. It\'s easily the top-of-the-line API for rendering geographical images and data, and so easy to use. Google even provides you with a developer-friendly tool to style your maps - no prior CSS knowledge necessary. As web pages become more interactive, including these types of maps into your sites will become more and more ubiquitous (even for plain static sites).\r\n\r\nTo show you how simple it is, let\'s just create a basic html page:\r\n\r\n[html title=\"map.html\"]\r\n&lt;div id=&quot;map_canvas&quot; style=&quot;display: block; height: 100%;&quot;&gt;&lt;/div&gt;\r\n&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?sensor=false&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n  // Set basic map attributes\r\n  var mapOptions = {\r\n    zoom: 5,\r\n    center: new google.maps.LatLng(39.16,-100.72)\r\n  };\r\n\r\n  var map = new google.maps.Map(document.getElementById(\'map_canvas\'), mapOptions);\r\n&lt;/script&gt;\r\n[/html]\r\n\r\nAnd wallah, we\'ve built and are rendering a Google Map.\r\n\r\nYou can even add markers on to the map, which would allow you to indicate specific data points at certain geographic locations. These markers can be any shape too, and if you\'re an artist, then you can specify SVG-like paths to get a really fancy marker. We won\'t go into markers though, as that\'s all well documented by Google.\r\n\r\nWhile the Google Maps API is certainly awesome though, it has its limitations - specifically with coloring or highlighting plots of land that you would like to \'stand out\' from the rest. Maybe you want to show which US states are more Republican vs Democratic, or maybe you want to show which countries in Europe you\'ve visited, or perhaps you even want to show which provinces in China you purchase tea from (yes, <a title=\"Where I Buy Tea\" href=\"http://thesocietea.org/2014/06/where-i-buy-tea/\" target=\"_blank\">I am guilty here</a>). By just using the naked Google Maps API libraries, this is impossible. But we don\'t like to accept the word \'impossible,\' and lo and behold, there is in fact a way to do this using some vary fancy files dubbed as <strong>GeoJSON</strong>.\r\n<h2>What are GeoJSON files?</h2>\r\nI\'m glad you asked. Per Wikipedia, GeoJSON is an open standard format for encoding collections of simple geographical features along with their non-spatial attributes using JSON. What this means is that you can specify collections of lat/long points in a JSON file that is representative of a plot of land. Since they\'re usually written in lat/long values, you can be sure that you\'ll get the same result no matter what map API you\'re using. Here\'s an example of a .geo.json file that diagrams the state of Arkansas:\r\n\r\n[code title=\"arkansas.geo.json\"]\r\n{\r\n  &quot;type&quot;:&quot;FeatureCollection&quot;,\r\n  &quot;features&quot;:[\r\n    {\r\n      &quot;type&quot;:&quot;Feature&quot;,\r\n      &quot;id&quot;:&quot;USA-AR&quot;,\r\n      &quot;properties&quot;:{&quot;fips&quot;:&quot;05&quot;,&quot;name&quot;:&quot;Arkansas&quot;},\r\n      &quot;geometry&quot;:{\r\n        &quot;type&quot;:&quot;Polygon&quot;,\r\n        &quot;coordinates&quot;:[[[-94.473842,36.501861],[-90.152536,36.496384],... ]]\r\n      }\r\n    }\r\n  ]\r\n}\r\n[/code]\r\n\r\nNow you\'re probably thinking \"That\'s cool, but what good does this do me?\" While Google can\'t specifically highlight plots of land on its own, it does have support for loading .geo.json files into your map and styling them however you want. This means that we can accomplish what we wanted to earlier: coloring in states, countries, or anything really. Here\'s how we could include this arkansas.geo.json file into our existing map from above:\r\n\r\n[javascript title=\"map.html\"]\r\nmap.data.loadGeoJson(\'./arkansas.geo.json\');\r\n[/javascript]\r\n\r\nAnd that\'s it! This will insert the data from our .geo.json file into our map\'s data - you probably won\'t notice anything though because we don\'t have any fill color. Let\'s add some highlighting to this data:\r\n\r\n[javascript title=\"map.html\"]\r\n// Overlay Styles\r\nmap.data.setStyle({\r\n  fillColor: \'#2687bf\',\r\n  fillOpacity: .3,\r\n  strokeWeight: 0\r\n});\r\n[/javascript]\r\n\r\nPerfect, now our map will specifically color in the state of Arkansas with a translucent blue. And that\'s about all there is to it - now you can create Google Maps that highlight any plot of land you want. To see an example of everything we\'ve discussed here, check out my demo down below.\r\n<h2>Where to get GeoJSON files?</h2>\r\nYou may be left with a question right about now: \"Where am I supposed to find the GeoJSON files I need?\" And that\'s a good question. Luckily, an awesome developer gathered GeoJSON files for every single country in the world, and if you\'re wanting to map out the USA, he even gathered GeoJSON files for every single state AND its cities, all inside of a public GitHub repo.\r\n\r\nCheck it out here: <a href=\"https://github.com/johan/world.geo.json\" target=\"_blank\">https://github.com/johan/world.geo.json</a>\r\n\r\n<hr class=\"short\" />\r\n\r\n<h2>Live Demo</h2>\r\n<a title=\"GeoJSON Demo\" href=\"http://labs.thesocietea.org/geojson-demo/\" target=\"_blank\">Check out my demo</a> of using GeoJSON with the Google Maps API.\r\n\r\nThe <a href=\"https://github.com/alkrauss48/labs/tree/master/geojson-demo\" target=\"_blank\">source code</a> is freely available too.','Using GeoJSON files with Google Maps API','','inherit','open','open','','282-revision-v1','','','2014-09-05 12:33:20','2014-09-05 12:33:20','',282,'http://thesocietea.org/2014/09/282-revision-v1/',0,'revision','',0),(325,1,'2014-09-17 00:03:04','2014-09-17 00:03:04','As we continue to use more advanced programming languages, we\'re able to get some seriously powerful development done with significantly less code that does increasingly more awesome stuff, but that comes at a price. Since we don\'t deal as often with low-level computation and processing anymore, it\'s only normal that we don\'t have understanding about topics like what the stack is versus the heap, or how compilation really works, or what static vs dynamic typing is, or type introspection, or garbage collection, etc. Now I\'m not saying every developer is ignorant of these, as most of us certainly aren\'t, but I do feel like it\'s worth revisiting some of the <em>old-school</em> important topics that we may miss out on these days.\r\n\r\nI know I\'ve opened up a wormhole of topics just now, but right now I\'m only focusing on one: <strong>the</strong> <strong>stack vs. the heap</strong>. Both the stack and the heap refer to different locations where memory (typically variables) is managed, with significantly different strategies\r\n<h2>The Stack</h2>\r\nThe stack is a special region of memory that exists on every thread that your application is running on. It works in a LIFO (Last In, First Out) fashion, meaning that as soon as you allocate - or \"push\" - memory on to the stack, that chunk of memory will be the first to be deallocated - or \"popped.\"Every time a function declares a new variable, it is \"pushed\" onto the stack, and after that variable falls out of scope (such as when the function closes), that variable will be deallocated from the stack. Once a stack variable is freed, that region of memory becomes available for other stack variables.\r\n\r\nDue to the pushing and popping nature of the stack, memory management is very logical and is able to be handled completely by the CPU; this makes it very quick, especially since each byte in the stack tends to be reused very frequently which means it tends to be mapped to the processor\'s cache. However, there are some cons to this form of strict management. The size of the stack is a fixed value, and is decided when the thread is created, and each variable has a maximum size that it can occupy based on its data type; this prevents certain variables such as integers from ever growing beyond a certain value, and forces more complex data types such as arrays to know how large they will be prior to runtime because they can\'t ever be resized. Variables allocated on the stack also are always local in nature, since variables placed on the stack are always next in line to be popped (unless more variables are pushed prior to the popping of earlier variables).\r\n\r\nOverall, the stack exceeds in managing memory with all static and predefined in terms of size, and not global in nature. But what if you need data structures with a more dynamic nature, or global variables? This is where the heap comes into play.\r\n<h2>The Heap</h2>','Stack vs Heap: What Are They?','','inherit','open','open','','301-revision-v1','','','2014-09-17 00:03:04','2014-09-17 00:03:04','',301,'http://thesocietea.org/2014/09/301-revision-v1/',0,'revision','',0),(327,1,'2014-09-18 01:15:05','0000-00-00 00:00:00','','Auto Draft','','auto-draft','open','open','','','','','2014-09-18 01:15:05','0000-00-00 00:00:00','',0,'http://thesocietea.org/?p=327',0,'post','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (25,2,0),(26,2,0),(27,2,0),(32,2,0),(142,1,0),(142,3,0),(151,2,0),(154,1,0),(158,1,0),(167,1,0),(172,1,0),(220,1,0),(233,1,0),(261,1,0),(282,1,0),(301,1,0),(305,1,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,10),(2,2,'nav_menu','',0,5),(3,3,'post_tag','',0,1);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'Uncategorized','uncategorized',0),(2,'Main Menu','main-menu',0),(3,'tea','tea',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'first_name',''),(2,1,'last_name',''),(3,1,'nickname','admin'),(4,1,'description',''),(5,1,'rich_editing','true'),(6,1,'comment_shortcuts','false'),(7,1,'admin_color','fresh'),(8,1,'use_ssl','0'),(9,1,'show_admin_bar_front','true'),(10,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(11,1,'wp_user_level','10'),(12,1,'dismissed_wp_pointers','wp350_media,wp360_revisions,wp360_locks,wp390_widgets,disqus_settings_pointer'),(13,1,'show_welcome_panel','1'),(14,1,'wp_user-settings','dfw_width=662&hidetb=1&editor=html&libraryContent=browse&wplink=1&widgets_access=off&imgsize=full&ed_size=503'),(15,1,'wp_user-settings-time','1409792164'),(16,1,'wp_dashboard_quick_press_last_post_id','327'),(17,1,'managenav-menuscolumnshidden','a:3:{i:0;s:11:\"link-target\";i:1;s:3:\"xfn\";i:2;s:11:\"description\";}'),(18,1,'metaboxhidden_nav-menus','a:3:{i:0;s:8:\"add-post\";i:1;s:12:\"add-post_tag\";i:2;s:15:\"add-post_format\";}'),(19,1,'nav_menu_recently_edited','2'),(20,1,'session_tokens','a:1:{s:64:\"fbad0094497bf2f8102db1da31096f46b38450abedf7cd1bf312fdf4d4cc6741\";i:1411082845;}'),(21,1,'wp_media_library_mode','grid');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(64) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(60) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'admin','$P$BiQDTSRz.lb8w24WpGpM/cStQ1dtfy/','admin','alkrauss48@gmail.com','','2014-06-02 22:35:10','',0,'admin');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-09-25 12:52:44
